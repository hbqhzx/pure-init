// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    pipeline "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/pipeline/models"
)

type GetPipelineInstancesByUuidsRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* 流水线执行实例ID，多个ID用逗号分隔  */
    Uuids string `json:"uuids"`

    /* 流水线执行的状态，如果isSimple是true，只显示每个stage的状态, 而stage中的action状态将被忽略 (Optional) */
    IsSimple *bool `json:"isSimple"`
}

/*
 * param regionId: Region ID (Required)
 * param uuids: 流水线执行实例ID，多个ID用逗号分隔 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetPipelineInstancesByUuidsRequest(
    regionId string,
    uuids string,
) *GetPipelineInstancesByUuidsRequest {

	return &GetPipelineInstancesByUuidsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instances",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        Uuids: uuids,
	}
}

/*
 * param regionId: Region ID (Required)
 * param uuids: 流水线执行实例ID，多个ID用逗号分隔 (Required)
 * param isSimple: 流水线执行的状态，如果isSimple是true，只显示每个stage的状态, 而stage中的action状态将被忽略 (Optional)
 */
func NewGetPipelineInstancesByUuidsRequestWithAllParams(
    regionId string,
    uuids string,
    isSimple *bool,
) *GetPipelineInstancesByUuidsRequest {

    return &GetPipelineInstancesByUuidsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Uuids: uuids,
        IsSimple: isSimple,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetPipelineInstancesByUuidsRequestWithoutParam() *GetPipelineInstancesByUuidsRequest {

    return &GetPipelineInstancesByUuidsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *GetPipelineInstancesByUuidsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param uuids: 流水线执行实例ID，多个ID用逗号分隔(Required) */
func (r *GetPipelineInstancesByUuidsRequest) SetUuids(uuids string) {
    r.Uuids = uuids
}

/* param isSimple: 流水线执行的状态，如果isSimple是true，只显示每个stage的状态, 而stage中的action状态将被忽略(Optional) */
func (r *GetPipelineInstancesByUuidsRequest) SetIsSimple(isSimple bool) {
    r.IsSimple = &isSimple
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetPipelineInstancesByUuidsRequest) GetRegionId() string {
    return r.RegionId
}

type GetPipelineInstancesByUuidsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetPipelineInstancesByUuidsResult `json:"result"`
}

type GetPipelineInstancesByUuidsResult struct {
    PipelineInstances []pipeline.PipelineInstance `json:"pipelineInstances"`
}