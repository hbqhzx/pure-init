// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type ManualActionRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* 流水线uuid  */
    Uuid string `json:"uuid"`

    /* 流水线实例uuid  */
    InstanceUuid string `json:"instanceUuid"`

    /* 动作UUID  */
    ActionUuid string `json:"actionUuid"`

    /* 手动设置的状态，如SUCCESS,FAILED  */
    Status string `json:"status"`
}

/*
 * param regionId: Region ID (Required)
 * param uuid: 流水线uuid (Required)
 * param instanceUuid: 流水线实例uuid (Required)
 * param actionUuid: 动作UUID (Required)
 * param status: 手动设置的状态，如SUCCESS,FAILED (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewManualActionRequest(
    regionId string,
    uuid string,
    instanceUuid string,
    actionUuid string,
    status string,
) *ManualActionRequest {

	return &ManualActionRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/pipeline/{uuid}/instances/{instanceUuid}/actions/{actionUuid}:manual",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        Uuid: uuid,
        InstanceUuid: instanceUuid,
        ActionUuid: actionUuid,
        Status: status,
	}
}

/*
 * param regionId: Region ID (Required)
 * param uuid: 流水线uuid (Required)
 * param instanceUuid: 流水线实例uuid (Required)
 * param actionUuid: 动作UUID (Required)
 * param status: 手动设置的状态，如SUCCESS,FAILED (Required)
 */
func NewManualActionRequestWithAllParams(
    regionId string,
    uuid string,
    instanceUuid string,
    actionUuid string,
    status string,
) *ManualActionRequest {

    return &ManualActionRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/pipeline/{uuid}/instances/{instanceUuid}/actions/{actionUuid}:manual",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Uuid: uuid,
        InstanceUuid: instanceUuid,
        ActionUuid: actionUuid,
        Status: status,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewManualActionRequestWithoutParam() *ManualActionRequest {

    return &ManualActionRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/pipeline/{uuid}/instances/{instanceUuid}/actions/{actionUuid}:manual",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *ManualActionRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param uuid: 流水线uuid(Required) */
func (r *ManualActionRequest) SetUuid(uuid string) {
    r.Uuid = uuid
}

/* param instanceUuid: 流水线实例uuid(Required) */
func (r *ManualActionRequest) SetInstanceUuid(instanceUuid string) {
    r.InstanceUuid = instanceUuid
}

/* param actionUuid: 动作UUID(Required) */
func (r *ManualActionRequest) SetActionUuid(actionUuid string) {
    r.ActionUuid = actionUuid
}

/* param status: 手动设置的状态，如SUCCESS,FAILED(Required) */
func (r *ManualActionRequest) SetStatus(status string) {
    r.Status = status
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ManualActionRequest) GetRegionId() string {
    return r.RegionId
}

type ManualActionResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ManualActionResult `json:"result"`
}

type ManualActionResult struct {
    InstanceUuid string `json:"instanceUuid"`
    ActionUuid string `json:"actionUuid"`
}