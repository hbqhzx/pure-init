// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    quota "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/quota/models"
)

type QueryUserQuotaListRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* 业务线 (Optional) */
    AppCode *string `json:"appCode"`

    /* 可用配额 (Optional) */
    AvailableQuota *int `json:"availableQuota"`

    /*  (Optional) */
    CountSql *bool `json:"countSql"`

    /* id (Optional) */
    Id *int `json:"id"`

    /*  (Optional) */
    OrderBy *string `json:"orderBy"`

    /*  (Optional) */
    PageNum *int `json:"pageNum"`

    /*  (Optional) */
    PageSize *int `json:"pageSize"`

    /*  (Optional) */
    PageSizeZero *bool `json:"pageSizeZero"`

    /* 用户pin (Optional) */
    Pin *string `json:"pin"`

    /* 产品名称 (Optional) */
    ProductName *string `json:"productName"`

    /*  (Optional) */
    Reasonable *bool `json:"reasonable"`

    /* 地域 (Optional) */
    Region *string `json:"region"`

    /* 区域配额 (Optional) */
    RegionQuota *int `json:"regionQuota"`

    /* 父层id (Optional) */
    ResourceId *string `json:"resourceId"`

    /* 资源产品线 (Optional) */
    ServiceCode *string `json:"serviceCode"`

    /* 站点类型 (Optional) */
    SiteType *int `json:"siteType"`

    /* 已用配额 (Optional) */
    UsedQuota *int `json:"usedQuota"`

    /* 用户该地域该资源下的配额值 (Optional) */
    UserQuota *int `json:"userQuota"`
}

/*
 * param regionId: Region ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryUserQuotaListRequest(
    regionId string,
) *QueryUserQuotaListRequest {

	return &QueryUserQuotaListRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/userQuota:list",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: Region ID (Required)
 * param appCode: 业务线 (Optional)
 * param availableQuota: 可用配额 (Optional)
 * param countSql:  (Optional)
 * param id: id (Optional)
 * param orderBy:  (Optional)
 * param pageNum:  (Optional)
 * param pageSize:  (Optional)
 * param pageSizeZero:  (Optional)
 * param pin: 用户pin (Optional)
 * param productName: 产品名称 (Optional)
 * param reasonable:  (Optional)
 * param region: 地域 (Optional)
 * param regionQuota: 区域配额 (Optional)
 * param resourceId: 父层id (Optional)
 * param serviceCode: 资源产品线 (Optional)
 * param siteType: 站点类型 (Optional)
 * param usedQuota: 已用配额 (Optional)
 * param userQuota: 用户该地域该资源下的配额值 (Optional)
 */
func NewQueryUserQuotaListRequestWithAllParams(
    regionId string,
    appCode *string,
    availableQuota *int,
    countSql *bool,
    id *int,
    orderBy *string,
    pageNum *int,
    pageSize *int,
    pageSizeZero *bool,
    pin *string,
    productName *string,
    reasonable *bool,
    region *string,
    regionQuota *int,
    resourceId *string,
    serviceCode *string,
    siteType *int,
    usedQuota *int,
    userQuota *int,
) *QueryUserQuotaListRequest {

    return &QueryUserQuotaListRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/userQuota:list",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        AppCode: appCode,
        AvailableQuota: availableQuota,
        CountSql: countSql,
        Id: id,
        OrderBy: orderBy,
        PageNum: pageNum,
        PageSize: pageSize,
        PageSizeZero: pageSizeZero,
        Pin: pin,
        ProductName: productName,
        Reasonable: reasonable,
        Region: region,
        RegionQuota: regionQuota,
        ResourceId: resourceId,
        ServiceCode: serviceCode,
        SiteType: siteType,
        UsedQuota: usedQuota,
        UserQuota: userQuota,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryUserQuotaListRequestWithoutParam() *QueryUserQuotaListRequest {

    return &QueryUserQuotaListRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/userQuota:list",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *QueryUserQuotaListRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param appCode: 业务线(Optional) */
func (r *QueryUserQuotaListRequest) SetAppCode(appCode string) {
    r.AppCode = &appCode
}

/* param availableQuota: 可用配额(Optional) */
func (r *QueryUserQuotaListRequest) SetAvailableQuota(availableQuota int) {
    r.AvailableQuota = &availableQuota
}

/* param countSql: (Optional) */
func (r *QueryUserQuotaListRequest) SetCountSql(countSql bool) {
    r.CountSql = &countSql
}

/* param id: id(Optional) */
func (r *QueryUserQuotaListRequest) SetId(id int) {
    r.Id = &id
}

/* param orderBy: (Optional) */
func (r *QueryUserQuotaListRequest) SetOrderBy(orderBy string) {
    r.OrderBy = &orderBy
}

/* param pageNum: (Optional) */
func (r *QueryUserQuotaListRequest) SetPageNum(pageNum int) {
    r.PageNum = &pageNum
}

/* param pageSize: (Optional) */
func (r *QueryUserQuotaListRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param pageSizeZero: (Optional) */
func (r *QueryUserQuotaListRequest) SetPageSizeZero(pageSizeZero bool) {
    r.PageSizeZero = &pageSizeZero
}

/* param pin: 用户pin(Optional) */
func (r *QueryUserQuotaListRequest) SetPin(pin string) {
    r.Pin = &pin
}

/* param productName: 产品名称(Optional) */
func (r *QueryUserQuotaListRequest) SetProductName(productName string) {
    r.ProductName = &productName
}

/* param reasonable: (Optional) */
func (r *QueryUserQuotaListRequest) SetReasonable(reasonable bool) {
    r.Reasonable = &reasonable
}

/* param region: 地域(Optional) */
func (r *QueryUserQuotaListRequest) SetRegion(region string) {
    r.Region = &region
}

/* param regionQuota: 区域配额(Optional) */
func (r *QueryUserQuotaListRequest) SetRegionQuota(regionQuota int) {
    r.RegionQuota = &regionQuota
}

/* param resourceId: 父层id(Optional) */
func (r *QueryUserQuotaListRequest) SetResourceId(resourceId string) {
    r.ResourceId = &resourceId
}

/* param serviceCode: 资源产品线(Optional) */
func (r *QueryUserQuotaListRequest) SetServiceCode(serviceCode string) {
    r.ServiceCode = &serviceCode
}

/* param siteType: 站点类型(Optional) */
func (r *QueryUserQuotaListRequest) SetSiteType(siteType int) {
    r.SiteType = &siteType
}

/* param usedQuota: 已用配额(Optional) */
func (r *QueryUserQuotaListRequest) SetUsedQuota(usedQuota int) {
    r.UsedQuota = &usedQuota
}

/* param userQuota: 用户该地域该资源下的配额值(Optional) */
func (r *QueryUserQuotaListRequest) SetUserQuota(userQuota int) {
    r.UserQuota = &userQuota
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryUserQuotaListRequest) GetRegionId() string {
    return r.RegionId
}

type QueryUserQuotaListResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryUserQuotaListResult `json:"result"`
}

type QueryUserQuotaListResult struct {
    ResultList []quota.UserQuotaResVo `json:"resultList"`
    TotalCount int `json:"totalCount"`
    TotalPage int `json:"totalPage"`
}