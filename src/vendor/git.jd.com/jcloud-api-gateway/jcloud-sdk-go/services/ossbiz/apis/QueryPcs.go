// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    ossbiz "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/ossbiz/models"
)

type QueryPcsRequest struct {

    core.JDCloudRequest

    /* Region ID，例如：cn-north-1  */
    RegionId string `json:"regionId"`

    /* 查询pin  */
    Pin string `json:"pin"`

    /* 查询dataCenter  */
    DataCenter string `json:"dataCenter"`

    /* 查询bucketName (Optional) */
    BucketName *string `json:"bucketName"`

    /* 查询url  */
    Url string `json:"url"`

    /* 查询type  */
    Type string `json:"type"`

    /* 查询startDate (Optional) */
    StartDate *string `json:"startDate"`

    /* 查询endDate (Optional) */
    EndDate *string `json:"endDate"`
}

/*
 * param regionId: Region ID，例如：cn-north-1 (Required)
 * param pin: 查询pin (Required)
 * param dataCenter: 查询dataCenter (Required)
 * param url: 查询url (Required)
 * param type_: 查询type (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryPcsRequest(
    regionId string,
    pin string,
    dataCenter string,
    url string,
    type_ string,
) *QueryPcsRequest {

	return &QueryPcsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/pcs/queryPcs",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        Pin: pin,
        DataCenter: dataCenter,
        Url: url,
        Type: type_,
	}
}

/*
 * param regionId: Region ID，例如：cn-north-1 (Required)
 * param pin: 查询pin (Required)
 * param dataCenter: 查询dataCenter (Required)
 * param bucketName: 查询bucketName (Optional)
 * param url: 查询url (Required)
 * param type_: 查询type (Required)
 * param startDate: 查询startDate (Optional)
 * param endDate: 查询endDate (Optional)
 */
func NewQueryPcsRequestWithAllParams(
    regionId string,
    pin string,
    dataCenter string,
    bucketName *string,
    url string,
    type_ string,
    startDate *string,
    endDate *string,
) *QueryPcsRequest {

    return &QueryPcsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/pcs/queryPcs",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Pin: pin,
        DataCenter: dataCenter,
        BucketName: bucketName,
        Url: url,
        Type: type_,
        StartDate: startDate,
        EndDate: endDate,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryPcsRequestWithoutParam() *QueryPcsRequest {

    return &QueryPcsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/pcs/queryPcs",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID，例如：cn-north-1(Required) */
func (r *QueryPcsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param pin: 查询pin(Required) */
func (r *QueryPcsRequest) SetPin(pin string) {
    r.Pin = pin
}

/* param dataCenter: 查询dataCenter(Required) */
func (r *QueryPcsRequest) SetDataCenter(dataCenter string) {
    r.DataCenter = dataCenter
}

/* param bucketName: 查询bucketName(Optional) */
func (r *QueryPcsRequest) SetBucketName(bucketName string) {
    r.BucketName = &bucketName
}

/* param url: 查询url(Required) */
func (r *QueryPcsRequest) SetUrl(url string) {
    r.Url = url
}

/* param type_: 查询type(Required) */
func (r *QueryPcsRequest) SetType(type_ string) {
    r.Type = type_
}

/* param startDate: 查询startDate(Optional) */
func (r *QueryPcsRequest) SetStartDate(startDate string) {
    r.StartDate = &startDate
}

/* param endDate: 查询endDate(Optional) */
func (r *QueryPcsRequest) SetEndDate(endDate string) {
    r.EndDate = &endDate
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryPcsRequest) GetRegionId() string {
    return r.RegionId
}

type QueryPcsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryPcsResult `json:"result"`
}

type QueryPcsResult struct {
    DownBytesList []ossbiz.Pcs `json:"downBytesList"`
    PutCountsList []ossbiz.Pcs `json:"putCountsList"`
    GetCountsList []ossbiz.Pcs `json:"getCountsList"`
}