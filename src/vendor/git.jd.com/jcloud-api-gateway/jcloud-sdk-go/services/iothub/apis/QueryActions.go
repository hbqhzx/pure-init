// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    iothub "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/iothub/models"
)

type QueryActionsRequest struct {

    core.JDCloudRequest

    /* 规则Id  */
    RuleId string `json:"ruleId"`

    /* Hub实例Id  */
    InstanceId string `json:"instanceId"`
}

/*
 * param ruleId: 规则Id (Required)
 * param instanceId: Hub实例Id (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryActionsRequest(
    ruleId string,
    instanceId string,
) *QueryActionsRequest {

	return &QueryActionsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/instance/{instanceId}/rule/{ruleId}/action:queryList",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RuleId: ruleId,
        InstanceId: instanceId,
	}
}

/*
 * param ruleId: 规则Id (Required)
 * param instanceId: Hub实例Id (Required)
 */
func NewQueryActionsRequestWithAllParams(
    ruleId string,
    instanceId string,
) *QueryActionsRequest {

    return &QueryActionsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/instance/{instanceId}/rule/{ruleId}/action:queryList",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RuleId: ruleId,
        InstanceId: instanceId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryActionsRequestWithoutParam() *QueryActionsRequest {

    return &QueryActionsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/instance/{instanceId}/rule/{ruleId}/action:queryList",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param ruleId: 规则Id(Required) */
func (r *QueryActionsRequest) SetRuleId(ruleId string) {
    r.RuleId = ruleId
}

/* param instanceId: Hub实例Id(Required) */
func (r *QueryActionsRequest) SetInstanceId(instanceId string) {
    r.InstanceId = instanceId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryActionsRequest) GetRegionId() string {
    return ""
}

type QueryActionsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryActionsResult `json:"result"`
}

type QueryActionsResult struct {
    Actions []iothub.Action `json:"actions"`
}