// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type EnrollDeviceByFileRequest struct {

    core.JDCloudRequest

    /* 设备文件上传云存储后保存的路径 (Optional) */
    DeviceFileName *string `json:"deviceFileName"`

    /* 设备目标实例的instanceId (Optional) */
    InstanceId *string `json:"instanceId"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewEnrollDeviceByFileRequest(
) *EnrollDeviceByFileRequest {

	return &EnrollDeviceByFileRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/device:addByFile",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param deviceFileName: 设备文件上传云存储后保存的路径 (Optional)
 * param instanceId: 设备目标实例的instanceId (Optional)
 */
func NewEnrollDeviceByFileRequestWithAllParams(
    deviceFileName *string,
    instanceId *string,
) *EnrollDeviceByFileRequest {

    return &EnrollDeviceByFileRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/device:addByFile",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        DeviceFileName: deviceFileName,
        InstanceId: instanceId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewEnrollDeviceByFileRequestWithoutParam() *EnrollDeviceByFileRequest {

    return &EnrollDeviceByFileRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/device:addByFile",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param deviceFileName: 设备文件上传云存储后保存的路径(Optional) */
func (r *EnrollDeviceByFileRequest) SetDeviceFileName(deviceFileName string) {
    r.DeviceFileName = &deviceFileName
}

/* param instanceId: 设备目标实例的instanceId(Optional) */
func (r *EnrollDeviceByFileRequest) SetInstanceId(instanceId string) {
    r.InstanceId = &instanceId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r EnrollDeviceByFileRequest) GetRegionId() string {
    return ""
}

type EnrollDeviceByFileResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result EnrollDeviceByFileResult `json:"result"`
}

type EnrollDeviceByFileResult struct {
}