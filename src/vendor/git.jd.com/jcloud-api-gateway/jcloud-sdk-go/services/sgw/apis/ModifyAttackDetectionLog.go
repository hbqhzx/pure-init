// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    sgw "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/sgw/models"
)

type ModifyAttackDetectionLogRequest struct {

    core.JDCloudRequest

    /* 日志id，多个以逗号隔开  */
    LogId string `json:"logId"`

    /* 添加IP黑名单所需基本信息。  */
    AttackDetectionLog *sgw.AttackDetectionLog `json:"attackDetectionLog"`
}

/*
 * param logId: 日志id，多个以逗号隔开 (Required)
 * param attackDetectionLog: 添加IP黑名单所需基本信息。 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewModifyAttackDetectionLogRequest(
    logId string,
    attackDetectionLog *sgw.AttackDetectionLog,
) *ModifyAttackDetectionLogRequest {

	return &ModifyAttackDetectionLogRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/attackDetectionLogs/{logId}",
			Method:  "PATCH",
			Header:  nil,
			Version: "v1",
		},
        LogId: logId,
        AttackDetectionLog: attackDetectionLog,
	}
}

/*
 * param logId: 日志id，多个以逗号隔开 (Required)
 * param attackDetectionLog: 添加IP黑名单所需基本信息。 (Required)
 */
func NewModifyAttackDetectionLogRequestWithAllParams(
    logId string,
    attackDetectionLog *sgw.AttackDetectionLog,
) *ModifyAttackDetectionLogRequest {

    return &ModifyAttackDetectionLogRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/attackDetectionLogs/{logId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
        LogId: logId,
        AttackDetectionLog: attackDetectionLog,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewModifyAttackDetectionLogRequestWithoutParam() *ModifyAttackDetectionLogRequest {

    return &ModifyAttackDetectionLogRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/attackDetectionLogs/{logId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param logId: 日志id，多个以逗号隔开(Required) */
func (r *ModifyAttackDetectionLogRequest) SetLogId(logId string) {
    r.LogId = logId
}

/* param attackDetectionLog: 添加IP黑名单所需基本信息。(Required) */
func (r *ModifyAttackDetectionLogRequest) SetAttackDetectionLog(attackDetectionLog *sgw.AttackDetectionLog) {
    r.AttackDetectionLog = attackDetectionLog
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ModifyAttackDetectionLogRequest) GetRegionId() string {
    return ""
}

type ModifyAttackDetectionLogResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ModifyAttackDetectionLogResult `json:"result"`
}

type ModifyAttackDetectionLogResult struct {
}