// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    lb "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/lb/models"
)

type UpdateListenerRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* 监听器ID  */
    ListenerId string `json:"listenerId"`

    /* 监听器名字,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符 (Optional) */
    ListenerName *string `json:"listenerName"`

    /* Listener状态, 取值为On或者为Off (Optional) */
    Status *string `json:"status"`

    /* 【alb Https和Tls协议】ssl server证书列表，现只支持一个证书 (Optional) */
    CertificateSpecs []lb.CertificateSpec `json:"certificateSpecs"`

    /* 连接保持时间, >=1，范围为[1,86400] (Optional) */
    ConnectionIdleTimeSeconds *int `json:"connectionIdleTimeSeconds"`

    /* 默认后端服务id (Optional) */
    BackendId *string `json:"backendId"`

    /* 【仅alb支持】转发规则组id (Optional) */
    UrlMapId *string `json:"urlMapId"`

    /* 监听器描述,允许输入UTF-8编码下的全部字符，不超过256字符 (Optional) */
    Description *string `json:"description"`
}

/*
 * param regionId: Region ID (Required)
 * param listenerId: 监听器ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateListenerRequest(
    regionId string,
    listenerId string,
) *UpdateListenerRequest {

	return &UpdateListenerRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/listeners/{listenerId}",
			Method:  "PATCH",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        ListenerId: listenerId,
	}
}

/*
 * param regionId: Region ID (Required)
 * param listenerId: 监听器ID (Required)
 * param listenerName: 监听器名字,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符 (Optional)
 * param status: Listener状态, 取值为On或者为Off (Optional)
 * param certificateSpecs: 【alb Https和Tls协议】ssl server证书列表，现只支持一个证书 (Optional)
 * param connectionIdleTimeSeconds: 连接保持时间, >=1，范围为[1,86400] (Optional)
 * param backendId: 默认后端服务id (Optional)
 * param urlMapId: 【仅alb支持】转发规则组id (Optional)
 * param description: 监听器描述,允许输入UTF-8编码下的全部字符，不超过256字符 (Optional)
 */
func NewUpdateListenerRequestWithAllParams(
    regionId string,
    listenerId string,
    listenerName *string,
    status *string,
    certificateSpecs []lb.CertificateSpec,
    connectionIdleTimeSeconds *int,
    backendId *string,
    urlMapId *string,
    description *string,
) *UpdateListenerRequest {

    return &UpdateListenerRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/listeners/{listenerId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        ListenerId: listenerId,
        ListenerName: listenerName,
        Status: status,
        CertificateSpecs: certificateSpecs,
        ConnectionIdleTimeSeconds: connectionIdleTimeSeconds,
        BackendId: backendId,
        UrlMapId: urlMapId,
        Description: description,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateListenerRequestWithoutParam() *UpdateListenerRequest {

    return &UpdateListenerRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/listeners/{listenerId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *UpdateListenerRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param listenerId: 监听器ID(Required) */
func (r *UpdateListenerRequest) SetListenerId(listenerId string) {
    r.ListenerId = listenerId
}

/* param listenerName: 监听器名字,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符(Optional) */
func (r *UpdateListenerRequest) SetListenerName(listenerName string) {
    r.ListenerName = &listenerName
}

/* param status: Listener状态, 取值为On或者为Off(Optional) */
func (r *UpdateListenerRequest) SetStatus(status string) {
    r.Status = &status
}

/* param certificateSpecs: 【alb Https和Tls协议】ssl server证书列表，现只支持一个证书(Optional) */
func (r *UpdateListenerRequest) SetCertificateSpecs(certificateSpecs []lb.CertificateSpec) {
    r.CertificateSpecs = certificateSpecs
}

/* param connectionIdleTimeSeconds: 连接保持时间, >=1，范围为[1,86400](Optional) */
func (r *UpdateListenerRequest) SetConnectionIdleTimeSeconds(connectionIdleTimeSeconds int) {
    r.ConnectionIdleTimeSeconds = &connectionIdleTimeSeconds
}

/* param backendId: 默认后端服务id(Optional) */
func (r *UpdateListenerRequest) SetBackendId(backendId string) {
    r.BackendId = &backendId
}

/* param urlMapId: 【仅alb支持】转发规则组id(Optional) */
func (r *UpdateListenerRequest) SetUrlMapId(urlMapId string) {
    r.UrlMapId = &urlMapId
}

/* param description: 监听器描述,允许输入UTF-8编码下的全部字符，不超过256字符(Optional) */
func (r *UpdateListenerRequest) SetDescription(description string) {
    r.Description = &description
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateListenerRequest) GetRegionId() string {
    return r.RegionId
}

type UpdateListenerResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateListenerResult `json:"result"`
}

type UpdateListenerResult struct {
}