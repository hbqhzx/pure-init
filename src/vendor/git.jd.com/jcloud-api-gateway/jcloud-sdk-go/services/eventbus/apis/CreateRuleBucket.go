// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type CreateRuleBucketRequest struct {

    core.JDCloudRequest

    /* 地域 Id  */
    RegionId string `json:"regionId"`

    /* 幂等性校验参数,最长36位  */
    ClientToken string `json:"clientToken"`

    /* 订阅的path  */
    PathValues interface{} `json:"pathValues"`

    /* 规则订阅事件名称  */
    SubscribeName string `json:"subscribeName"`
}

/*
 * param regionId: 地域 Id (Required)
 * param clientToken: 幂等性校验参数,最长36位 (Required)
 * param pathValues: 订阅的path (Required)
 * param subscribeName: 规则订阅事件名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateRuleBucketRequest(
    regionId string,
    clientToken string,
    pathValues interface{},
    subscribeName string,
) *CreateRuleBucketRequest {

	return &CreateRuleBucketRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/ruleBucket",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        ClientToken: clientToken,
        PathValues: pathValues,
        SubscribeName: subscribeName,
	}
}

/*
 * param regionId: 地域 Id (Required)
 * param clientToken: 幂等性校验参数,最长36位 (Required)
 * param pathValues: 订阅的path (Required)
 * param subscribeName: 规则订阅事件名称 (Required)
 */
func NewCreateRuleBucketRequestWithAllParams(
    regionId string,
    clientToken string,
    pathValues interface{},
    subscribeName string,
) *CreateRuleBucketRequest {

    return &CreateRuleBucketRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/ruleBucket",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        ClientToken: clientToken,
        PathValues: pathValues,
        SubscribeName: subscribeName,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateRuleBucketRequestWithoutParam() *CreateRuleBucketRequest {

    return &CreateRuleBucketRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/ruleBucket",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域 Id(Required) */
func (r *CreateRuleBucketRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param clientToken: 幂等性校验参数,最长36位(Required) */
func (r *CreateRuleBucketRequest) SetClientToken(clientToken string) {
    r.ClientToken = clientToken
}

/* param pathValues: 订阅的path(Required) */
func (r *CreateRuleBucketRequest) SetPathValues(pathValues interface{}) {
    r.PathValues = pathValues
}

/* param subscribeName: 规则订阅事件名称(Required) */
func (r *CreateRuleBucketRequest) SetSubscribeName(subscribeName string) {
    r.SubscribeName = subscribeName
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateRuleBucketRequest) GetRegionId() string {
    return r.RegionId
}

type CreateRuleBucketResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateRuleBucketResult `json:"result"`
}

type CreateRuleBucketResult struct {
    BucketUuid string `json:"bucketUuid"`
}