// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type RefundRequest struct {

    core.JDCloudRequest

    /* 地域编码，参考OpenAPI公共说明  */
    RegionId string `json:"regionId"`

    /* 发票id  */
    InvoiceId int `json:"invoiceId"`

    /* 退票原因 (Optional) */
    RefundReason *string `json:"refundReason"`

    /* 备注信息 (Optional) */
    Remark *string `json:"remark"`

    /* 物流公司 (Optional) */
    LogisticsCompany *string `json:"logisticsCompany"`

    /* 物流单号 (Optional) */
    LogisticsOrderNumber *string `json:"logisticsOrderNumber"`

    /* 1纸质发票，2电子发票 (Optional) */
    Type *int `json:"type"`
}

/*
 * param regionId: 地域编码，参考OpenAPI公共说明 (Required)
 * param invoiceId: 发票id (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewRefundRequest(
    regionId string,
    invoiceId int,
) *RefundRequest {

	return &RefundRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/invoice/{invoiceId}:refund",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        InvoiceId: invoiceId,
	}
}

/*
 * param regionId: 地域编码，参考OpenAPI公共说明 (Required)
 * param invoiceId: 发票id (Required)
 * param refundReason: 退票原因 (Optional)
 * param remark: 备注信息 (Optional)
 * param logisticsCompany: 物流公司 (Optional)
 * param logisticsOrderNumber: 物流单号 (Optional)
 * param type_: 1纸质发票，2电子发票 (Optional)
 */
func NewRefundRequestWithAllParams(
    regionId string,
    invoiceId int,
    refundReason *string,
    remark *string,
    logisticsCompany *string,
    logisticsOrderNumber *string,
    type_ *int,
) *RefundRequest {

    return &RefundRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/invoice/{invoiceId}:refund",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        InvoiceId: invoiceId,
        RefundReason: refundReason,
        Remark: remark,
        LogisticsCompany: logisticsCompany,
        LogisticsOrderNumber: logisticsOrderNumber,
        Type: type_,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewRefundRequestWithoutParam() *RefundRequest {

    return &RefundRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/invoice/{invoiceId}:refund",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域编码，参考OpenAPI公共说明(Required) */
func (r *RefundRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param invoiceId: 发票id(Required) */
func (r *RefundRequest) SetInvoiceId(invoiceId int) {
    r.InvoiceId = invoiceId
}

/* param refundReason: 退票原因(Optional) */
func (r *RefundRequest) SetRefundReason(refundReason string) {
    r.RefundReason = &refundReason
}

/* param remark: 备注信息(Optional) */
func (r *RefundRequest) SetRemark(remark string) {
    r.Remark = &remark
}

/* param logisticsCompany: 物流公司(Optional) */
func (r *RefundRequest) SetLogisticsCompany(logisticsCompany string) {
    r.LogisticsCompany = &logisticsCompany
}

/* param logisticsOrderNumber: 物流单号(Optional) */
func (r *RefundRequest) SetLogisticsOrderNumber(logisticsOrderNumber string) {
    r.LogisticsOrderNumber = &logisticsOrderNumber
}

/* param type_: 1纸质发票，2电子发票(Optional) */
func (r *RefundRequest) SetType(type_ int) {
    r.Type = &type_
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r RefundRequest) GetRegionId() string {
    return r.RegionId
}

type RefundResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result RefundResult `json:"result"`
}

type RefundResult struct {
    Code int `json:"code"`
    Msg string `json:"msg"`
}