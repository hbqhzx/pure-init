// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    deploy "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/deploy/models"
)

type DescribeStageLogRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* uuid  */
    Uuid string `json:"uuid"`

    /* 部署Id (Optional) */
    DeployId *string `json:"deployId"`

    /* 1部署，2回滚 (Optional) */
    DeployType *int `json:"deployType"`
}

/*
 * param regionId: 地域ID (Required)
 * param uuid: uuid (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeStageLogRequest(
    regionId string,
    uuid string,
) *DescribeStageLogRequest {

	return &DescribeStageLogRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instance/{uuid}/stageLog",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        Uuid: uuid,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param uuid: uuid (Required)
 * param deployId: 部署Id (Optional)
 * param deployType: 1部署，2回滚 (Optional)
 */
func NewDescribeStageLogRequestWithAllParams(
    regionId string,
    uuid string,
    deployId *string,
    deployType *int,
) *DescribeStageLogRequest {

    return &DescribeStageLogRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instance/{uuid}/stageLog",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Uuid: uuid,
        DeployId: deployId,
        DeployType: deployType,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeStageLogRequestWithoutParam() *DescribeStageLogRequest {

    return &DescribeStageLogRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instance/{uuid}/stageLog",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *DescribeStageLogRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param uuid: uuid(Required) */
func (r *DescribeStageLogRequest) SetUuid(uuid string) {
    r.Uuid = uuid
}

/* param deployId: 部署Id(Optional) */
func (r *DescribeStageLogRequest) SetDeployId(deployId string) {
    r.DeployId = &deployId
}

/* param deployType: 1部署，2回滚(Optional) */
func (r *DescribeStageLogRequest) SetDeployType(deployType int) {
    r.DeployType = &deployType
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeStageLogRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeStageLogResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeStageLogResult `json:"result"`
}

type DescribeStageLogResult struct {
    Stages []deploy.StageLog `json:"stages"`
    Status int `json:"status"`
}