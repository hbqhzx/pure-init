// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type AddOrganizationRequest struct {

    core.JDCloudRequest

    /*   */
    RegionId string `json:"regionId"`

    /* 主体id  */
    ContractSubject string `json:"contractSubject"`

    /* org_id  */
    OrgId string `json:"orgId"`

    /* 公司名称  */
    CompanyName string `json:"companyName"`

    /* 纳税人识别码 (Optional) */
    TaxpayerIdCode *string `json:"taxpayerIdCode"`

    /* 地址电话 (Optional) */
    Address *string `json:"address"`

    /* 开户行及账号 (Optional) */
    BankAccount *string `json:"bankAccount"`
}

/*
 * param regionId:  (Required)
 * param contractSubject: 主体id (Required)
 * param orgId: org_id (Required)
 * param companyName: 公司名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewAddOrganizationRequest(
    regionId string,
    contractSubject string,
    orgId string,
    companyName string,
) *AddOrganizationRequest {

	return &AddOrganizationRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/organization:add",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        ContractSubject: contractSubject,
        OrgId: orgId,
        CompanyName: companyName,
	}
}

/*
 * param regionId:  (Required)
 * param contractSubject: 主体id (Required)
 * param orgId: org_id (Required)
 * param companyName: 公司名称 (Required)
 * param taxpayerIdCode: 纳税人识别码 (Optional)
 * param address: 地址电话 (Optional)
 * param bankAccount: 开户行及账号 (Optional)
 */
func NewAddOrganizationRequestWithAllParams(
    regionId string,
    contractSubject string,
    orgId string,
    companyName string,
    taxpayerIdCode *string,
    address *string,
    bankAccount *string,
) *AddOrganizationRequest {

    return &AddOrganizationRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/organization:add",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        ContractSubject: contractSubject,
        OrgId: orgId,
        CompanyName: companyName,
        TaxpayerIdCode: taxpayerIdCode,
        Address: address,
        BankAccount: bankAccount,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewAddOrganizationRequestWithoutParam() *AddOrganizationRequest {

    return &AddOrganizationRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/organization:add",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: (Required) */
func (r *AddOrganizationRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param contractSubject: 主体id(Required) */
func (r *AddOrganizationRequest) SetContractSubject(contractSubject string) {
    r.ContractSubject = contractSubject
}

/* param orgId: org_id(Required) */
func (r *AddOrganizationRequest) SetOrgId(orgId string) {
    r.OrgId = orgId
}

/* param companyName: 公司名称(Required) */
func (r *AddOrganizationRequest) SetCompanyName(companyName string) {
    r.CompanyName = companyName
}

/* param taxpayerIdCode: 纳税人识别码(Optional) */
func (r *AddOrganizationRequest) SetTaxpayerIdCode(taxpayerIdCode string) {
    r.TaxpayerIdCode = &taxpayerIdCode
}

/* param address: 地址电话(Optional) */
func (r *AddOrganizationRequest) SetAddress(address string) {
    r.Address = &address
}

/* param bankAccount: 开户行及账号(Optional) */
func (r *AddOrganizationRequest) SetBankAccount(bankAccount string) {
    r.BankAccount = &bankAccount
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r AddOrganizationRequest) GetRegionId() string {
    return r.RegionId
}

type AddOrganizationResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result AddOrganizationResult `json:"result"`
}

type AddOrganizationResult struct {
    Result bool `json:"result"`
}