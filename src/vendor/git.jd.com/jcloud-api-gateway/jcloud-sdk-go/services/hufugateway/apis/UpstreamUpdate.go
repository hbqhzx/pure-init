// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type UpstreamUpdateRequest struct {

    core.JDCloudRequest

    /* customerId  */
    CustomerId string `json:"customerId"`

    /* method  */
    Method string `json:"method"`

    /* 回源地址  */
    UpstreamUrl string `json:"upstreamUrl"`
}

/*
 * param customerId: customerId (Required)
 * param method: method (Required)
 * param upstreamUrl: 回源地址 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpstreamUpdateRequest(
    customerId string,
    method string,
    upstreamUrl string,
) *UpstreamUpdateRequest {

	return &UpstreamUpdateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/hufuupstream",
			Method:  "PATCH",
			Header:  nil,
			Version: "v1",
		},
        CustomerId: customerId,
        Method: method,
        UpstreamUrl: upstreamUrl,
	}
}

/*
 * param customerId: customerId (Required)
 * param method: method (Required)
 * param upstreamUrl: 回源地址 (Required)
 */
func NewUpstreamUpdateRequestWithAllParams(
    customerId string,
    method string,
    upstreamUrl string,
) *UpstreamUpdateRequest {

    return &UpstreamUpdateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/hufuupstream",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
        CustomerId: customerId,
        Method: method,
        UpstreamUrl: upstreamUrl,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpstreamUpdateRequestWithoutParam() *UpstreamUpdateRequest {

    return &UpstreamUpdateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/hufuupstream",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param customerId: customerId(Required) */
func (r *UpstreamUpdateRequest) SetCustomerId(customerId string) {
    r.CustomerId = customerId
}

/* param method: method(Required) */
func (r *UpstreamUpdateRequest) SetMethod(method string) {
    r.Method = method
}

/* param upstreamUrl: 回源地址(Required) */
func (r *UpstreamUpdateRequest) SetUpstreamUrl(upstreamUrl string) {
    r.UpstreamUrl = upstreamUrl
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpstreamUpdateRequest) GetRegionId() string {
    return ""
}

type UpstreamUpdateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpstreamUpdateResult `json:"result"`
}

type UpstreamUpdateResult struct {
    Id string `json:"id"`
    UpstreamUrl string `json:"upstreamUrl"`
}