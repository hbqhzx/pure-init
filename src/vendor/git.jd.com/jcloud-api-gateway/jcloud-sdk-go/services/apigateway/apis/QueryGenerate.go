// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    apigateway "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/apigateway/models"
)

type QueryGenerateRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 分组ID  */
    ApiGroupId string `json:"apiGroupId"`

    /* 修订版本号 (Optional) */
    Revision *string `json:"revision"`

    /* 部署ID (Optional) */
    DeploymentId *string `json:"deploymentId"`

    /* 环境信息：test,preview,online (Optional) */
    Environment *string `json:"environment"`
}

/*
 * param regionId: 地域ID (Required)
 * param apiGroupId: 分组ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryGenerateRequest(
    regionId string,
    apiGroupId string,
) *QueryGenerateRequest {

	return &QueryGenerateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apiGroups/{apiGroupId}/generate",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        ApiGroupId: apiGroupId,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param apiGroupId: 分组ID (Required)
 * param revision: 修订版本号 (Optional)
 * param deploymentId: 部署ID (Optional)
 * param environment: 环境信息：test,preview,online (Optional)
 */
func NewQueryGenerateRequestWithAllParams(
    regionId string,
    apiGroupId string,
    revision *string,
    deploymentId *string,
    environment *string,
) *QueryGenerateRequest {

    return &QueryGenerateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apiGroups/{apiGroupId}/generate",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        ApiGroupId: apiGroupId,
        Revision: revision,
        DeploymentId: deploymentId,
        Environment: environment,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryGenerateRequestWithoutParam() *QueryGenerateRequest {

    return &QueryGenerateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apiGroups/{apiGroupId}/generate",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *QueryGenerateRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param apiGroupId: 分组ID(Required) */
func (r *QueryGenerateRequest) SetApiGroupId(apiGroupId string) {
    r.ApiGroupId = apiGroupId
}

/* param revision: 修订版本号(Optional) */
func (r *QueryGenerateRequest) SetRevision(revision string) {
    r.Revision = &revision
}

/* param deploymentId: 部署ID(Optional) */
func (r *QueryGenerateRequest) SetDeploymentId(deploymentId string) {
    r.DeploymentId = &deploymentId
}

/* param environment: 环境信息：test,preview,online(Optional) */
func (r *QueryGenerateRequest) SetEnvironment(environment string) {
    r.Environment = &environment
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryGenerateRequest) GetRegionId() string {
    return r.RegionId
}

type QueryGenerateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryGenerateResult `json:"result"`
}

type QueryGenerateResult struct {
    DownloadUrls []apigateway.GenerateInfo `json:"downloadUrls"`
}