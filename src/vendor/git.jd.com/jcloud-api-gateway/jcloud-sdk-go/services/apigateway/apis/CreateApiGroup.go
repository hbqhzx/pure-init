// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type CreateApiGroupRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 名称  */
    GroupName string `json:"groupName"`

    /* 描述 (Optional) */
    Description *string `json:"description"`

    /* 分组路径前缀，无需添加/ (Optional) */
    Prefix *string `json:"prefix"`

    /* 密钥验证方式：check_exist（密钥必须在访问授权中已配置）、no_check_exist（无需事先配置） (Optional) */
    KeyCheck *string `json:"keyCheck"`

    /* 访问授权方式：None（免鉴权）、jd_cloud（开启访问授权，且必须使用京东云的AK、SK验签）  */
    AuthType string `json:"authType"`
}

/*
 * param regionId: 地域ID (Required)
 * param groupName: 名称 (Required)
 * param authType: 访问授权方式：None（免鉴权）、jd_cloud（开启访问授权，且必须使用京东云的AK、SK验签） (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateApiGroupRequest(
    regionId string,
    groupName string,
    authType string,
) *CreateApiGroupRequest {

	return &CreateApiGroupRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apiGroups",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        GroupName: groupName,
        AuthType: authType,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param groupName: 名称 (Required)
 * param description: 描述 (Optional)
 * param prefix: 分组路径前缀，无需添加/ (Optional)
 * param keyCheck: 密钥验证方式：check_exist（密钥必须在访问授权中已配置）、no_check_exist（无需事先配置） (Optional)
 * param authType: 访问授权方式：None（免鉴权）、jd_cloud（开启访问授权，且必须使用京东云的AK、SK验签） (Required)
 */
func NewCreateApiGroupRequestWithAllParams(
    regionId string,
    groupName string,
    description *string,
    prefix *string,
    keyCheck *string,
    authType string,
) *CreateApiGroupRequest {

    return &CreateApiGroupRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apiGroups",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        GroupName: groupName,
        Description: description,
        Prefix: prefix,
        KeyCheck: keyCheck,
        AuthType: authType,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateApiGroupRequestWithoutParam() *CreateApiGroupRequest {

    return &CreateApiGroupRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apiGroups",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *CreateApiGroupRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param groupName: 名称(Required) */
func (r *CreateApiGroupRequest) SetGroupName(groupName string) {
    r.GroupName = groupName
}

/* param description: 描述(Optional) */
func (r *CreateApiGroupRequest) SetDescription(description string) {
    r.Description = &description
}

/* param prefix: 分组路径前缀，无需添加/(Optional) */
func (r *CreateApiGroupRequest) SetPrefix(prefix string) {
    r.Prefix = &prefix
}

/* param keyCheck: 密钥验证方式：check_exist（密钥必须在访问授权中已配置）、no_check_exist（无需事先配置）(Optional) */
func (r *CreateApiGroupRequest) SetKeyCheck(keyCheck string) {
    r.KeyCheck = &keyCheck
}

/* param authType: 访问授权方式：None（免鉴权）、jd_cloud（开启访问授权，且必须使用京东云的AK、SK验签）(Required) */
func (r *CreateApiGroupRequest) SetAuthType(authType string) {
    r.AuthType = authType
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateApiGroupRequest) GetRegionId() string {
    return r.RegionId
}

type CreateApiGroupResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateApiGroupResult `json:"result"`
}

type CreateApiGroupResult struct {
    ApiGroupId string `json:"apiGroupId"`
    Revision string `json:"revision"`
}