// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type GetBranchRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* 代码存储类型，目前只支持github  */
    Type string `json:"type"`

    /* 分支名称  */
    BranchName string `json:"branchName"`

    /* project名称  */
    RepoName string `json:"repoName"`
}

/*
 * param regionId: Region ID (Required)
 * param type_: 代码存储类型，目前只支持github (Required)
 * param branchName: 分支名称 (Required)
 * param repoName: project名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetBranchRequest(
    regionId string,
    type_ string,
    branchName string,
    repoName string,
) *GetBranchRequest {

	return &GetBranchRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/code/type/{type}/branches/{branchName}",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        Type: type_,
        BranchName: branchName,
        RepoName: repoName,
	}
}

/*
 * param regionId: Region ID (Required)
 * param type_: 代码存储类型，目前只支持github (Required)
 * param branchName: 分支名称 (Required)
 * param repoName: project名称 (Required)
 */
func NewGetBranchRequestWithAllParams(
    regionId string,
    type_ string,
    branchName string,
    repoName string,
) *GetBranchRequest {

    return &GetBranchRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/code/type/{type}/branches/{branchName}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Type: type_,
        BranchName: branchName,
        RepoName: repoName,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetBranchRequestWithoutParam() *GetBranchRequest {

    return &GetBranchRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/code/type/{type}/branches/{branchName}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *GetBranchRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param type_: 代码存储类型，目前只支持github(Required) */
func (r *GetBranchRequest) SetType(type_ string) {
    r.Type = type_
}

/* param branchName: 分支名称(Required) */
func (r *GetBranchRequest) SetBranchName(branchName string) {
    r.BranchName = branchName
}

/* param repoName: project名称(Required) */
func (r *GetBranchRequest) SetRepoName(repoName string) {
    r.RepoName = repoName
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetBranchRequest) GetRegionId() string {
    return r.RegionId
}

type GetBranchResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetBranchResult `json:"result"`
}

type GetBranchResult struct {
    Message string `json:"message"`
    CommitId string `json:"commitId"`
}