// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    compile "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/compile/models"
)

type CreateHookRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* project名称  */
    Name string `json:"name"`

    /*   */
    Params *compile.CreateHookParams `json:"params"`
}

/*
 * param regionId: Region ID (Required)
 * param name: project名称 (Required)
 * param params:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateHookRequest(
    regionId string,
    name string,
    params *compile.CreateHookParams,
) *CreateHookRequest {

	return &CreateHookRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/repos/{name}/hooks",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        Name: name,
        Params: params,
	}
}

/*
 * param regionId: Region ID (Required)
 * param name: project名称 (Required)
 * param params:  (Required)
 */
func NewCreateHookRequestWithAllParams(
    regionId string,
    name string,
    params *compile.CreateHookParams,
) *CreateHookRequest {

    return &CreateHookRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/repos/{name}/hooks",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Name: name,
        Params: params,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateHookRequestWithoutParam() *CreateHookRequest {

    return &CreateHookRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/repos/{name}/hooks",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *CreateHookRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param name: project名称(Required) */
func (r *CreateHookRequest) SetName(name string) {
    r.Name = name
}

/* param params: (Required) */
func (r *CreateHookRequest) SetParams(params *compile.CreateHookParams) {
    r.Params = params
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateHookRequest) GetRegionId() string {
    return r.RegionId
}

type CreateHookResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateHookResult `json:"result"`
}

type CreateHookResult struct {
    Success bool `json:"success"`
}