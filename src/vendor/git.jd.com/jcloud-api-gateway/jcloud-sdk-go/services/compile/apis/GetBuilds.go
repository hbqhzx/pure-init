// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    compile "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/compile/models"
    common "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/common/models"
)

type GetBuildsRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* 排序的字段 (Optional) */
    Sorts []common.Sort `json:"sorts"`

    /* 页码；默认为1 (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 分页大小；默认为10；取值范围[10, 100] (Optional) */
    PageSize *int `json:"pageSize"`

    /* 编译任务名 (Optional) */
    Filters []common.Filter `json:"filters"`
}

/*
 * param regionId: Region ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetBuildsRequest(
    regionId string,
) *GetBuildsRequest {

	return &GetBuildsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/builds",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: Region ID (Required)
 * param sorts: 排序的字段 (Optional)
 * param pageNumber: 页码；默认为1 (Optional)
 * param pageSize: 分页大小；默认为10；取值范围[10, 100] (Optional)
 * param filters: 编译任务名 (Optional)
 */
func NewGetBuildsRequestWithAllParams(
    regionId string,
    sorts []common.Sort,
    pageNumber *int,
    pageSize *int,
    filters []common.Filter,
) *GetBuildsRequest {

    return &GetBuildsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/builds",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Sorts: sorts,
        PageNumber: pageNumber,
        PageSize: pageSize,
        Filters: filters,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetBuildsRequestWithoutParam() *GetBuildsRequest {

    return &GetBuildsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/builds",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *GetBuildsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param sorts: 排序的字段(Optional) */
func (r *GetBuildsRequest) SetSorts(sorts []common.Sort) {
    r.Sorts = sorts
}

/* param pageNumber: 页码；默认为1(Optional) */
func (r *GetBuildsRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

/* param pageSize: 分页大小；默认为10；取值范围[10, 100](Optional) */
func (r *GetBuildsRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param filters: 编译任务名(Optional) */
func (r *GetBuildsRequest) SetFilters(filters []common.Filter) {
    r.Filters = filters
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetBuildsRequest) GetRegionId() string {
    return r.RegionId
}

type GetBuildsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetBuildsResult `json:"result"`
}

type GetBuildsResult struct {
    TotalCount int `json:"totalCount"`
    Builds []compile.SimpleBuild `json:"builds"`
}