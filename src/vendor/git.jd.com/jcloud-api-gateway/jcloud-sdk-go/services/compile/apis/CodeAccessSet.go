// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type CodeAccessSetRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* 代码存储类型，目前只支持github  */
    Type string `json:"type"`

    /* 用户授权的accessToken  */
    AccessToken string `json:"accessToken"`
}

/*
 * param regionId: Region ID (Required)
 * param type_: 代码存储类型，目前只支持github (Required)
 * param accessToken: 用户授权的accessToken (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCodeAccessSetRequest(
    regionId string,
    type_ string,
    accessToken string,
) *CodeAccessSetRequest {

	return &CodeAccessSetRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/code/authorization/type/{type}/accessToken/{accessToken}",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        Type: type_,
        AccessToken: accessToken,
	}
}

/*
 * param regionId: Region ID (Required)
 * param type_: 代码存储类型，目前只支持github (Required)
 * param accessToken: 用户授权的accessToken (Required)
 */
func NewCodeAccessSetRequestWithAllParams(
    regionId string,
    type_ string,
    accessToken string,
) *CodeAccessSetRequest {

    return &CodeAccessSetRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/code/authorization/type/{type}/accessToken/{accessToken}",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Type: type_,
        AccessToken: accessToken,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCodeAccessSetRequestWithoutParam() *CodeAccessSetRequest {

    return &CodeAccessSetRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/code/authorization/type/{type}/accessToken/{accessToken}",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *CodeAccessSetRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param type_: 代码存储类型，目前只支持github(Required) */
func (r *CodeAccessSetRequest) SetType(type_ string) {
    r.Type = type_
}

/* param accessToken: 用户授权的accessToken(Required) */
func (r *CodeAccessSetRequest) SetAccessToken(accessToken string) {
    r.AccessToken = accessToken
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CodeAccessSetRequest) GetRegionId() string {
    return r.RegionId
}

type CodeAccessSetResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CodeAccessSetResult `json:"result"`
}

type CodeAccessSetResult struct {
    Result bool `json:"result"`
}