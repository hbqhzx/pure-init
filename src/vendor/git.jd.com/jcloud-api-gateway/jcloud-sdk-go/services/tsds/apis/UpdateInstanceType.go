// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    tsds "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/tsds/models"
)

type UpdateInstanceTypeRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* Instance type ID  */
    InstanceTypeId string `json:"instanceTypeId"`

    /* Update instance type parameters  */
    InstanceTypeSpec *tsds.InstanceTypeAttribute `json:"instanceTypeSpec"`
}

/*
 * param regionId: Region ID (Required)
 * param instanceTypeId: Instance type ID (Required)
 * param instanceTypeSpec: Update instance type parameters (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateInstanceTypeRequest(
    regionId string,
    instanceTypeId string,
    instanceTypeSpec *tsds.InstanceTypeAttribute,
) *UpdateInstanceTypeRequest {

	return &UpdateInstanceTypeRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instance_types/{instanceTypeId}",
			Method:  "PUT",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        InstanceTypeId: instanceTypeId,
        InstanceTypeSpec: instanceTypeSpec,
	}
}

/*
 * param regionId: Region ID (Required)
 * param instanceTypeId: Instance type ID (Required)
 * param instanceTypeSpec: Update instance type parameters (Required)
 */
func NewUpdateInstanceTypeRequestWithAllParams(
    regionId string,
    instanceTypeId string,
    instanceTypeSpec *tsds.InstanceTypeAttribute,
) *UpdateInstanceTypeRequest {

    return &UpdateInstanceTypeRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instance_types/{instanceTypeId}",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        InstanceTypeId: instanceTypeId,
        InstanceTypeSpec: instanceTypeSpec,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateInstanceTypeRequestWithoutParam() *UpdateInstanceTypeRequest {

    return &UpdateInstanceTypeRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instance_types/{instanceTypeId}",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *UpdateInstanceTypeRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param instanceTypeId: Instance type ID(Required) */
func (r *UpdateInstanceTypeRequest) SetInstanceTypeId(instanceTypeId string) {
    r.InstanceTypeId = instanceTypeId
}

/* param instanceTypeSpec: Update instance type parameters(Required) */
func (r *UpdateInstanceTypeRequest) SetInstanceTypeSpec(instanceTypeSpec *tsds.InstanceTypeAttribute) {
    r.InstanceTypeSpec = instanceTypeSpec
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateInstanceTypeRequest) GetRegionId() string {
    return r.RegionId
}

type UpdateInstanceTypeResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateInstanceTypeResult `json:"result"`
}

type UpdateInstanceTypeResult struct {
}