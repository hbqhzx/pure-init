// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type CheckRechargeRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* 充值单号  */
    OrderId string `json:"orderId"`

    /* 用户pin (Optional) */
    Pin *string `json:"pin"`
}

/*
 * param regionId: Region ID (Required)
 * param orderId: 充值单号 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCheckRechargeRequest(
    regionId string,
    orderId string,
) *CheckRechargeRequest {

	return &CheckRechargeRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/user/recharge/{orderId}",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        OrderId: orderId,
	}
}

/*
 * param regionId: Region ID (Required)
 * param orderId: 充值单号 (Required)
 * param pin: 用户pin (Optional)
 */
func NewCheckRechargeRequestWithAllParams(
    regionId string,
    orderId string,
    pin *string,
) *CheckRechargeRequest {

    return &CheckRechargeRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/user/recharge/{orderId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        OrderId: orderId,
        Pin: pin,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCheckRechargeRequestWithoutParam() *CheckRechargeRequest {

    return &CheckRechargeRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/user/recharge/{orderId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *CheckRechargeRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param orderId: 充值单号(Required) */
func (r *CheckRechargeRequest) SetOrderId(orderId string) {
    r.OrderId = orderId
}

/* param pin: 用户pin(Optional) */
func (r *CheckRechargeRequest) SetPin(pin string) {
    r.Pin = &pin
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CheckRechargeRequest) GetRegionId() string {
    return r.RegionId
}

type CheckRechargeResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CheckRechargeResult `json:"result"`
}

type CheckRechargeResult struct {
    RechargeSuccess bool `json:"rechargeSuccess"`
}