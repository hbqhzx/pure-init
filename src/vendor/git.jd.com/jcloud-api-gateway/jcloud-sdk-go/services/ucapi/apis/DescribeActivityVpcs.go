// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    ucapi "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/ucapi/models"
)

type DescribeActivityVpcsRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* 用户pin  */
    Pin string `json:"pin"`

    /* 地域 (Optional) */
    DataCenter *string `json:"dataCenter"`
}

/*
 * param regionId: Region ID (Required)
 * param pin: 用户pin (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeActivityVpcsRequest(
    regionId string,
    pin string,
) *DescribeActivityVpcsRequest {

	return &DescribeActivityVpcsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/user/{pin}:describeActivityVpcs",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        Pin: pin,
	}
}

/*
 * param regionId: Region ID (Required)
 * param pin: 用户pin (Required)
 * param dataCenter: 地域 (Optional)
 */
func NewDescribeActivityVpcsRequestWithAllParams(
    regionId string,
    pin string,
    dataCenter *string,
) *DescribeActivityVpcsRequest {

    return &DescribeActivityVpcsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/user/{pin}:describeActivityVpcs",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Pin: pin,
        DataCenter: dataCenter,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeActivityVpcsRequestWithoutParam() *DescribeActivityVpcsRequest {

    return &DescribeActivityVpcsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/user/{pin}:describeActivityVpcs",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *DescribeActivityVpcsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param pin: 用户pin(Required) */
func (r *DescribeActivityVpcsRequest) SetPin(pin string) {
    r.Pin = pin
}

/* param dataCenter: 地域(Optional) */
func (r *DescribeActivityVpcsRequest) SetDataCenter(dataCenter string) {
    r.DataCenter = &dataCenter
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeActivityVpcsRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeActivityVpcsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeActivityVpcsResult `json:"result"`
}

type DescribeActivityVpcsResult struct {
    VpcInfo []ucapi.Vpc `json:"vpcInfo"`
}