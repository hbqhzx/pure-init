// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    cdn "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/cdn/models"
)

type QueryCodeStatTrafficTableRequest struct {

    core.JDCloudRequest

    /* 查询起始时间,UTC时间，格式为:yyyy-MM-dd'T'HH:mm:ss'Z'，示例:2018-10-21T10:00:00Z (Optional) */
    StartTime *string `json:"startTime"`

    /* 查询截止时间,UTC时间，格式为:yyyy-MM-dd'T'HH:mm:ss'Z'，示例:2018-10-21T10:00:00Z (Optional) */
    EndTime *string `json:"endTime"`

    /* 需要查询的域名, 必须为用户pin下有权限的域名 (Optional) */
    Domain *string `json:"domain"`

    /*  (Optional) */
    Area *string `json:"area"`

    /*  (Optional) */
    Isp *string `json:"isp"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryCodeStatTrafficTableRequest(
) *QueryCodeStatTrafficTableRequest {

	return &QueryCodeStatTrafficTableRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/console:codestatTable",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param startTime: 查询起始时间,UTC时间，格式为:yyyy-MM-dd'T'HH:mm:ss'Z'，示例:2018-10-21T10:00:00Z (Optional)
 * param endTime: 查询截止时间,UTC时间，格式为:yyyy-MM-dd'T'HH:mm:ss'Z'，示例:2018-10-21T10:00:00Z (Optional)
 * param domain: 需要查询的域名, 必须为用户pin下有权限的域名 (Optional)
 * param area:  (Optional)
 * param isp:  (Optional)
 */
func NewQueryCodeStatTrafficTableRequestWithAllParams(
    startTime *string,
    endTime *string,
    domain *string,
    area *string,
    isp *string,
) *QueryCodeStatTrafficTableRequest {

    return &QueryCodeStatTrafficTableRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/console:codestatTable",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        StartTime: startTime,
        EndTime: endTime,
        Domain: domain,
        Area: area,
        Isp: isp,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryCodeStatTrafficTableRequestWithoutParam() *QueryCodeStatTrafficTableRequest {

    return &QueryCodeStatTrafficTableRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/console:codestatTable",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param startTime: 查询起始时间,UTC时间，格式为:yyyy-MM-dd'T'HH:mm:ss'Z'，示例:2018-10-21T10:00:00Z(Optional) */
func (r *QueryCodeStatTrafficTableRequest) SetStartTime(startTime string) {
    r.StartTime = &startTime
}

/* param endTime: 查询截止时间,UTC时间，格式为:yyyy-MM-dd'T'HH:mm:ss'Z'，示例:2018-10-21T10:00:00Z(Optional) */
func (r *QueryCodeStatTrafficTableRequest) SetEndTime(endTime string) {
    r.EndTime = &endTime
}

/* param domain: 需要查询的域名, 必须为用户pin下有权限的域名(Optional) */
func (r *QueryCodeStatTrafficTableRequest) SetDomain(domain string) {
    r.Domain = &domain
}

/* param area: (Optional) */
func (r *QueryCodeStatTrafficTableRequest) SetArea(area string) {
    r.Area = &area
}

/* param isp: (Optional) */
func (r *QueryCodeStatTrafficTableRequest) SetIsp(isp string) {
    r.Isp = &isp
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryCodeStatTrafficTableRequest) GetRegionId() string {
    return ""
}

type QueryCodeStatTrafficTableResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryCodeStatTrafficTableResult `json:"result"`
}

type QueryCodeStatTrafficTableResult struct {
    Data []cdn.CodeTypeItem `json:"data"`
    SuccessCount int64 `json:"successCount"`
    FailCount int64 `json:"failCount"`
    TotalCount int64 `json:"totalCount"`
    SuccessPercent string `json:"successPercent"`
}