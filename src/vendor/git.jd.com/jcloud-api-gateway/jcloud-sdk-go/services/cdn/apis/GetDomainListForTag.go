// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    cdn "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/cdn/models"
)

type GetDomainListForTagRequest struct {

    core.JDCloudRequest

    /*  (Optional) */
    Domains []string `json:"domains"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetDomainListForTagRequest(
) *GetDomainListForTagRequest {

	return &GetDomainListForTagRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/domain:queryForTag",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param domains:  (Optional)
 */
func NewGetDomainListForTagRequestWithAllParams(
    domains []string,
) *GetDomainListForTagRequest {

    return &GetDomainListForTagRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/domain:queryForTag",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Domains: domains,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetDomainListForTagRequestWithoutParam() *GetDomainListForTagRequest {

    return &GetDomainListForTagRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/domain:queryForTag",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param domains: (Optional) */
func (r *GetDomainListForTagRequest) SetDomains(domains []string) {
    r.Domains = domains
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetDomainListForTagRequest) GetRegionId() string {
    return ""
}

type GetDomainListForTagResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetDomainListForTagResult `json:"result"`
}

type GetDomainListForTagResult struct {
    Domains []cdn.Domain `json:"domains"`
    Total int `json:"total"`
}