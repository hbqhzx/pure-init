// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    cdn "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/cdn/models"
)

type QueryDomainStreamRequest struct {

    core.JDCloudRequest

    /* 用户域名  */
    Domain string `json:"domain"`

    /* pageNumber (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* pageSize (Optional) */
    PageSize *int `json:"pageSize"`
}

/*
 * param domain: 用户域名 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryDomainStreamRequest(
    domain string,
) *QueryDomainStreamRequest {

	return &QueryDomainStreamRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/liveDomain/{domain}/stream:forbiddenInfo",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        Domain: domain,
	}
}

/*
 * param domain: 用户域名 (Required)
 * param pageNumber: pageNumber (Optional)
 * param pageSize: pageSize (Optional)
 */
func NewQueryDomainStreamRequestWithAllParams(
    domain string,
    pageNumber *int,
    pageSize *int,
) *QueryDomainStreamRequest {

    return &QueryDomainStreamRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/liveDomain/{domain}/stream:forbiddenInfo",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        Domain: domain,
        PageNumber: pageNumber,
        PageSize: pageSize,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryDomainStreamRequestWithoutParam() *QueryDomainStreamRequest {

    return &QueryDomainStreamRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/liveDomain/{domain}/stream:forbiddenInfo",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param domain: 用户域名(Required) */
func (r *QueryDomainStreamRequest) SetDomain(domain string) {
    r.Domain = domain
}

/* param pageNumber: pageNumber(Optional) */
func (r *QueryDomainStreamRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

/* param pageSize: pageSize(Optional) */
func (r *QueryDomainStreamRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryDomainStreamRequest) GetRegionId() string {
    return ""
}

type QueryDomainStreamResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryDomainStreamResult `json:"result"`
}

type QueryDomainStreamResult struct {
    Total int `json:"total"`
    StreamList []cdn.ForbiddenStream `json:"streamList"`
}