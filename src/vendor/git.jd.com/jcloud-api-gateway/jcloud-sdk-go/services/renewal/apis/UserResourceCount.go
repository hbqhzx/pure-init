// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    renewal "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/renewal/models"
)

type UserResourceCountRequest struct {

    core.JDCloudRequest

    /*   */
    RegionId string `json:"regionId"`

    /*   */
    QueryType string `json:"queryType"`
}

/*
 * param regionId:  (Required)
 * param queryType:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUserResourceCountRequest(
    regionId string,
    queryType string,
) *UserResourceCountRequest {

	return &UserResourceCountRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/userResourceCount",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        QueryType: queryType,
	}
}

/*
 * param regionId:  (Required)
 * param queryType:  (Required)
 */
func NewUserResourceCountRequestWithAllParams(
    regionId string,
    queryType string,
) *UserResourceCountRequest {

    return &UserResourceCountRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/userResourceCount",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        QueryType: queryType,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUserResourceCountRequestWithoutParam() *UserResourceCountRequest {

    return &UserResourceCountRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/userResourceCount",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: (Required) */
func (r *UserResourceCountRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param queryType: (Required) */
func (r *UserResourceCountRequest) SetQueryType(queryType string) {
    r.QueryType = queryType
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UserResourceCountRequest) GetRegionId() string {
    return r.RegionId
}

type UserResourceCountResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UserResourceCountResult `json:"result"`
}

type UserResourceCountResult struct {
    ServiceList []renewal.ResourceCountVo `json:"serviceList"`
    TotalCount int `json:"totalCount"`
    QueryStatus string `json:"queryStatus"`
    Message string `json:"message"`
}