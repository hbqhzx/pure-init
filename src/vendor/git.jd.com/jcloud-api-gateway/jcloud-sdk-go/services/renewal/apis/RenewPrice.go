// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    renewal "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/renewal/models"
    common "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/common/models"
)

type RenewPriceRequest struct {

    core.JDCloudRequest

    /*   */
    RegionId string `json:"regionId"`

    /*   */
    TimeSpan int `json:"timeSpan"`

    /*   */
    TimeUnit int `json:"timeUnit"`

    /*   */
    AppCode string `json:"appCode"`

    /* resourceIdList
 (Optional) */
    Filters []common.Filter `json:"filters"`
}

/*
 * param regionId:  (Required)
 * param timeSpan:  (Required)
 * param timeUnit:  (Required)
 * param appCode:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewRenewPriceRequest(
    regionId string,
    timeSpan int,
    timeUnit int,
    appCode string,
) *RenewPriceRequest {

	return &RenewPriceRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/renewPrice",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        TimeSpan: timeSpan,
        TimeUnit: timeUnit,
        AppCode: appCode,
	}
}

/*
 * param regionId:  (Required)
 * param timeSpan:  (Required)
 * param timeUnit:  (Required)
 * param appCode:  (Required)
 * param filters: resourceIdList
 (Optional)
 */
func NewRenewPriceRequestWithAllParams(
    regionId string,
    timeSpan int,
    timeUnit int,
    appCode string,
    filters []common.Filter,
) *RenewPriceRequest {

    return &RenewPriceRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/renewPrice",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        TimeSpan: timeSpan,
        TimeUnit: timeUnit,
        AppCode: appCode,
        Filters: filters,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewRenewPriceRequestWithoutParam() *RenewPriceRequest {

    return &RenewPriceRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/renewPrice",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: (Required) */
func (r *RenewPriceRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param timeSpan: (Required) */
func (r *RenewPriceRequest) SetTimeSpan(timeSpan int) {
    r.TimeSpan = timeSpan
}

/* param timeUnit: (Required) */
func (r *RenewPriceRequest) SetTimeUnit(timeUnit int) {
    r.TimeUnit = timeUnit
}

/* param appCode: (Required) */
func (r *RenewPriceRequest) SetAppCode(appCode string) {
    r.AppCode = appCode
}

/* param filters: resourceIdList
(Optional) */
func (r *RenewPriceRequest) SetFilters(filters []common.Filter) {
    r.Filters = filters
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r RenewPriceRequest) GetRegionId() string {
    return r.RegionId
}

type RenewPriceResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result RenewPriceResult `json:"result"`
}

type RenewPriceResult struct {
    TotalPrice int `json:"totalPrice"`
    TotalPriceScale4 int `json:"totalPriceScale4"`
    DiscountedTotalPrice int `json:"discountedTotalPrice"`
    TotalDiscount int `json:"totalDiscount"`
    List []renewal.OrderPriceDetailVo `json:"list"`
    TotalOriginalPrice int `json:"totalOriginalPrice"`
}