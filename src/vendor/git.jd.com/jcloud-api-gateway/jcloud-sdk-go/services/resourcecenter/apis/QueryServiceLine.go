// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    resourcecenter "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/resourcecenter/models"
)

type QueryServiceLineRequest struct {

    core.JDCloudRequest

    /*   */
    RegionId string `json:"regionId"`

    /*  (Optional) */
    ServiceName *string `json:"serviceName"`

    /*  (Optional) */
    SiteId *int `json:"siteId"`

    /*  (Optional) */
    AppId *int `json:"appId"`

    /*  (Optional) */
    Status *int `json:"status"`

    /*  (Optional) */
    NameValueRelation *string `json:"nameValueRelation"`
}

/*
 * param regionId:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryServiceLineRequest(
    regionId string,
) *QueryServiceLineRequest {

	return &QueryServiceLineRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/serviceline/manage/query",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId:  (Required)
 * param serviceName:  (Optional)
 * param siteId:  (Optional)
 * param appId:  (Optional)
 * param status:  (Optional)
 * param nameValueRelation:  (Optional)
 */
func NewQueryServiceLineRequestWithAllParams(
    regionId string,
    serviceName *string,
    siteId *int,
    appId *int,
    status *int,
    nameValueRelation *string,
) *QueryServiceLineRequest {

    return &QueryServiceLineRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/serviceline/manage/query",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        ServiceName: serviceName,
        SiteId: siteId,
        AppId: appId,
        Status: status,
        NameValueRelation: nameValueRelation,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryServiceLineRequestWithoutParam() *QueryServiceLineRequest {

    return &QueryServiceLineRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/serviceline/manage/query",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: (Required) */
func (r *QueryServiceLineRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param serviceName: (Optional) */
func (r *QueryServiceLineRequest) SetServiceName(serviceName string) {
    r.ServiceName = &serviceName
}

/* param siteId: (Optional) */
func (r *QueryServiceLineRequest) SetSiteId(siteId int) {
    r.SiteId = &siteId
}

/* param appId: (Optional) */
func (r *QueryServiceLineRequest) SetAppId(appId int) {
    r.AppId = &appId
}

/* param status: (Optional) */
func (r *QueryServiceLineRequest) SetStatus(status int) {
    r.Status = &status
}

/* param nameValueRelation: (Optional) */
func (r *QueryServiceLineRequest) SetNameValueRelation(nameValueRelation string) {
    r.NameValueRelation = &nameValueRelation
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryServiceLineRequest) GetRegionId() string {
    return r.RegionId
}

type QueryServiceLineResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryServiceLineResult `json:"result"`
}

type QueryServiceLineResult struct {
    Count int `json:"count"`
    ServiceLines []resourcecenter.ServiceLine `json:"serviceLines"`
}