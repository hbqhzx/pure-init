// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    resourcecenter "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/resourcecenter/models"
)

type GetServiceLineRequest struct {

    core.JDCloudRequest

    /*   */
    RegionId string `json:"regionId"`

    /*  (Optional) */
    SiteId *int `json:"siteId"`

    /*  (Optional) */
    AppId *int `json:"appId"`
}

/*
 * param regionId:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetServiceLineRequest(
    regionId string,
) *GetServiceLineRequest {

	return &GetServiceLineRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/serviceline/list",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId:  (Required)
 * param siteId:  (Optional)
 * param appId:  (Optional)
 */
func NewGetServiceLineRequestWithAllParams(
    regionId string,
    siteId *int,
    appId *int,
) *GetServiceLineRequest {

    return &GetServiceLineRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/serviceline/list",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        SiteId: siteId,
        AppId: appId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetServiceLineRequestWithoutParam() *GetServiceLineRequest {

    return &GetServiceLineRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/serviceline/list",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: (Required) */
func (r *GetServiceLineRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param siteId: (Optional) */
func (r *GetServiceLineRequest) SetSiteId(siteId int) {
    r.SiteId = &siteId
}

/* param appId: (Optional) */
func (r *GetServiceLineRequest) SetAppId(appId int) {
    r.AppId = &appId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetServiceLineRequest) GetRegionId() string {
    return r.RegionId
}

type GetServiceLineResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetServiceLineResult `json:"result"`
}

type GetServiceLineResult struct {
    ServiceLines []resourcecenter.ServiceLine `json:"serviceLines"`
}