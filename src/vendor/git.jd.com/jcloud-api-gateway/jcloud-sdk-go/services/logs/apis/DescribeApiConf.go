// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    logs "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/logs/models"
)

type DescribeApiConfRequest struct {

    core.JDCloudRequest

    /* serviceCode  */
    ServiceCode string `json:"serviceCode"`

    /* apiName  */
    ApiName string `json:"apiName"`
}

/*
 * param serviceCode: serviceCode (Required)
 * param apiName: apiName (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeApiConfRequest(
    serviceCode string,
    apiName string,
) *DescribeApiConfRequest {

	return &DescribeApiConfRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/apiconfsxdetail",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        ServiceCode: serviceCode,
        ApiName: apiName,
	}
}

/*
 * param serviceCode: serviceCode (Required)
 * param apiName: apiName (Required)
 */
func NewDescribeApiConfRequestWithAllParams(
    serviceCode string,
    apiName string,
) *DescribeApiConfRequest {

    return &DescribeApiConfRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/apiconfsxdetail",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        ServiceCode: serviceCode,
        ApiName: apiName,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeApiConfRequestWithoutParam() *DescribeApiConfRequest {

    return &DescribeApiConfRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/apiconfsxdetail",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param serviceCode: serviceCode(Required) */
func (r *DescribeApiConfRequest) SetServiceCode(serviceCode string) {
    r.ServiceCode = serviceCode
}

/* param apiName: apiName(Required) */
func (r *DescribeApiConfRequest) SetApiName(apiName string) {
    r.ApiName = apiName
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeApiConfRequest) GetRegionId() string {
    return ""
}

type DescribeApiConfResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeApiConfResult `json:"result"`
}

type DescribeApiConfResult struct {
    ApiName string `json:"apiName"`
    ApiType int64 `json:"apiType"`
    Id int64 `json:"id"`
    Method string `json:"method"`
    Params []logs.Pair `json:"params"`
    Resp []logs.Pair `json:"resp"`
    ServiceCode string `json:"serviceCode"`
    Url string `json:"url"`
    Version string `json:"version"`
}