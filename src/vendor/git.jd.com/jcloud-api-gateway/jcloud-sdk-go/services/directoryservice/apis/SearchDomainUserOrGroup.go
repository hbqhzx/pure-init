// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    directoryservice "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/directoryservice/models"
)

type SearchDomainUserOrGroupRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 资源id  */
    DirectoryId string `json:"directoryId"`

    /* 信任关系id  */
    TrustId string `json:"trustId"`

    /* 目标域  */
    DestDomain string `json:"destDomain"`

    /* 类型 0-用户 1-组  */
    Type int `json:"type"`

    /* 关键词 (Optional) */
    QueryWord *string `json:"queryWord"`
}

/*
 * param regionId: 地域ID (Required)
 * param directoryId: 资源id (Required)
 * param trustId: 信任关系id (Required)
 * param destDomain: 目标域 (Required)
 * param type_: 类型 0-用户 1-组 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewSearchDomainUserOrGroupRequest(
    regionId string,
    directoryId string,
    trustId string,
    destDomain string,
    type_ int,
) *SearchDomainUserOrGroupRequest {

	return &SearchDomainUserOrGroupRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/directory/{directoryId}/trust/{trustId}:searchDomainUserOrGroup",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        DirectoryId: directoryId,
        TrustId: trustId,
        DestDomain: destDomain,
        Type: type_,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param directoryId: 资源id (Required)
 * param trustId: 信任关系id (Required)
 * param destDomain: 目标域 (Required)
 * param type_: 类型 0-用户 1-组 (Required)
 * param queryWord: 关键词 (Optional)
 */
func NewSearchDomainUserOrGroupRequestWithAllParams(
    regionId string,
    directoryId string,
    trustId string,
    destDomain string,
    type_ int,
    queryWord *string,
) *SearchDomainUserOrGroupRequest {

    return &SearchDomainUserOrGroupRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/directory/{directoryId}/trust/{trustId}:searchDomainUserOrGroup",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        DirectoryId: directoryId,
        TrustId: trustId,
        DestDomain: destDomain,
        Type: type_,
        QueryWord: queryWord,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewSearchDomainUserOrGroupRequestWithoutParam() *SearchDomainUserOrGroupRequest {

    return &SearchDomainUserOrGroupRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/directory/{directoryId}/trust/{trustId}:searchDomainUserOrGroup",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *SearchDomainUserOrGroupRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param directoryId: 资源id(Required) */
func (r *SearchDomainUserOrGroupRequest) SetDirectoryId(directoryId string) {
    r.DirectoryId = directoryId
}

/* param trustId: 信任关系id(Required) */
func (r *SearchDomainUserOrGroupRequest) SetTrustId(trustId string) {
    r.TrustId = trustId
}

/* param destDomain: 目标域(Required) */
func (r *SearchDomainUserOrGroupRequest) SetDestDomain(destDomain string) {
    r.DestDomain = destDomain
}

/* param type_: 类型 0-用户 1-组(Required) */
func (r *SearchDomainUserOrGroupRequest) SetType(type_ int) {
    r.Type = type_
}

/* param queryWord: 关键词(Optional) */
func (r *SearchDomainUserOrGroupRequest) SetQueryWord(queryWord string) {
    r.QueryWord = &queryWord
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r SearchDomainUserOrGroupRequest) GetRegionId() string {
    return r.RegionId
}

type SearchDomainUserOrGroupResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result SearchDomainUserOrGroupResult `json:"result"`
}

type SearchDomainUserOrGroupResult struct {
    UserGroupList []directoryservice.AdUserGroup `json:"userGroupList"`
}