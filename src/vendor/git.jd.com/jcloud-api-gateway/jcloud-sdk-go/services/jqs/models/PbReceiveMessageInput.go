// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package models


type PbReceiveMessageInput struct {

    /* UUID.V4 for each request (Optional) */
    RequestId *string `json:"requestId"`

    /* user account id (Optional) */
    SenderId *string `json:"senderId"`

    /* region name, etc. cn-north-1 (Optional) */
    RegionId *string `json:"regionId"`

    /* queue id (Optional) */
    QueueId *string `json:"queueId"`

    /* 属性的名字，具有以下属性，现在mock，只支持All，不输入，默认不返回属性
All - 返回所有值。
ApproximateFirstReceiveTimestamp- 返回首次从队列接收消息的时间
ApproximateReceiveCount - 返回从队列接收消息但未删除消息的次数
SenderId
SentTimestamp- 返回消息发送到队列的时间
MessageDeduplicationId- 返回调用 操作的生产者提供的值
MessageGroupId- 返回调用操作的生产者提供的值
SequenceNumber - 返回Amazon SQS提供的值
 (Optional) */
    AttributeNames []string `json:"attributeNames"`

    /* the maximum number of messages (Optional) */
    MaxNumberOfMessages *int64 `json:"maxNumberOfMessages"`

    /* 消息属性的名字,sendMessage时的messageAttribute的Key值
 (Optional) */
    MessageAttributeNames []string `json:"messageAttributeNames"`

    /* the token used for deduplication of ReceiveMessage calls. applies only to FIFO queues (Optional) */
    ReceiveRequestAttemptId *string `json:"receiveRequestAttemptId"`

    /* the duration (in seconds) that the received messages are hidden from subsequent retrieve requests after being retrieved by a ReceiveMessage request. (Optional) */
    VisibilityTimeout *int64 `json:"visibilityTimeout"`

    /* the duration (in seconds) for which the call waits for a message to arrive in the queue before returning. (Optional) */
    WaitTimeSeconds *int64 `json:"waitTimeSeconds"`
}
