// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    payment "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/payment/models"
)

type GetRemmitClaimlistRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /*  (Optional) */
    OrderNumber *string `json:"orderNumber"`

    /*  (Optional) */
    ClaId *string `json:"claId"`

    /*  (Optional) */
    ContactsPhone *string `json:"contactsPhone"`

    /* null (Optional) */
    CreateBeginTime *string `json:"createBeginTime"`

    /*  (Optional) */
    CreateEndTime *string `json:"createEndTime"`

    /* null (Optional) */
    CreateTime *string `json:"createTime"`

    /*  (Optional) */
    CurrentPage *int `json:"currentPage"`

    /*  (Optional) */
    ErpOrderId *string `json:"erpOrderId"`

    /*  (Optional) */
    FirstPage *bool `json:"firstPage"`

    /*  (Optional) */
    Id *int `json:"id"`

    /*  (Optional) */
    LastPage *bool `json:"lastPage"`

    /*  (Optional) */
    MiddlePage *bool `json:"middlePage"`

    /*  (Optional) */
    NextPage *int `json:"nextPage"`

    /*  (Optional) */
    NextPageAvailable *bool `json:"nextPageAvailable"`

    /*  (Optional) */
    OffSize *int `json:"offSize"`

    /*  (Optional) */
    PageSize *int `json:"pageSize"`

    /*  (Optional) */
    Pin *string `json:"pin"`

    /*  (Optional) */
    PreviousPage *int `json:"previousPage"`

    /*  (Optional) */
    PreviousPageAvailable *bool `json:"previousPageAvailable"`

    /*  (Optional) */
    RemitAmount *int `json:"remitAmount"`

    /*  (Optional) */
    RemitBankName *string `json:"remitBankName"`

    /*  (Optional) */
    RemitPicture *string `json:"remitPicture"`

    /*  (Optional) */
    RemitTime *string `json:"remitTime"`

    /*  (Optional) */
    RemittorAccount *string `json:"remittorAccount"`

    /*  (Optional) */
    RemittorBankAccount *string `json:"remittorBankAccount"`

    /*  (Optional) */
    Status *int `json:"status"`

    /*  (Optional) */
    TotalPage *int `json:"totalPage"`

    /*  (Optional) */
    TotalRecord *int `json:"totalRecord"`

    /* null (Optional) */
    UpdateTime *string `json:"updateTime"`
}

/*
 * param regionId: Region ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetRemmitClaimlistRequest(
    regionId string,
) *GetRemmitClaimlistRequest {

	return &GetRemmitClaimlistRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/pay:getRemmitClaimlist",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: Region ID (Required)
 * param orderNumber:  (Optional)
 * param claId:  (Optional)
 * param contactsPhone:  (Optional)
 * param createBeginTime: null (Optional)
 * param createEndTime:  (Optional)
 * param createTime: null (Optional)
 * param currentPage:  (Optional)
 * param erpOrderId:  (Optional)
 * param firstPage:  (Optional)
 * param id:  (Optional)
 * param lastPage:  (Optional)
 * param middlePage:  (Optional)
 * param nextPage:  (Optional)
 * param nextPageAvailable:  (Optional)
 * param offSize:  (Optional)
 * param pageSize:  (Optional)
 * param pin:  (Optional)
 * param previousPage:  (Optional)
 * param previousPageAvailable:  (Optional)
 * param remitAmount:  (Optional)
 * param remitBankName:  (Optional)
 * param remitPicture:  (Optional)
 * param remitTime:  (Optional)
 * param remittorAccount:  (Optional)
 * param remittorBankAccount:  (Optional)
 * param status:  (Optional)
 * param totalPage:  (Optional)
 * param totalRecord:  (Optional)
 * param updateTime: null (Optional)
 */
func NewGetRemmitClaimlistRequestWithAllParams(
    regionId string,
    orderNumber *string,
    claId *string,
    contactsPhone *string,
    createBeginTime *string,
    createEndTime *string,
    createTime *string,
    currentPage *int,
    erpOrderId *string,
    firstPage *bool,
    id *int,
    lastPage *bool,
    middlePage *bool,
    nextPage *int,
    nextPageAvailable *bool,
    offSize *int,
    pageSize *int,
    pin *string,
    previousPage *int,
    previousPageAvailable *bool,
    remitAmount *int,
    remitBankName *string,
    remitPicture *string,
    remitTime *string,
    remittorAccount *string,
    remittorBankAccount *string,
    status *int,
    totalPage *int,
    totalRecord *int,
    updateTime *string,
) *GetRemmitClaimlistRequest {

    return &GetRemmitClaimlistRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/pay:getRemmitClaimlist",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        OrderNumber: orderNumber,
        ClaId: claId,
        ContactsPhone: contactsPhone,
        CreateBeginTime: createBeginTime,
        CreateEndTime: createEndTime,
        CreateTime: createTime,
        CurrentPage: currentPage,
        ErpOrderId: erpOrderId,
        FirstPage: firstPage,
        Id: id,
        LastPage: lastPage,
        MiddlePage: middlePage,
        NextPage: nextPage,
        NextPageAvailable: nextPageAvailable,
        OffSize: offSize,
        PageSize: pageSize,
        Pin: pin,
        PreviousPage: previousPage,
        PreviousPageAvailable: previousPageAvailable,
        RemitAmount: remitAmount,
        RemitBankName: remitBankName,
        RemitPicture: remitPicture,
        RemitTime: remitTime,
        RemittorAccount: remittorAccount,
        RemittorBankAccount: remittorBankAccount,
        Status: status,
        TotalPage: totalPage,
        TotalRecord: totalRecord,
        UpdateTime: updateTime,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetRemmitClaimlistRequestWithoutParam() *GetRemmitClaimlistRequest {

    return &GetRemmitClaimlistRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/pay:getRemmitClaimlist",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *GetRemmitClaimlistRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param orderNumber: (Optional) */
func (r *GetRemmitClaimlistRequest) SetOrderNumber(orderNumber string) {
    r.OrderNumber = &orderNumber
}

/* param claId: (Optional) */
func (r *GetRemmitClaimlistRequest) SetClaId(claId string) {
    r.ClaId = &claId
}

/* param contactsPhone: (Optional) */
func (r *GetRemmitClaimlistRequest) SetContactsPhone(contactsPhone string) {
    r.ContactsPhone = &contactsPhone
}

/* param createBeginTime: null(Optional) */
func (r *GetRemmitClaimlistRequest) SetCreateBeginTime(createBeginTime string) {
    r.CreateBeginTime = &createBeginTime
}

/* param createEndTime: (Optional) */
func (r *GetRemmitClaimlistRequest) SetCreateEndTime(createEndTime string) {
    r.CreateEndTime = &createEndTime
}

/* param createTime: null(Optional) */
func (r *GetRemmitClaimlistRequest) SetCreateTime(createTime string) {
    r.CreateTime = &createTime
}

/* param currentPage: (Optional) */
func (r *GetRemmitClaimlistRequest) SetCurrentPage(currentPage int) {
    r.CurrentPage = &currentPage
}

/* param erpOrderId: (Optional) */
func (r *GetRemmitClaimlistRequest) SetErpOrderId(erpOrderId string) {
    r.ErpOrderId = &erpOrderId
}

/* param firstPage: (Optional) */
func (r *GetRemmitClaimlistRequest) SetFirstPage(firstPage bool) {
    r.FirstPage = &firstPage
}

/* param id: (Optional) */
func (r *GetRemmitClaimlistRequest) SetId(id int) {
    r.Id = &id
}

/* param lastPage: (Optional) */
func (r *GetRemmitClaimlistRequest) SetLastPage(lastPage bool) {
    r.LastPage = &lastPage
}

/* param middlePage: (Optional) */
func (r *GetRemmitClaimlistRequest) SetMiddlePage(middlePage bool) {
    r.MiddlePage = &middlePage
}

/* param nextPage: (Optional) */
func (r *GetRemmitClaimlistRequest) SetNextPage(nextPage int) {
    r.NextPage = &nextPage
}

/* param nextPageAvailable: (Optional) */
func (r *GetRemmitClaimlistRequest) SetNextPageAvailable(nextPageAvailable bool) {
    r.NextPageAvailable = &nextPageAvailable
}

/* param offSize: (Optional) */
func (r *GetRemmitClaimlistRequest) SetOffSize(offSize int) {
    r.OffSize = &offSize
}

/* param pageSize: (Optional) */
func (r *GetRemmitClaimlistRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param pin: (Optional) */
func (r *GetRemmitClaimlistRequest) SetPin(pin string) {
    r.Pin = &pin
}

/* param previousPage: (Optional) */
func (r *GetRemmitClaimlistRequest) SetPreviousPage(previousPage int) {
    r.PreviousPage = &previousPage
}

/* param previousPageAvailable: (Optional) */
func (r *GetRemmitClaimlistRequest) SetPreviousPageAvailable(previousPageAvailable bool) {
    r.PreviousPageAvailable = &previousPageAvailable
}

/* param remitAmount: (Optional) */
func (r *GetRemmitClaimlistRequest) SetRemitAmount(remitAmount int) {
    r.RemitAmount = &remitAmount
}

/* param remitBankName: (Optional) */
func (r *GetRemmitClaimlistRequest) SetRemitBankName(remitBankName string) {
    r.RemitBankName = &remitBankName
}

/* param remitPicture: (Optional) */
func (r *GetRemmitClaimlistRequest) SetRemitPicture(remitPicture string) {
    r.RemitPicture = &remitPicture
}

/* param remitTime: (Optional) */
func (r *GetRemmitClaimlistRequest) SetRemitTime(remitTime string) {
    r.RemitTime = &remitTime
}

/* param remittorAccount: (Optional) */
func (r *GetRemmitClaimlistRequest) SetRemittorAccount(remittorAccount string) {
    r.RemittorAccount = &remittorAccount
}

/* param remittorBankAccount: (Optional) */
func (r *GetRemmitClaimlistRequest) SetRemittorBankAccount(remittorBankAccount string) {
    r.RemittorBankAccount = &remittorBankAccount
}

/* param status: (Optional) */
func (r *GetRemmitClaimlistRequest) SetStatus(status int) {
    r.Status = &status
}

/* param totalPage: (Optional) */
func (r *GetRemmitClaimlistRequest) SetTotalPage(totalPage int) {
    r.TotalPage = &totalPage
}

/* param totalRecord: (Optional) */
func (r *GetRemmitClaimlistRequest) SetTotalRecord(totalRecord int) {
    r.TotalRecord = &totalRecord
}

/* param updateTime: null(Optional) */
func (r *GetRemmitClaimlistRequest) SetUpdateTime(updateTime string) {
    r.UpdateTime = &updateTime
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetRemmitClaimlistRequest) GetRegionId() string {
    return r.RegionId
}

type GetRemmitClaimlistResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetRemmitClaimlistResult `json:"result"`
}

type GetRemmitClaimlistResult struct {
    ResultList []payment.OffLineRimmitBillInfoVo `json:"resultList"`
    TotalCount int `json:"totalCount"`
    TotalPage int `json:"totalPage"`
}