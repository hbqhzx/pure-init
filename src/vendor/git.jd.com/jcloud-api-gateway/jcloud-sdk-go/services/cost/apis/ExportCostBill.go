// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type ExportCostBillRequest struct {

    core.JDCloudRequest

    /*   */
    RegionId string `json:"regionId"`

    /* appCode (Optional) */
    AppCode *string `json:"appCode"`

    /* serviceCode (Optional) */
    ServiceCode *string `json:"serviceCode"`

    /* 消费类型 1：预付费 2：后付费 (Optional) */
    PayType *int `json:"payType"`

    /* 资源Id (Optional) */
    ResourceId *string `json:"resourceId"`

    /* 所属年月，格式 ：2018-06  */
    BelongDate string `json:"belongDate"`
}

/*
 * param regionId:  (Required)
 * param belongDate: 所属年月，格式 ：2018-06 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewExportCostBillRequest(
    regionId string,
    belongDate string,
) *ExportCostBillRequest {

	return &ExportCostBillRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/exportCostBill",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        BelongDate: belongDate,
	}
}

/*
 * param regionId:  (Required)
 * param appCode: appCode (Optional)
 * param serviceCode: serviceCode (Optional)
 * param payType: 消费类型 1：预付费 2：后付费 (Optional)
 * param resourceId: 资源Id (Optional)
 * param belongDate: 所属年月，格式 ：2018-06 (Required)
 */
func NewExportCostBillRequestWithAllParams(
    regionId string,
    appCode *string,
    serviceCode *string,
    payType *int,
    resourceId *string,
    belongDate string,
) *ExportCostBillRequest {

    return &ExportCostBillRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/exportCostBill",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        AppCode: appCode,
        ServiceCode: serviceCode,
        PayType: payType,
        ResourceId: resourceId,
        BelongDate: belongDate,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewExportCostBillRequestWithoutParam() *ExportCostBillRequest {

    return &ExportCostBillRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/exportCostBill",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: (Required) */
func (r *ExportCostBillRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param appCode: appCode(Optional) */
func (r *ExportCostBillRequest) SetAppCode(appCode string) {
    r.AppCode = &appCode
}

/* param serviceCode: serviceCode(Optional) */
func (r *ExportCostBillRequest) SetServiceCode(serviceCode string) {
    r.ServiceCode = &serviceCode
}

/* param payType: 消费类型 1：预付费 2：后付费(Optional) */
func (r *ExportCostBillRequest) SetPayType(payType int) {
    r.PayType = &payType
}

/* param resourceId: 资源Id(Optional) */
func (r *ExportCostBillRequest) SetResourceId(resourceId string) {
    r.ResourceId = &resourceId
}

/* param belongDate: 所属年月，格式 ：2018-06(Required) */
func (r *ExportCostBillRequest) SetBelongDate(belongDate string) {
    r.BelongDate = belongDate
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ExportCostBillRequest) GetRegionId() string {
    return r.RegionId
}

type ExportCostBillResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ExportCostBillResult `json:"result"`
}

type ExportCostBillResult struct {
    Result string `json:"result"`
}