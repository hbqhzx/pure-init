// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    bds "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/bds/models"
)

type CreateDatabaseRequest struct {

    core.JDCloudRequest

    /* 区域代码  */
    RegionId string `json:"regionId"`

    /* 实例ID  */
    InstanceId string `json:"instanceId"`

    /* 新建数据库  */
    DatabaseSpec *bds.DatabaseSpec `json:"databaseSpec"`
}

/*
 * param regionId: 区域代码 (Required)
 * param instanceId: 实例ID (Required)
 * param databaseSpec: 新建数据库 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateDatabaseRequest(
    regionId string,
    instanceId string,
    databaseSpec *bds.DatabaseSpec,
) *CreateDatabaseRequest {

	return &CreateDatabaseRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instances/{instanceId}/databases",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        InstanceId: instanceId,
        DatabaseSpec: databaseSpec,
	}
}

/*
 * param regionId: 区域代码 (Required)
 * param instanceId: 实例ID (Required)
 * param databaseSpec: 新建数据库 (Required)
 */
func NewCreateDatabaseRequestWithAllParams(
    regionId string,
    instanceId string,
    databaseSpec *bds.DatabaseSpec,
) *CreateDatabaseRequest {

    return &CreateDatabaseRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances/{instanceId}/databases",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        InstanceId: instanceId,
        DatabaseSpec: databaseSpec,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateDatabaseRequestWithoutParam() *CreateDatabaseRequest {

    return &CreateDatabaseRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances/{instanceId}/databases",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 区域代码(Required) */
func (r *CreateDatabaseRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param instanceId: 实例ID(Required) */
func (r *CreateDatabaseRequest) SetInstanceId(instanceId string) {
    r.InstanceId = instanceId
}

/* param databaseSpec: 新建数据库(Required) */
func (r *CreateDatabaseRequest) SetDatabaseSpec(databaseSpec *bds.DatabaseSpec) {
    r.DatabaseSpec = databaseSpec
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateDatabaseRequest) GetRegionId() string {
    return r.RegionId
}

type CreateDatabaseResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateDatabaseResult `json:"result"`
}

type CreateDatabaseResult struct {
    DatabaseName string `json:"databaseName"`
}