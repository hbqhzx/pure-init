// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type ScreenInfoRequest struct {

    core.JDCloudRequest
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewScreenInfoRequest(
) *ScreenInfoRequest {

	return &ScreenInfoRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/dashboard/btc/screeninfo",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 */
func NewScreenInfoRequestWithAllParams(
) *ScreenInfoRequest {

    return &ScreenInfoRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/dashboard/btc/screeninfo",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewScreenInfoRequestWithoutParam() *ScreenInfoRequest {

    return &ScreenInfoRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/dashboard/btc/screeninfo",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ScreenInfoRequest) GetRegionId() string {
    return ""
}

type ScreenInfoResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ScreenInfoResult `json:"result"`
}

type ScreenInfoResult struct {
    Btc_output float64 `json:"btc_output"`
    Spend_time_avg int `json:"spend_time_avg"`
    Network_force float64 `json:"network_force"`
    Tx_value float64 `json:"tx_value"`
    Tx_count int `json:"tx_count"`
    Tps float64 `json:"tps"`
    Tx_fee_kb float64 `json:"tx_fee_kb"`
    Address_count int `json:"address_count"`
    Active_address_count int `json:"active_address_count"`
    Miner_count int `json:"miner_count"`
    Difficulty float64 `json:"difficulty"`
}