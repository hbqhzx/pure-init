// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type GetPriceRequest struct {

    core.JDCloudRequest

    /* 实例所属的地域ID  */
    RegionId string `json:"regionId"`

    /* 主域名ID。新购域名不用填写。升级服务的时候需要填写，请使用getDomains接口获取。 (Optional) */
    DomainId *int `json:"domainId"`

    /* 套餐类型，0->免费 1->企业版 2->企业高级版  */
    PackId int `json:"packId"`

    /* 购买的类型，1->新购买、3->升级服务  */
    BuyType int `json:"buyType"`

    /* 购买的时间长度，1-3  */
    TimeSpan int `json:"timeSpan"`

    /* 购买的时间单位，1->小时，2->天，3->月，4->年  */
    TimeUnit int `json:"timeUnit"`
}

/*
 * param regionId: 实例所属的地域ID (Required)
 * param packId: 套餐类型，0->免费 1->企业版 2->企业高级版 (Required)
 * param buyType: 购买的类型，1->新购买、3->升级服务 (Required)
 * param timeSpan: 购买的时间长度，1-3 (Required)
 * param timeUnit: 购买的时间单位，1->小时，2->天，3->月，4->年 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetPriceRequest(
    regionId string,
    packId int,
    buyType int,
    timeSpan int,
    timeUnit int,
) *GetPriceRequest {

	return &GetPriceRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/getPrice",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        PackId: packId,
        BuyType: buyType,
        TimeSpan: timeSpan,
        TimeUnit: timeUnit,
	}
}

/*
 * param regionId: 实例所属的地域ID (Required)
 * param domainId: 主域名ID。新购域名不用填写。升级服务的时候需要填写，请使用getDomains接口获取。 (Optional)
 * param packId: 套餐类型，0->免费 1->企业版 2->企业高级版 (Required)
 * param buyType: 购买的类型，1->新购买、3->升级服务 (Required)
 * param timeSpan: 购买的时间长度，1-3 (Required)
 * param timeUnit: 购买的时间单位，1->小时，2->天，3->月，4->年 (Required)
 */
func NewGetPriceRequestWithAllParams(
    regionId string,
    domainId *int,
    packId int,
    buyType int,
    timeSpan int,
    timeUnit int,
) *GetPriceRequest {

    return &GetPriceRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/getPrice",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        DomainId: domainId,
        PackId: packId,
        BuyType: buyType,
        TimeSpan: timeSpan,
        TimeUnit: timeUnit,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetPriceRequestWithoutParam() *GetPriceRequest {

    return &GetPriceRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/getPrice",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 实例所属的地域ID(Required) */
func (r *GetPriceRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param domainId: 主域名ID。新购域名不用填写。升级服务的时候需要填写，请使用getDomains接口获取。(Optional) */
func (r *GetPriceRequest) SetDomainId(domainId int) {
    r.DomainId = &domainId
}

/* param packId: 套餐类型，0->免费 1->企业版 2->企业高级版(Required) */
func (r *GetPriceRequest) SetPackId(packId int) {
    r.PackId = packId
}

/* param buyType: 购买的类型，1->新购买、3->升级服务(Required) */
func (r *GetPriceRequest) SetBuyType(buyType int) {
    r.BuyType = buyType
}

/* param timeSpan: 购买的时间长度，1-3(Required) */
func (r *GetPriceRequest) SetTimeSpan(timeSpan int) {
    r.TimeSpan = timeSpan
}

/* param timeUnit: 购买的时间单位，1->小时，2->天，3->月，4->年(Required) */
func (r *GetPriceRequest) SetTimeUnit(timeUnit int) {
    r.TimeUnit = timeUnit
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetPriceRequest) GetRegionId() string {
    return r.RegionId
}

type GetPriceResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetPriceResult `json:"result"`
}

type GetPriceResult struct {
    Price float64 `json:"price"`
}