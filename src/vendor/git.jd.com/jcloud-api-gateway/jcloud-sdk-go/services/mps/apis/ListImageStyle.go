// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    mps "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/mps/models"
)

type ListImageStyleRequest struct {

    core.JDCloudRequest

    /* 区域ID  */
    RegionId string `json:"regionId"`

    /* Bucket名称  */
    BucketName string `json:"bucketName"`

    /* 按样式名称查询 (Optional) */
    StyleName *string `json:"styleName"`

    /* 数据页码 (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 每页数据的条数 (Optional) */
    PageSize *int `json:"pageSize"`
}

/*
 * param regionId: 区域ID (Required)
 * param bucketName: Bucket名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewListImageStyleRequest(
    regionId string,
    bucketName string,
) *ListImageStyleRequest {

	return &ListImageStyleRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/buckets/{bucketName}/imageStyles",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        BucketName: bucketName,
	}
}

/*
 * param regionId: 区域ID (Required)
 * param bucketName: Bucket名称 (Required)
 * param styleName: 按样式名称查询 (Optional)
 * param pageNumber: 数据页码 (Optional)
 * param pageSize: 每页数据的条数 (Optional)
 */
func NewListImageStyleRequestWithAllParams(
    regionId string,
    bucketName string,
    styleName *string,
    pageNumber *int,
    pageSize *int,
) *ListImageStyleRequest {

    return &ListImageStyleRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/buckets/{bucketName}/imageStyles",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        BucketName: bucketName,
        StyleName: styleName,
        PageNumber: pageNumber,
        PageSize: pageSize,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewListImageStyleRequestWithoutParam() *ListImageStyleRequest {

    return &ListImageStyleRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/buckets/{bucketName}/imageStyles",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 区域ID(Required) */
func (r *ListImageStyleRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param bucketName: Bucket名称(Required) */
func (r *ListImageStyleRequest) SetBucketName(bucketName string) {
    r.BucketName = bucketName
}

/* param styleName: 按样式名称查询(Optional) */
func (r *ListImageStyleRequest) SetStyleName(styleName string) {
    r.StyleName = &styleName
}

/* param pageNumber: 数据页码(Optional) */
func (r *ListImageStyleRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

/* param pageSize: 每页数据的条数(Optional) */
func (r *ListImageStyleRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ListImageStyleRequest) GetRegionId() string {
    return r.RegionId
}

type ListImageStyleResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ListImageStyleResult `json:"result"`
}

type ListImageStyleResult struct {
    StyleName string `json:"styleName"`
    PageNumber int `json:"pageNumber"`
    PageSize int `json:"pageSize"`
    ImageStyleList []mps.ImageStyle `json:"imageStyleList"`
}