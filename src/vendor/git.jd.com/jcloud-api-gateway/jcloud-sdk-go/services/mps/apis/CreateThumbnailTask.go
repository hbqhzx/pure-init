// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    mps "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/mps/models"
)

type CreateThumbnailTaskRequest struct {

    core.JDCloudRequest

    /* region id  */
    RegionId string `json:"regionId"`

    /* 任务ID (readonly) (Optional) */
    TaskID *string `json:"taskID"`

    /* 状态 (SUCCESS, ERROR, PENDDING, RUNNING) (readonly) (Optional) */
    Status *string `json:"status"`

    /* 错误码 (readonly) (Optional) */
    ErrorCode *int `json:"errorCode"`

    /* 任务创建时间 时间格式(GMT): yyyy-MM-dd’T’HH:mm:ss.SSS’Z’  (readonly) (Optional) */
    CreatedTime *string `json:"createdTime"`

    /* 任务创建时间 时间格式(GMT): yyyy-MM-dd’T’HH:mm:ss.SSS’Z’  (readonly) (Optional) */
    LastUpdatedTime *string `json:"lastUpdatedTime"`

    /*   */
    Source *mps.ThumbnailTaskSource `json:"source"`

    /*   */
    Target *mps.ThumbnailTaskTarget `json:"target"`

    /*  (Optional) */
    Rule *mps.ThumbnailTaskRule `json:"rule"`
}

/*
 * param regionId: region id (Required)
 * param source:  (Required)
 * param target:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateThumbnailTaskRequest(
    regionId string,
    source *mps.ThumbnailTaskSource,
    target *mps.ThumbnailTaskTarget,
) *CreateThumbnailTaskRequest {

	return &CreateThumbnailTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/thumbnail",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        Source: source,
        Target: target,
	}
}

/*
 * param regionId: region id (Required)
 * param taskID: 任务ID (readonly) (Optional)
 * param status: 状态 (SUCCESS, ERROR, PENDDING, RUNNING) (readonly) (Optional)
 * param errorCode: 错误码 (readonly) (Optional)
 * param createdTime: 任务创建时间 时间格式(GMT): yyyy-MM-dd’T’HH:mm:ss.SSS’Z’  (readonly) (Optional)
 * param lastUpdatedTime: 任务创建时间 时间格式(GMT): yyyy-MM-dd’T’HH:mm:ss.SSS’Z’  (readonly) (Optional)
 * param source:  (Required)
 * param target:  (Required)
 * param rule:  (Optional)
 */
func NewCreateThumbnailTaskRequestWithAllParams(
    regionId string,
    taskID *string,
    status *string,
    errorCode *int,
    createdTime *string,
    lastUpdatedTime *string,
    source *mps.ThumbnailTaskSource,
    target *mps.ThumbnailTaskTarget,
    rule *mps.ThumbnailTaskRule,
) *CreateThumbnailTaskRequest {

    return &CreateThumbnailTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/thumbnail",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        TaskID: taskID,
        Status: status,
        ErrorCode: errorCode,
        CreatedTime: createdTime,
        LastUpdatedTime: lastUpdatedTime,
        Source: source,
        Target: target,
        Rule: rule,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateThumbnailTaskRequestWithoutParam() *CreateThumbnailTaskRequest {

    return &CreateThumbnailTaskRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/thumbnail",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: region id(Required) */
func (r *CreateThumbnailTaskRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param taskID: 任务ID (readonly)(Optional) */
func (r *CreateThumbnailTaskRequest) SetTaskID(taskID string) {
    r.TaskID = &taskID
}

/* param status: 状态 (SUCCESS, ERROR, PENDDING, RUNNING) (readonly)(Optional) */
func (r *CreateThumbnailTaskRequest) SetStatus(status string) {
    r.Status = &status
}

/* param errorCode: 错误码 (readonly)(Optional) */
func (r *CreateThumbnailTaskRequest) SetErrorCode(errorCode int) {
    r.ErrorCode = &errorCode
}

/* param createdTime: 任务创建时间 时间格式(GMT): yyyy-MM-dd’T’HH:mm:ss.SSS’Z’  (readonly)(Optional) */
func (r *CreateThumbnailTaskRequest) SetCreatedTime(createdTime string) {
    r.CreatedTime = &createdTime
}

/* param lastUpdatedTime: 任务创建时间 时间格式(GMT): yyyy-MM-dd’T’HH:mm:ss.SSS’Z’  (readonly)(Optional) */
func (r *CreateThumbnailTaskRequest) SetLastUpdatedTime(lastUpdatedTime string) {
    r.LastUpdatedTime = &lastUpdatedTime
}

/* param source: (Required) */
func (r *CreateThumbnailTaskRequest) SetSource(source *mps.ThumbnailTaskSource) {
    r.Source = source
}

/* param target: (Required) */
func (r *CreateThumbnailTaskRequest) SetTarget(target *mps.ThumbnailTaskTarget) {
    r.Target = target
}

/* param rule: (Optional) */
func (r *CreateThumbnailTaskRequest) SetRule(rule *mps.ThumbnailTaskRule) {
    r.Rule = rule
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateThumbnailTaskRequest) GetRegionId() string {
    return r.RegionId
}

type CreateThumbnailTaskResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateThumbnailTaskResult `json:"result"`
}

type CreateThumbnailTaskResult struct {
    TaskID string `json:"taskID"`
}