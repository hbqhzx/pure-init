// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    baseanti "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/baseanti/models"
)

type DescribeAttackLogsRequest struct {

    core.JDCloudRequest

    /* 页码, 默认为 1 (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 分页大小, 默认为 10, 取值范围 [10, 100] (Optional) */
    PageSize *int `json:"pageSize"`

    /* 开始时间, 只能查询最近 7 天以内的数据, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ  */
    StartTime string `json:"startTime"`

    /* 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ  */
    EndTime string `json:"endTime"`

    /* 被防护 IP, ip 不为空时, 查询 ip 对应的攻击记录,ip 为空时, 查询用户所有攻击记录 (Optional) */
    Ip []string `json:"ip"`
}

/*
 * param startTime: 开始时间, 只能查询最近 7 天以内的数据, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ (Required)
 * param endTime: 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeAttackLogsRequest(
    startTime string,
    endTime string,
) *DescribeAttackLogsRequest {

	return &DescribeAttackLogsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/attacklog",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        StartTime: startTime,
        EndTime: endTime,
	}
}

/*
 * param pageNumber: 页码, 默认为 1 (Optional)
 * param pageSize: 分页大小, 默认为 10, 取值范围 [10, 100] (Optional)
 * param startTime: 开始时间, 只能查询最近 7 天以内的数据, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ (Required)
 * param endTime: 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ (Required)
 * param ip: 被防护 IP, ip 不为空时, 查询 ip 对应的攻击记录,ip 为空时, 查询用户所有攻击记录 (Optional)
 */
func NewDescribeAttackLogsRequestWithAllParams(
    pageNumber *int,
    pageSize *int,
    startTime string,
    endTime string,
    ip []string,
) *DescribeAttackLogsRequest {

    return &DescribeAttackLogsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/attacklog",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        PageNumber: pageNumber,
        PageSize: pageSize,
        StartTime: startTime,
        EndTime: endTime,
        Ip: ip,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeAttackLogsRequestWithoutParam() *DescribeAttackLogsRequest {

    return &DescribeAttackLogsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/attacklog",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param pageNumber: 页码, 默认为 1(Optional) */
func (r *DescribeAttackLogsRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

/* param pageSize: 分页大小, 默认为 10, 取值范围 [10, 100](Optional) */
func (r *DescribeAttackLogsRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param startTime: 开始时间, 只能查询最近 7 天以内的数据, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ(Required) */
func (r *DescribeAttackLogsRequest) SetStartTime(startTime string) {
    r.StartTime = startTime
}

/* param endTime: 查询的结束时间, UTC 时间, 格式: yyyy-MM-dd'T'HH:mm:ssZ(Required) */
func (r *DescribeAttackLogsRequest) SetEndTime(endTime string) {
    r.EndTime = endTime
}

/* param ip: 被防护 IP, ip 不为空时, 查询 ip 对应的攻击记录,ip 为空时, 查询用户所有攻击记录(Optional) */
func (r *DescribeAttackLogsRequest) SetIp(ip []string) {
    r.Ip = ip
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeAttackLogsRequest) GetRegionId() string {
    return ""
}

type DescribeAttackLogsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeAttackLogsResult `json:"result"`
}

type DescribeAttackLogsResult struct {
    DataList []baseanti.AttackLog `json:"dataList"`
    CurrentCount int `json:"currentCount"`
    TotalCount int `json:"totalCount"`
    TotalPage int `json:"totalPage"`
}