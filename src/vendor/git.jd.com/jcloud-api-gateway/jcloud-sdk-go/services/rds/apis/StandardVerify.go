// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type StandardVerifyRequest struct {

    core.JDCloudRequest

    /* 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)  */
    RegionId string `json:"regionId"`

    /* 节点规格信息, json（各产品线创建实例需要的信息，产品线前端自己组装，网关转发，产品线后端接受)  */
    CustomInfo string `json:"customInfo"`
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md) (Required)
 * param customInfo: 节点规格信息, json（各产品线创建实例需要的信息，产品线前端自己组装，网关转发，产品线后端接受) (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewStandardVerifyRequest(
    regionId string,
    customInfo string,
) *StandardVerifyRequest {

	return &StandardVerifyRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instances:standardVerify",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        CustomInfo: customInfo,
	}
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md) (Required)
 * param customInfo: 节点规格信息, json（各产品线创建实例需要的信息，产品线前端自己组装，网关转发，产品线后端接受) (Required)
 */
func NewStandardVerifyRequestWithAllParams(
    regionId string,
    customInfo string,
) *StandardVerifyRequest {

    return &StandardVerifyRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances:standardVerify",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        CustomInfo: customInfo,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewStandardVerifyRequestWithoutParam() *StandardVerifyRequest {

    return &StandardVerifyRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances:standardVerify",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)(Required) */
func (r *StandardVerifyRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param customInfo: 节点规格信息, json（各产品线创建实例需要的信息，产品线前端自己组装，网关转发，产品线后端接受)(Required) */
func (r *StandardVerifyRequest) SetCustomInfo(customInfo string) {
    r.CustomInfo = customInfo
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r StandardVerifyRequest) GetRegionId() string {
    return r.RegionId
}

type StandardVerifyResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result StandardVerifyResult `json:"result"`
}

type StandardVerifyResult struct {
    IsSuccess bool `json:"isSuccess"`
    Message string `json:"message"`
}