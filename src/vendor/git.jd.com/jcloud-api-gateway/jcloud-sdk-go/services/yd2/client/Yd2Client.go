// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package client

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    yd2 "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/yd2/apis"
    "encoding/json"
    "errors"
)

type Yd2Client struct {
    core.JDCloudClient
}

func NewYd2Client(credential *core.Credential) *Yd2Client {
    if credential == nil {
        return nil
    }

    config := core.NewConfig()
    config.SetEndpoint("yd2.jdcloud-api.com")

    return &Yd2Client{
        core.JDCloudClient{
            Credential:  *credential,
            Config:      *config,
            ServiceName: "yd2",
            Revision:    "0.0.1",
            Logger:      core.NewDefaultLogger(core.LogInfo),
        }}
}

func (c *Yd2Client) SetConfig(config *core.Config) {
    c.Config = *config
}

func (c *Yd2Client) SetLogger(logger core.Logger) {
    c.Logger = logger
}

/* 查询RDS实例列表 */
func (c *Yd2Client) QueryRdsInstances(request *yd2.QueryRdsInstancesRequest) (*yd2.QueryRdsInstancesResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &yd2.QueryRdsInstancesResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询云鼎2.0弹性ip列表 -- -- 支持按region查询（路径参数regionId:prod_bj02，prod_sh01，prod_gz02），支持查询所有region（regionId:all） */
func (c *Yd2Client) QueryYd2ElasticIps(request *yd2.QueryYd2ElasticIpsRequest) (*yd2.QueryYd2ElasticIpsResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &yd2.QueryYd2ElasticIpsResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 批量查询云主机的详细信息<br>
此接口支持分页查询，默认每页20条。
 */
func (c *Yd2Client) QueryVmInstances(request *yd2.QueryVmInstancesRequest) (*yd2.QueryVmInstancesResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &yd2.QueryVmInstancesResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询用户弹性ip列表 */
func (c *Yd2Client) QueryVpcElasticIps(request *yd2.QueryVpcElasticIpsRequest) (*yd2.QueryVpcElasticIpsResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &yd2.QueryVpcElasticIpsResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

