// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type QueryDictionaryRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* 查询类型，{errorCode,查询错误码} (Optional) */
    Type *string `json:"type"`
}

/*
 * param regionId: Region ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryDictionaryRequest(
    regionId string,
) *QueryDictionaryRequest {

	return &QueryDictionaryRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/common:dictionary",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: Region ID (Required)
 * param type_: 查询类型，{errorCode,查询错误码} (Optional)
 */
func NewQueryDictionaryRequestWithAllParams(
    regionId string,
    type_ *string,
) *QueryDictionaryRequest {

    return &QueryDictionaryRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/common:dictionary",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Type: type_,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryDictionaryRequestWithoutParam() *QueryDictionaryRequest {

    return &QueryDictionaryRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/common:dictionary",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *QueryDictionaryRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param type_: 查询类型，{errorCode,查询错误码}(Optional) */
func (r *QueryDictionaryRequest) SetType(type_ string) {
    r.Type = &type_
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryDictionaryRequest) GetRegionId() string {
    return r.RegionId
}

type QueryDictionaryResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryDictionaryResult `json:"result"`
}

type QueryDictionaryResult struct {
    ContractTypeEnum interface{} `json:"contractTypeEnum"`
    PaperStatusEnum interface{} `json:"paperStatusEnum"`
    ContractStatusEnum interface{} `json:"contractStatusEnum"`
    OrderPayTypeEnum interface{} `json:"orderPayTypeEnum"`
    ContractReturnCode interface{} `json:"contractReturnCode"`
    PostMailNumberEnum interface{} `json:"postMailNumberEnum"`
    RecordAreaEnum interface{} `json:"recordAreaEnum"`
    FrameworkAgreementUrl string `json:"frameworkAgreementUrl"`
    EnclosureUsedEnum string `json:"enclosureUsedEnum"`
}