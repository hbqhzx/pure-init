// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    contract "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/contract/models"
)

type QueryContractDetailsRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /*  (Optional) */
    Pin *string `json:"pin"`

    /*  (Optional) */
    ContractNumber *string `json:"contractNumber"`

    /*  (Optional) */
    ContractName *string `json:"contractName"`

    /*  (Optional) */
    DraftPdfUrl *string `json:"draftPdfUrl"`

    /*  (Optional) */
    FormalPdfUrl *string `json:"formalPdfUrl"`

    /*  (Optional) */
    Type *int `json:"type"`

    /*  (Optional) */
    Status *int `json:"status"`

    /*  (Optional) */
    PaperStatus *int `json:"paperStatus"`

    /*  (Optional) */
    Source *int `json:"source"`

    /*  (Optional) */
    Remark *string `json:"remark"`

    /*  (Optional) */
    MailNumber *int `json:"mailNumber"`

    /*  (Optional) */
    TelecomOperationFlag *int `json:"telecomOperationFlag"`

    /*  (Optional) */
    RecordArea *int `json:"recordArea"`

    /*  (Optional) */
    ReturnExpressNumber *string `json:"returnExpressNumber"`

    /*  (Optional) */
    ReturnExpressCompany *string `json:"returnExpressCompany"`

    /*  (Optional) */
    CreatedTime *string `json:"createdTime"`

    /*  (Optional) */
    UpdatedTime *string `json:"updatedTime"`

    /*  (Optional) */
    RecipientName *string `json:"recipientName"`

    /*  (Optional) */
    RecipientPhone *string `json:"recipientPhone"`

    /*  (Optional) */
    Postcode *string `json:"postcode"`

    /*  (Optional) */
    Province *string `json:"province"`

    /*  (Optional) */
    City *string `json:"city"`

    /*  (Optional) */
    County *string `json:"county"`

    /*  (Optional) */
    DetailedAddress *string `json:"detailedAddress"`

    /*  (Optional) */
    PaperApplicationTime *string `json:"paperApplicationTime"`

    /*  (Optional) */
    UniqueCode *string `json:"uniqueCode"`

    /*  (Optional) */
    EbsContractNumber *string `json:"ebsContractNumber"`

    /*  (Optional) */
    EbsUploadFlag *int `json:"ebsUploadFlag"`
}

/*
 * param regionId: Region ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryContractDetailsRequest(
    regionId string,
) *QueryContractDetailsRequest {

	return &QueryContractDetailsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/contract:queryContractDetails",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: Region ID (Required)
 * param pin:  (Optional)
 * param contractNumber:  (Optional)
 * param contractName:  (Optional)
 * param draftPdfUrl:  (Optional)
 * param formalPdfUrl:  (Optional)
 * param type_:  (Optional)
 * param status:  (Optional)
 * param paperStatus:  (Optional)
 * param source:  (Optional)
 * param remark:  (Optional)
 * param mailNumber:  (Optional)
 * param telecomOperationFlag:  (Optional)
 * param recordArea:  (Optional)
 * param returnExpressNumber:  (Optional)
 * param returnExpressCompany:  (Optional)
 * param createdTime:  (Optional)
 * param updatedTime:  (Optional)
 * param recipientName:  (Optional)
 * param recipientPhone:  (Optional)
 * param postcode:  (Optional)
 * param province:  (Optional)
 * param city:  (Optional)
 * param county:  (Optional)
 * param detailedAddress:  (Optional)
 * param paperApplicationTime:  (Optional)
 * param uniqueCode:  (Optional)
 * param ebsContractNumber:  (Optional)
 * param ebsUploadFlag:  (Optional)
 */
func NewQueryContractDetailsRequestWithAllParams(
    regionId string,
    pin *string,
    contractNumber *string,
    contractName *string,
    draftPdfUrl *string,
    formalPdfUrl *string,
    type_ *int,
    status *int,
    paperStatus *int,
    source *int,
    remark *string,
    mailNumber *int,
    telecomOperationFlag *int,
    recordArea *int,
    returnExpressNumber *string,
    returnExpressCompany *string,
    createdTime *string,
    updatedTime *string,
    recipientName *string,
    recipientPhone *string,
    postcode *string,
    province *string,
    city *string,
    county *string,
    detailedAddress *string,
    paperApplicationTime *string,
    uniqueCode *string,
    ebsContractNumber *string,
    ebsUploadFlag *int,
) *QueryContractDetailsRequest {

    return &QueryContractDetailsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/contract:queryContractDetails",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Pin: pin,
        ContractNumber: contractNumber,
        ContractName: contractName,
        DraftPdfUrl: draftPdfUrl,
        FormalPdfUrl: formalPdfUrl,
        Type: type_,
        Status: status,
        PaperStatus: paperStatus,
        Source: source,
        Remark: remark,
        MailNumber: mailNumber,
        TelecomOperationFlag: telecomOperationFlag,
        RecordArea: recordArea,
        ReturnExpressNumber: returnExpressNumber,
        ReturnExpressCompany: returnExpressCompany,
        CreatedTime: createdTime,
        UpdatedTime: updatedTime,
        RecipientName: recipientName,
        RecipientPhone: recipientPhone,
        Postcode: postcode,
        Province: province,
        City: city,
        County: county,
        DetailedAddress: detailedAddress,
        PaperApplicationTime: paperApplicationTime,
        UniqueCode: uniqueCode,
        EbsContractNumber: ebsContractNumber,
        EbsUploadFlag: ebsUploadFlag,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryContractDetailsRequestWithoutParam() *QueryContractDetailsRequest {

    return &QueryContractDetailsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/contract:queryContractDetails",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *QueryContractDetailsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param pin: (Optional) */
func (r *QueryContractDetailsRequest) SetPin(pin string) {
    r.Pin = &pin
}

/* param contractNumber: (Optional) */
func (r *QueryContractDetailsRequest) SetContractNumber(contractNumber string) {
    r.ContractNumber = &contractNumber
}

/* param contractName: (Optional) */
func (r *QueryContractDetailsRequest) SetContractName(contractName string) {
    r.ContractName = &contractName
}

/* param draftPdfUrl: (Optional) */
func (r *QueryContractDetailsRequest) SetDraftPdfUrl(draftPdfUrl string) {
    r.DraftPdfUrl = &draftPdfUrl
}

/* param formalPdfUrl: (Optional) */
func (r *QueryContractDetailsRequest) SetFormalPdfUrl(formalPdfUrl string) {
    r.FormalPdfUrl = &formalPdfUrl
}

/* param type_: (Optional) */
func (r *QueryContractDetailsRequest) SetType(type_ int) {
    r.Type = &type_
}

/* param status: (Optional) */
func (r *QueryContractDetailsRequest) SetStatus(status int) {
    r.Status = &status
}

/* param paperStatus: (Optional) */
func (r *QueryContractDetailsRequest) SetPaperStatus(paperStatus int) {
    r.PaperStatus = &paperStatus
}

/* param source: (Optional) */
func (r *QueryContractDetailsRequest) SetSource(source int) {
    r.Source = &source
}

/* param remark: (Optional) */
func (r *QueryContractDetailsRequest) SetRemark(remark string) {
    r.Remark = &remark
}

/* param mailNumber: (Optional) */
func (r *QueryContractDetailsRequest) SetMailNumber(mailNumber int) {
    r.MailNumber = &mailNumber
}

/* param telecomOperationFlag: (Optional) */
func (r *QueryContractDetailsRequest) SetTelecomOperationFlag(telecomOperationFlag int) {
    r.TelecomOperationFlag = &telecomOperationFlag
}

/* param recordArea: (Optional) */
func (r *QueryContractDetailsRequest) SetRecordArea(recordArea int) {
    r.RecordArea = &recordArea
}

/* param returnExpressNumber: (Optional) */
func (r *QueryContractDetailsRequest) SetReturnExpressNumber(returnExpressNumber string) {
    r.ReturnExpressNumber = &returnExpressNumber
}

/* param returnExpressCompany: (Optional) */
func (r *QueryContractDetailsRequest) SetReturnExpressCompany(returnExpressCompany string) {
    r.ReturnExpressCompany = &returnExpressCompany
}

/* param createdTime: (Optional) */
func (r *QueryContractDetailsRequest) SetCreatedTime(createdTime string) {
    r.CreatedTime = &createdTime
}

/* param updatedTime: (Optional) */
func (r *QueryContractDetailsRequest) SetUpdatedTime(updatedTime string) {
    r.UpdatedTime = &updatedTime
}

/* param recipientName: (Optional) */
func (r *QueryContractDetailsRequest) SetRecipientName(recipientName string) {
    r.RecipientName = &recipientName
}

/* param recipientPhone: (Optional) */
func (r *QueryContractDetailsRequest) SetRecipientPhone(recipientPhone string) {
    r.RecipientPhone = &recipientPhone
}

/* param postcode: (Optional) */
func (r *QueryContractDetailsRequest) SetPostcode(postcode string) {
    r.Postcode = &postcode
}

/* param province: (Optional) */
func (r *QueryContractDetailsRequest) SetProvince(province string) {
    r.Province = &province
}

/* param city: (Optional) */
func (r *QueryContractDetailsRequest) SetCity(city string) {
    r.City = &city
}

/* param county: (Optional) */
func (r *QueryContractDetailsRequest) SetCounty(county string) {
    r.County = &county
}

/* param detailedAddress: (Optional) */
func (r *QueryContractDetailsRequest) SetDetailedAddress(detailedAddress string) {
    r.DetailedAddress = &detailedAddress
}

/* param paperApplicationTime: (Optional) */
func (r *QueryContractDetailsRequest) SetPaperApplicationTime(paperApplicationTime string) {
    r.PaperApplicationTime = &paperApplicationTime
}

/* param uniqueCode: (Optional) */
func (r *QueryContractDetailsRequest) SetUniqueCode(uniqueCode string) {
    r.UniqueCode = &uniqueCode
}

/* param ebsContractNumber: (Optional) */
func (r *QueryContractDetailsRequest) SetEbsContractNumber(ebsContractNumber string) {
    r.EbsContractNumber = &ebsContractNumber
}

/* param ebsUploadFlag: (Optional) */
func (r *QueryContractDetailsRequest) SetEbsUploadFlag(ebsUploadFlag int) {
    r.EbsUploadFlag = &ebsUploadFlag
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryContractDetailsRequest) GetRegionId() string {
    return r.RegionId
}

type QueryContractDetailsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryContractDetailsResult `json:"result"`
}

type QueryContractDetailsResult struct {
    Data contract.QueryContractRes `json:"data"`
}