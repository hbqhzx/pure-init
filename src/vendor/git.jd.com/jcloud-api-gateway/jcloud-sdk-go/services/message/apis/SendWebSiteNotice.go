// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    message "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/message/models"
)

type SendWebSiteNoticeRequest struct {

    core.JDCloudRequest

    /* 站内信内容  */
    SendWebSiteNoticeReq *message.SendWebSiteNotice `json:"sendWebSiteNoticeReq"`
}

/*
 * param sendWebSiteNoticeReq: 站内信内容 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewSendWebSiteNoticeRequest(
    sendWebSiteNoticeReq *message.SendWebSiteNotice,
) *SendWebSiteNoticeRequest {

	return &SendWebSiteNoticeRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/sms:sendWebSiteNotice",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        SendWebSiteNoticeReq: sendWebSiteNoticeReq,
	}
}

/*
 * param sendWebSiteNoticeReq: 站内信内容 (Required)
 */
func NewSendWebSiteNoticeRequestWithAllParams(
    sendWebSiteNoticeReq *message.SendWebSiteNotice,
) *SendWebSiteNoticeRequest {

    return &SendWebSiteNoticeRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/sms:sendWebSiteNotice",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        SendWebSiteNoticeReq: sendWebSiteNoticeReq,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewSendWebSiteNoticeRequestWithoutParam() *SendWebSiteNoticeRequest {

    return &SendWebSiteNoticeRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/sms:sendWebSiteNotice",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param sendWebSiteNoticeReq: 站内信内容(Required) */
func (r *SendWebSiteNoticeRequest) SetSendWebSiteNoticeReq(sendWebSiteNoticeReq *message.SendWebSiteNotice) {
    r.SendWebSiteNoticeReq = sendWebSiteNoticeReq
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r SendWebSiteNoticeRequest) GetRegionId() string {
    return ""
}

type SendWebSiteNoticeResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result SendWebSiteNoticeResult `json:"result"`
}

type SendWebSiteNoticeResult struct {
    Data int64 `json:"data"`
}