// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type SetCdnDomainHearderRequest struct {

    core.JDCloudRequest

    /* 域名  */
    DomainName string `json:"domainName"`

    /* 请求名称  */
    HeaderName string `json:"headerName"`

    /* 请求类型  */
    HeaderType string `json:"headerType"`

    /* 请求值  */
    HeaderValue string `json:"headerValue"`
}

/*
 * param domainName: 域名 (Required)
 * param headerName: 请求名称 (Required)
 * param headerType: 请求类型 (Required)
 * param headerValue: 请求值 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewSetCdnDomainHearderRequest(
    domainName string,
    headerName string,
    headerType string,
    headerValue string,
) *SetCdnDomainHearderRequest {

	return &SetCdnDomainHearderRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/domains/{domainName}/cdns",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        DomainName: domainName,
        HeaderName: headerName,
        HeaderType: headerType,
        HeaderValue: headerValue,
	}
}

/*
 * param domainName: 域名 (Required)
 * param headerName: 请求名称 (Required)
 * param headerType: 请求类型 (Required)
 * param headerValue: 请求值 (Required)
 */
func NewSetCdnDomainHearderRequestWithAllParams(
    domainName string,
    headerName string,
    headerType string,
    headerValue string,
) *SetCdnDomainHearderRequest {

    return &SetCdnDomainHearderRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/domains/{domainName}/cdns",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        DomainName: domainName,
        HeaderName: headerName,
        HeaderType: headerType,
        HeaderValue: headerValue,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewSetCdnDomainHearderRequestWithoutParam() *SetCdnDomainHearderRequest {

    return &SetCdnDomainHearderRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/domains/{domainName}/cdns",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param domainName: 域名(Required) */
func (r *SetCdnDomainHearderRequest) SetDomainName(domainName string) {
    r.DomainName = domainName
}

/* param headerName: 请求名称(Required) */
func (r *SetCdnDomainHearderRequest) SetHeaderName(headerName string) {
    r.HeaderName = headerName
}

/* param headerType: 请求类型(Required) */
func (r *SetCdnDomainHearderRequest) SetHeaderType(headerType string) {
    r.HeaderType = headerType
}

/* param headerValue: 请求值(Required) */
func (r *SetCdnDomainHearderRequest) SetHeaderValue(headerValue string) {
    r.HeaderValue = headerValue
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r SetCdnDomainHearderRequest) GetRegionId() string {
    return ""
}

type SetCdnDomainHearderResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result SetCdnDomainHearderResult `json:"result"`
}

type SetCdnDomainHearderResult struct {
    HeaderId int64 `json:"headerId"`
}