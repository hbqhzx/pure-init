// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type UpdateCategoryRequest struct {

    core.JDCloudRequest

    /* 媒资分类ID  */
    CategoryId int `json:"categoryId"`

    /* 分类名称  */
    Category string `json:"category"`

    /* 说明 (Optional) */
    Notes *string `json:"notes"`

    /* 父分类ID (Optional) */
    ParentId *int `json:"parentId"`

    /* 等级ID (Optional) */
    LevelId *int `json:"levelId"`
}

/*
 * param categoryId: 媒资分类ID (Required)
 * param category: 分类名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateCategoryRequest(
    categoryId int,
    category string,
) *UpdateCategoryRequest {

	return &UpdateCategoryRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/categorys/{categoryId}",
			Method:  "PUT",
			Header:  nil,
			Version: "v1",
		},
        CategoryId: categoryId,
        Category: category,
	}
}

/*
 * param categoryId: 媒资分类ID (Required)
 * param category: 分类名称 (Required)
 * param notes: 说明 (Optional)
 * param parentId: 父分类ID (Optional)
 * param levelId: 等级ID (Optional)
 */
func NewUpdateCategoryRequestWithAllParams(
    categoryId int,
    category string,
    notes *string,
    parentId *int,
    levelId *int,
) *UpdateCategoryRequest {

    return &UpdateCategoryRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/categorys/{categoryId}",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
        CategoryId: categoryId,
        Category: category,
        Notes: notes,
        ParentId: parentId,
        LevelId: levelId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateCategoryRequestWithoutParam() *UpdateCategoryRequest {

    return &UpdateCategoryRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/categorys/{categoryId}",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param categoryId: 媒资分类ID(Required) */
func (r *UpdateCategoryRequest) SetCategoryId(categoryId int) {
    r.CategoryId = categoryId
}

/* param category: 分类名称(Required) */
func (r *UpdateCategoryRequest) SetCategory(category string) {
    r.Category = category
}

/* param notes: 说明(Optional) */
func (r *UpdateCategoryRequest) SetNotes(notes string) {
    r.Notes = &notes
}

/* param parentId: 父分类ID(Optional) */
func (r *UpdateCategoryRequest) SetParentId(parentId int) {
    r.ParentId = &parentId
}

/* param levelId: 等级ID(Optional) */
func (r *UpdateCategoryRequest) SetLevelId(levelId int) {
    r.LevelId = &levelId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateCategoryRequest) GetRegionId() string {
    return ""
}

type UpdateCategoryResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateCategoryResult `json:"result"`
}

type UpdateCategoryResult struct {
    CategoryId int64 `json:"categoryId"`
}