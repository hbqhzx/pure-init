// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type UploadCallbackRequest struct {

    core.JDCloudRequest

    /* 上传状态  */
    Status int `json:"status"`

    /* 视频名称 (Optional) */
    Name *string `json:"name"`

    /* 格式 (Optional) */
    Format *string `json:"format"`

    /* 文件大小  */
    Size int `json:"size"`

    /* 分类ID (Optional) */
    CategoryId *int `json:"categoryId"`

    /* 转码模板ID (Optional) */
    CoderateId *string `json:"coderateId"`

    /* 水印模板ID (Optional) */
    LogoId *string `json:"logoId"`

    /* 下载地址 (Optional) */
    Url *string `json:"url"`

    /* 存储节点域名 (Optional) */
    Endpoint *string `json:"endpoint"`

    /* 存储桶名称 (Optional) */
    Bucket *string `json:"bucket"`
}

/*
 * param status: 上传状态 (Required)
 * param size: 文件大小 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUploadCallbackRequest(
    status int,
    size int,
) *UploadCallbackRequest {

	return &UploadCallbackRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/uploadTask:callback",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        Status: status,
        Size: size,
	}
}

/*
 * param status: 上传状态 (Required)
 * param name: 视频名称 (Optional)
 * param format: 格式 (Optional)
 * param size: 文件大小 (Required)
 * param categoryId: 分类ID (Optional)
 * param coderateId: 转码模板ID (Optional)
 * param logoId: 水印模板ID (Optional)
 * param url: 下载地址 (Optional)
 * param endpoint: 存储节点域名 (Optional)
 * param bucket: 存储桶名称 (Optional)
 */
func NewUploadCallbackRequestWithAllParams(
    status int,
    name *string,
    format *string,
    size int,
    categoryId *int,
    coderateId *string,
    logoId *string,
    url *string,
    endpoint *string,
    bucket *string,
) *UploadCallbackRequest {

    return &UploadCallbackRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/uploadTask:callback",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Status: status,
        Name: name,
        Format: format,
        Size: size,
        CategoryId: categoryId,
        CoderateId: coderateId,
        LogoId: logoId,
        Url: url,
        Endpoint: endpoint,
        Bucket: bucket,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUploadCallbackRequestWithoutParam() *UploadCallbackRequest {

    return &UploadCallbackRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/uploadTask:callback",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param status: 上传状态(Required) */
func (r *UploadCallbackRequest) SetStatus(status int) {
    r.Status = status
}

/* param name: 视频名称(Optional) */
func (r *UploadCallbackRequest) SetName(name string) {
    r.Name = &name
}

/* param format: 格式(Optional) */
func (r *UploadCallbackRequest) SetFormat(format string) {
    r.Format = &format
}

/* param size: 文件大小(Required) */
func (r *UploadCallbackRequest) SetSize(size int) {
    r.Size = size
}

/* param categoryId: 分类ID(Optional) */
func (r *UploadCallbackRequest) SetCategoryId(categoryId int) {
    r.CategoryId = &categoryId
}

/* param coderateId: 转码模板ID(Optional) */
func (r *UploadCallbackRequest) SetCoderateId(coderateId string) {
    r.CoderateId = &coderateId
}

/* param logoId: 水印模板ID(Optional) */
func (r *UploadCallbackRequest) SetLogoId(logoId string) {
    r.LogoId = &logoId
}

/* param url: 下载地址(Optional) */
func (r *UploadCallbackRequest) SetUrl(url string) {
    r.Url = &url
}

/* param endpoint: 存储节点域名(Optional) */
func (r *UploadCallbackRequest) SetEndpoint(endpoint string) {
    r.Endpoint = &endpoint
}

/* param bucket: 存储桶名称(Optional) */
func (r *UploadCallbackRequest) SetBucket(bucket string) {
    r.Bucket = &bucket
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UploadCallbackRequest) GetRegionId() string {
    return ""
}

type UploadCallbackResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UploadCallbackResult `json:"result"`
}

type UploadCallbackResult struct {
    Mid string `json:"mid"`
}