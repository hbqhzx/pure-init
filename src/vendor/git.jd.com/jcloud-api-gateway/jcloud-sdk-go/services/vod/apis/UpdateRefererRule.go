// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    vod "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/vod/models"
)

type UpdateRefererRuleRequest struct {

    core.JDCloudRequest

    /* 域名  */
    DomainName string `json:"domainName"`

    /* CDN域名 (Optional) */
    DomainName *string `json:"domainName"`

    /* 规则类型 (Optional) */
    RuleType *string `json:"ruleType"`

    /*  (Optional) */
    Config *vod.RefererRuleConfig `json:"config"`

    /* 启/禁用状态 (Optional) */
    Enabled *bool `json:"enabled"`
}

/*
 * param domainName: 域名 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateRefererRuleRequest(
    domainName string,
) *UpdateRefererRuleRequest {

	return &UpdateRefererRuleRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/domains/{domainName}/acrules:updateRefererRule",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        DomainName: domainName,
	}
}

/*
 * param domainName: 域名 (Required)
 * param domainName: CDN域名 (Optional)
 * param ruleType: 规则类型 (Optional)
 * param config:  (Optional)
 * param enabled: 启/禁用状态 (Optional)
 */
func NewUpdateRefererRuleRequestWithAllParams(
    domainName string,
    domainName *string,
    ruleType *string,
    config *vod.RefererRuleConfig,
    enabled *bool,
) *UpdateRefererRuleRequest {

    return &UpdateRefererRuleRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/domains/{domainName}/acrules:updateRefererRule",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        DomainName: domainName,
        DomainName: domainName,
        RuleType: ruleType,
        Config: config,
        Enabled: enabled,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateRefererRuleRequestWithoutParam() *UpdateRefererRuleRequest {

    return &UpdateRefererRuleRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/domains/{domainName}/acrules:updateRefererRule",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param domainName: 域名(Required) */
func (r *UpdateRefererRuleRequest) SetDomainName(domainName string) {
    r.DomainName = domainName
}

/* param domainName: CDN域名(Optional) */
func (r *UpdateRefererRuleRequest) SetDomainName(domainName string) {
    r.DomainName = &domainName
}

/* param ruleType: 规则类型(Optional) */
func (r *UpdateRefererRuleRequest) SetRuleType(ruleType string) {
    r.RuleType = &ruleType
}

/* param config: (Optional) */
func (r *UpdateRefererRuleRequest) SetConfig(config *vod.RefererRuleConfig) {
    r.Config = config
}

/* param enabled: 启/禁用状态(Optional) */
func (r *UpdateRefererRuleRequest) SetEnabled(enabled bool) {
    r.Enabled = &enabled
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateRefererRuleRequest) GetRegionId() string {
    return ""
}

type UpdateRefererRuleResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateRefererRuleResult `json:"result"`
}

type UpdateRefererRuleResult struct {
    RefererRuleReadRespDTO vod.RefererRuleReadRespDTO `json:"refererRuleReadRespDTO"`
}