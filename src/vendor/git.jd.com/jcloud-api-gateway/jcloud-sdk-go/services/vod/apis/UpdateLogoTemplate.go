// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type UpdateLogoTemplateRequest struct {

    core.JDCloudRequest

    /* 模板ID  */
    LogoId int `json:"logoId"`

    /* 模板名称 (Optional) */
    Name *string `json:"name"`

    /* 图片地址 (Optional) */
    ImgUrl *string `json:"imgUrl"`

    /* 宽 (Optional) */
    Width *int `json:"width"`

    /* 高 (Optional) */
    Height *int `json:"height"`

    /* 位置 (Optional) */
    Position *int `json:"position"`

    /* 偏移单位 (Optional) */
    Unit *string `json:"unit"`

    /* 水平偏移 (Optional) */
    OffsetX *int `json:"offsetX"`

    /* 垂直偏移 (Optional) */
    OffsetY *int `json:"offsetY"`
}

/*
 * param logoId: 模板ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateLogoTemplateRequest(
    logoId int,
) *UpdateLogoTemplateRequest {

	return &UpdateLogoTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/logos/{logoId}",
			Method:  "PUT",
			Header:  nil,
			Version: "v1",
		},
        LogoId: logoId,
	}
}

/*
 * param logoId: 模板ID (Required)
 * param name: 模板名称 (Optional)
 * param imgUrl: 图片地址 (Optional)
 * param width: 宽 (Optional)
 * param height: 高 (Optional)
 * param position: 位置 (Optional)
 * param unit: 偏移单位 (Optional)
 * param offsetX: 水平偏移 (Optional)
 * param offsetY: 垂直偏移 (Optional)
 */
func NewUpdateLogoTemplateRequestWithAllParams(
    logoId int,
    name *string,
    imgUrl *string,
    width *int,
    height *int,
    position *int,
    unit *string,
    offsetX *int,
    offsetY *int,
) *UpdateLogoTemplateRequest {

    return &UpdateLogoTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/logos/{logoId}",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
        LogoId: logoId,
        Name: name,
        ImgUrl: imgUrl,
        Width: width,
        Height: height,
        Position: position,
        Unit: unit,
        OffsetX: offsetX,
        OffsetY: offsetY,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateLogoTemplateRequestWithoutParam() *UpdateLogoTemplateRequest {

    return &UpdateLogoTemplateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/logos/{logoId}",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param logoId: 模板ID(Required) */
func (r *UpdateLogoTemplateRequest) SetLogoId(logoId int) {
    r.LogoId = logoId
}

/* param name: 模板名称(Optional) */
func (r *UpdateLogoTemplateRequest) SetName(name string) {
    r.Name = &name
}

/* param imgUrl: 图片地址(Optional) */
func (r *UpdateLogoTemplateRequest) SetImgUrl(imgUrl string) {
    r.ImgUrl = &imgUrl
}

/* param width: 宽(Optional) */
func (r *UpdateLogoTemplateRequest) SetWidth(width int) {
    r.Width = &width
}

/* param height: 高(Optional) */
func (r *UpdateLogoTemplateRequest) SetHeight(height int) {
    r.Height = &height
}

/* param position: 位置(Optional) */
func (r *UpdateLogoTemplateRequest) SetPosition(position int) {
    r.Position = &position
}

/* param unit: 偏移单位(Optional) */
func (r *UpdateLogoTemplateRequest) SetUnit(unit string) {
    r.Unit = &unit
}

/* param offsetX: 水平偏移(Optional) */
func (r *UpdateLogoTemplateRequest) SetOffsetX(offsetX int) {
    r.OffsetX = &offsetX
}

/* param offsetY: 垂直偏移(Optional) */
func (r *UpdateLogoTemplateRequest) SetOffsetY(offsetY int) {
    r.OffsetY = &offsetY
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateLogoTemplateRequest) GetRegionId() string {
    return ""
}

type UpdateLogoTemplateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateLogoTemplateResult `json:"result"`
}

type UpdateLogoTemplateResult struct {
    LogoId int64 `json:"logoId"`
}