// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type DescribeNotifyConfigRequest struct {

    core.JDCloudRequest

    /* 回调ID  */
    NotifyId int `json:"notifyId"`
}

/*
 * param notifyId: 回调ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeNotifyConfigRequest(
    notifyId int,
) *DescribeNotifyConfigRequest {

	return &DescribeNotifyConfigRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/notifyConfigs/{notifyId}",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        NotifyId: notifyId,
	}
}

/*
 * param notifyId: 回调ID (Required)
 */
func NewDescribeNotifyConfigRequestWithAllParams(
    notifyId int,
) *DescribeNotifyConfigRequest {

    return &DescribeNotifyConfigRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/notifyConfigs/{notifyId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        NotifyId: notifyId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeNotifyConfigRequestWithoutParam() *DescribeNotifyConfigRequest {

    return &DescribeNotifyConfigRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/notifyConfigs/{notifyId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param notifyId: 回调ID(Required) */
func (r *DescribeNotifyConfigRequest) SetNotifyId(notifyId int) {
    r.NotifyId = notifyId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeNotifyConfigRequest) GetRegionId() string {
    return ""
}

type DescribeNotifyConfigResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeNotifyConfigResult `json:"result"`
}

type DescribeNotifyConfigResult struct {
    NotifyId int64 `json:"notifyId"`
    Type int `json:"type"`
    NotifyFlag int `json:"notifyFlag"`
    NotifyUrl string `json:"notifyUrl"`
    CallType string `json:"callType"`
    NotifyKey string `json:"notifyKey"`
    CreateTime string `json:"createTime"`
    UpdateTime string `json:"updateTime"`
}