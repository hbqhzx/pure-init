// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    vod "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/vod/models"
)

type CreateNotifyConfigsRequest struct {

    core.JDCloudRequest

    /* 回调配置信息 (Optional) */
    NotifyConfigs []vod.NotifyConfig `json:"notifyConfigs"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateNotifyConfigsRequest(
) *CreateNotifyConfigsRequest {

	return &CreateNotifyConfigsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/notifyConfigs",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param notifyConfigs: 回调配置信息 (Optional)
 */
func NewCreateNotifyConfigsRequestWithAllParams(
    notifyConfigs []vod.NotifyConfig,
) *CreateNotifyConfigsRequest {

    return &CreateNotifyConfigsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/notifyConfigs",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        NotifyConfigs: notifyConfigs,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateNotifyConfigsRequestWithoutParam() *CreateNotifyConfigsRequest {

    return &CreateNotifyConfigsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/notifyConfigs",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param notifyConfigs: 回调配置信息(Optional) */
func (r *CreateNotifyConfigsRequest) SetNotifyConfigs(notifyConfigs []vod.NotifyConfig) {
    r.NotifyConfigs = notifyConfigs
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateNotifyConfigsRequest) GetRegionId() string {
    return ""
}

type CreateNotifyConfigsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateNotifyConfigsResult `json:"result"`
}

type CreateNotifyConfigsResult struct {
    NotifyId int64 `json:"notifyId"`
}