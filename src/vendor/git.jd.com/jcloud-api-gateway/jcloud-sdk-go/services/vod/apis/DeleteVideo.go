// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type DeleteVideoRequest struct {

    core.JDCloudRequest

    /* 媒资ID 集合  */
    Mids string `json:"mids"`
}

/*
 * param mids: 媒资ID 集合 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDeleteVideoRequest(
    mids string,
) *DeleteVideoRequest {

	return &DeleteVideoRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/videos",
			Method:  "DELETE",
			Header:  nil,
			Version: "v1",
		},
        Mids: mids,
	}
}

/*
 * param mids: 媒资ID 集合 (Required)
 */
func NewDeleteVideoRequestWithAllParams(
    mids string,
) *DeleteVideoRequest {

    return &DeleteVideoRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/videos",
            Method:  "DELETE",
            Header:  nil,
            Version: "v1",
        },
        Mids: mids,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDeleteVideoRequestWithoutParam() *DeleteVideoRequest {

    return &DeleteVideoRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/videos",
            Method:  "DELETE",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param mids: 媒资ID 集合(Required) */
func (r *DeleteVideoRequest) SetMids(mids string) {
    r.Mids = mids
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DeleteVideoRequest) GetRegionId() string {
    return ""
}

type DeleteVideoResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DeleteVideoResult `json:"result"`
}

type DeleteVideoResult struct {
    Mids string `json:"mids"`
}