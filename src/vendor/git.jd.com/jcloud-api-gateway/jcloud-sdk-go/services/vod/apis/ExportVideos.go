// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type ExportVideosRequest struct {

    core.JDCloudRequest

    /* 媒资ID集合  */
    Mids string `json:"mids"`

    /* 视频名称 (Optional) */
    VideoName *string `json:"videoName"`

    /* 分类ID (Optional) */
    CategoryId *int `json:"categoryId"`

    /* 状态 (Optional) */
    Status *int `json:"status"`
}

/*
 * param mids: 媒资ID集合 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewExportVideosRequest(
    mids string,
) *ExportVideosRequest {

	return &ExportVideosRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/videos:export",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        Mids: mids,
	}
}

/*
 * param mids: 媒资ID集合 (Required)
 * param videoName: 视频名称 (Optional)
 * param categoryId: 分类ID (Optional)
 * param status: 状态 (Optional)
 */
func NewExportVideosRequestWithAllParams(
    mids string,
    videoName *string,
    categoryId *int,
    status *int,
) *ExportVideosRequest {

    return &ExportVideosRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/videos:export",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Mids: mids,
        VideoName: videoName,
        CategoryId: categoryId,
        Status: status,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewExportVideosRequestWithoutParam() *ExportVideosRequest {

    return &ExportVideosRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/videos:export",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param mids: 媒资ID集合(Required) */
func (r *ExportVideosRequest) SetMids(mids string) {
    r.Mids = mids
}

/* param videoName: 视频名称(Optional) */
func (r *ExportVideosRequest) SetVideoName(videoName string) {
    r.VideoName = &videoName
}

/* param categoryId: 分类ID(Optional) */
func (r *ExportVideosRequest) SetCategoryId(categoryId int) {
    r.CategoryId = &categoryId
}

/* param status: 状态(Optional) */
func (r *ExportVideosRequest) SetStatus(status int) {
    r.Status = &status
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ExportVideosRequest) GetRegionId() string {
    return ""
}

type ExportVideosResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ExportVideosResult `json:"result"`
}

type ExportVideosResult struct {
    Url string `json:"url"`
}