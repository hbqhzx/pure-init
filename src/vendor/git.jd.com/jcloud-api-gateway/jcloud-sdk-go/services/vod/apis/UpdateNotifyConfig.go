// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type UpdateNotifyConfigRequest struct {

    core.JDCloudRequest

    /* 回调ID  */
    NotifyId int `json:"notifyId"`

    /* 类型 (Optional) */
    Type *int `json:"type"`

    /* 回调开关 (Optional) */
    NotifyFlag *int `json:"notifyFlag"`

    /* 回调地址 (Optional) */
    NotifyUrl *string `json:"notifyUrl"`

    /* 回调类型 (Optional) */
    CallType *string `json:"callType"`
}

/*
 * param notifyId: 回调ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateNotifyConfigRequest(
    notifyId int,
) *UpdateNotifyConfigRequest {

	return &UpdateNotifyConfigRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/notifyConfigs/{notifyId}",
			Method:  "PUT",
			Header:  nil,
			Version: "v1",
		},
        NotifyId: notifyId,
	}
}

/*
 * param notifyId: 回调ID (Required)
 * param type_: 类型 (Optional)
 * param notifyFlag: 回调开关 (Optional)
 * param notifyUrl: 回调地址 (Optional)
 * param callType: 回调类型 (Optional)
 */
func NewUpdateNotifyConfigRequestWithAllParams(
    notifyId int,
    type_ *int,
    notifyFlag *int,
    notifyUrl *string,
    callType *string,
) *UpdateNotifyConfigRequest {

    return &UpdateNotifyConfigRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/notifyConfigs/{notifyId}",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
        NotifyId: notifyId,
        Type: type_,
        NotifyFlag: notifyFlag,
        NotifyUrl: notifyUrl,
        CallType: callType,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateNotifyConfigRequestWithoutParam() *UpdateNotifyConfigRequest {

    return &UpdateNotifyConfigRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/notifyConfigs/{notifyId}",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param notifyId: 回调ID(Required) */
func (r *UpdateNotifyConfigRequest) SetNotifyId(notifyId int) {
    r.NotifyId = notifyId
}

/* param type_: 类型(Optional) */
func (r *UpdateNotifyConfigRequest) SetType(type_ int) {
    r.Type = &type_
}

/* param notifyFlag: 回调开关(Optional) */
func (r *UpdateNotifyConfigRequest) SetNotifyFlag(notifyFlag int) {
    r.NotifyFlag = &notifyFlag
}

/* param notifyUrl: 回调地址(Optional) */
func (r *UpdateNotifyConfigRequest) SetNotifyUrl(notifyUrl string) {
    r.NotifyUrl = &notifyUrl
}

/* param callType: 回调类型(Optional) */
func (r *UpdateNotifyConfigRequest) SetCallType(callType string) {
    r.CallType = &callType
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateNotifyConfigRequest) GetRegionId() string {
    return ""
}

type UpdateNotifyConfigResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateNotifyConfigResult `json:"result"`
}

type UpdateNotifyConfigResult struct {
    NotifyId int64 `json:"notifyId"`
}