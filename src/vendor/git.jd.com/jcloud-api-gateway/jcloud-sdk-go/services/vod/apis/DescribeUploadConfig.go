// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type DescribeUploadConfigRequest struct {

    core.JDCloudRequest

    /* 上传客户端IP (Optional) */
    ClientIp *string `json:"clientIp"`

    /* 上传客户端类型 (Optional) */
    ClientId *string `json:"clientId"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeUploadConfigRequest(
) *DescribeUploadConfigRequest {

	return &DescribeUploadConfigRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/uploadTask:config",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param clientIp: 上传客户端IP (Optional)
 * param clientId: 上传客户端类型 (Optional)
 */
func NewDescribeUploadConfigRequestWithAllParams(
    clientIp *string,
    clientId *string,
) *DescribeUploadConfigRequest {

    return &DescribeUploadConfigRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/uploadTask:config",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        ClientIp: clientIp,
        ClientId: clientId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeUploadConfigRequestWithoutParam() *DescribeUploadConfigRequest {

    return &DescribeUploadConfigRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/uploadTask:config",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param clientIp: 上传客户端IP(Optional) */
func (r *DescribeUploadConfigRequest) SetClientIp(clientIp string) {
    r.ClientIp = &clientIp
}

/* param clientId: 上传客户端类型(Optional) */
func (r *DescribeUploadConfigRequest) SetClientId(clientId string) {
    r.ClientId = &clientId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeUploadConfigRequest) GetRegionId() string {
    return ""
}

type DescribeUploadConfigResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeUploadConfigResult `json:"result"`
}

type DescribeUploadConfigResult struct {
    Endpoint string `json:"endpoint"`
    Bucket string `json:"bucket"`
}