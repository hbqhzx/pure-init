// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type CreateTaskRequest struct {

    core.JDCloudRequest

    /* 可用区id  */
    RegionId string `json:"regionId"`

    /* 作业名称  */
    JobName string `json:"jobName"`

    /* 作业组  */
    JobGroup string `json:"jobGroup"`

    /* 触发器  */
    TriggerName string `json:"triggerName"`

    /* 触发器组  */
    TriggerGroup string `json:"triggerGroup"`

    /* 作业类路径  */
    ClassPath string `json:"classPath"`

    /* cron表达式  */
    CronExpression string `json:"cronExpression"`

    /* 任务描述  */
    Description string `json:"description"`
}

/*
 * param regionId: 可用区id (Required)
 * param jobName: 作业名称 (Required)
 * param jobGroup: 作业组 (Required)
 * param triggerName: 触发器 (Required)
 * param triggerGroup: 触发器组 (Required)
 * param classPath: 作业类路径 (Required)
 * param cronExpression: cron表达式 (Required)
 * param description: 任务描述 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateTaskRequest(
    regionId string,
    jobName string,
    jobGroup string,
    triggerName string,
    triggerGroup string,
    classPath string,
    cronExpression string,
    description string,
) *CreateTaskRequest {

	return &CreateTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/tasks",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        JobName: jobName,
        JobGroup: jobGroup,
        TriggerName: triggerName,
        TriggerGroup: triggerGroup,
        ClassPath: classPath,
        CronExpression: cronExpression,
        Description: description,
	}
}

/*
 * param regionId: 可用区id (Required)
 * param jobName: 作业名称 (Required)
 * param jobGroup: 作业组 (Required)
 * param triggerName: 触发器 (Required)
 * param triggerGroup: 触发器组 (Required)
 * param classPath: 作业类路径 (Required)
 * param cronExpression: cron表达式 (Required)
 * param description: 任务描述 (Required)
 */
func NewCreateTaskRequestWithAllParams(
    regionId string,
    jobName string,
    jobGroup string,
    triggerName string,
    triggerGroup string,
    classPath string,
    cronExpression string,
    description string,
) *CreateTaskRequest {

    return &CreateTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/tasks",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        JobName: jobName,
        JobGroup: jobGroup,
        TriggerName: triggerName,
        TriggerGroup: triggerGroup,
        ClassPath: classPath,
        CronExpression: cronExpression,
        Description: description,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateTaskRequestWithoutParam() *CreateTaskRequest {

    return &CreateTaskRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/tasks",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 可用区id(Required) */
func (r *CreateTaskRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param jobName: 作业名称(Required) */
func (r *CreateTaskRequest) SetJobName(jobName string) {
    r.JobName = jobName
}

/* param jobGroup: 作业组(Required) */
func (r *CreateTaskRequest) SetJobGroup(jobGroup string) {
    r.JobGroup = jobGroup
}

/* param triggerName: 触发器(Required) */
func (r *CreateTaskRequest) SetTriggerName(triggerName string) {
    r.TriggerName = triggerName
}

/* param triggerGroup: 触发器组(Required) */
func (r *CreateTaskRequest) SetTriggerGroup(triggerGroup string) {
    r.TriggerGroup = triggerGroup
}

/* param classPath: 作业类路径(Required) */
func (r *CreateTaskRequest) SetClassPath(classPath string) {
    r.ClassPath = classPath
}

/* param cronExpression: cron表达式(Required) */
func (r *CreateTaskRequest) SetCronExpression(cronExpression string) {
    r.CronExpression = cronExpression
}

/* param description: 任务描述(Required) */
func (r *CreateTaskRequest) SetDescription(description string) {
    r.Description = description
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateTaskRequest) GetRegionId() string {
    return r.RegionId
}

type CreateTaskResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateTaskResult `json:"result"`
}

type CreateTaskResult struct {
    CreateStatus string `json:"createStatus"`
    FirstTime string `json:"firstTime"`
}