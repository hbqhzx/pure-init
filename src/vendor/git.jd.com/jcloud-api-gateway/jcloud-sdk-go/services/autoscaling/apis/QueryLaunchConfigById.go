// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    autoscaling "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/autoscaling/models"
)

type QueryLaunchConfigByIdRequest struct {

    core.JDCloudRequest

    /* 地域 Id  */
    RegionId string `json:"regionId"`

    /* 启动配置uuid  */
    LaunchConfigUuid string `json:"launchConfigUuid"`
}

/*
 * param regionId: 地域 Id (Required)
 * param launchConfigUuid: 启动配置uuid (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryLaunchConfigByIdRequest(
    regionId string,
    launchConfigUuid string,
) *QueryLaunchConfigByIdRequest {

	return &QueryLaunchConfigByIdRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/launchConfigs/{launchConfigUuid}",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        LaunchConfigUuid: launchConfigUuid,
	}
}

/*
 * param regionId: 地域 Id (Required)
 * param launchConfigUuid: 启动配置uuid (Required)
 */
func NewQueryLaunchConfigByIdRequestWithAllParams(
    regionId string,
    launchConfigUuid string,
) *QueryLaunchConfigByIdRequest {

    return &QueryLaunchConfigByIdRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/launchConfigs/{launchConfigUuid}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        LaunchConfigUuid: launchConfigUuid,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryLaunchConfigByIdRequestWithoutParam() *QueryLaunchConfigByIdRequest {

    return &QueryLaunchConfigByIdRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/launchConfigs/{launchConfigUuid}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域 Id(Required) */
func (r *QueryLaunchConfigByIdRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param launchConfigUuid: 启动配置uuid(Required) */
func (r *QueryLaunchConfigByIdRequest) SetLaunchConfigUuid(launchConfigUuid string) {
    r.LaunchConfigUuid = launchConfigUuid
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryLaunchConfigByIdRequest) GetRegionId() string {
    return r.RegionId
}

type QueryLaunchConfigByIdResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryLaunchConfigByIdResult `json:"result"`
}

type QueryLaunchConfigByIdResult struct {
    AsLaunchConfig autoscaling.LaunchConfigVO `json:"asLaunchConfig"`
}