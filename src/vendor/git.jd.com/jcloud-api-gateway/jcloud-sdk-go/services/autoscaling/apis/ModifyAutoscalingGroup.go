// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type ModifyAutoscalingGroupRequest struct {

    core.JDCloudRequest

    /* 地域 Id  */
    RegionId string `json:"regionId"`

    /* 组uuid  */
    AsGroupUuid string `json:"asGroupUuid"`

    /* 启动配置 launch configuration 的 id  */
    AsConfigId string `json:"asConfigId"`

    /* 本弹性伸缩组的描述 (Optional) */
    Description *string `json:"description"`

    /* 期望实例数  */
    ExpectedSize int64 `json:"expectedSize"`

    /* 本组最大容量  */
    MaxSize int64 `json:"maxSize"`

    /* 本组最小容量  */
    MinSize int64 `json:"minSize"`

    /* 本弹性伸缩组的名称  */
    Name string `json:"name"`

    /* 安全组ID  */
    SecurityGroups string `json:"securityGroups"`

    /* 0-default, 1-oldestInstance, 2-newestInstance, 3-oldestLaunchConfig  */
    TerminationPolicy int64 `json:"terminationPolicy"`

    /* 类型。目前对用户开放的主机弹性伸缩组，取值应为“vm”  */
    Type string `json:"type"`
}

/*
 * param regionId: 地域 Id (Required)
 * param asGroupUuid: 组uuid (Required)
 * param asConfigId: 启动配置 launch configuration 的 id (Required)
 * param expectedSize: 期望实例数 (Required)
 * param maxSize: 本组最大容量 (Required)
 * param minSize: 本组最小容量 (Required)
 * param name: 本弹性伸缩组的名称 (Required)
 * param securityGroups: 安全组ID (Required)
 * param terminationPolicy: 0-default, 1-oldestInstance, 2-newestInstance, 3-oldestLaunchConfig (Required)
 * param type_: 类型。目前对用户开放的主机弹性伸缩组，取值应为“vm” (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewModifyAutoscalingGroupRequest(
    regionId string,
    asGroupUuid string,
    asConfigId string,
    expectedSize int64,
    maxSize int64,
    minSize int64,
    name string,
    securityGroups string,
    terminationPolicy int64,
    type_ string,
) *ModifyAutoscalingGroupRequest {

	return &ModifyAutoscalingGroupRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/autoscalingGroups/{asGroupUuid}",
			Method:  "PATCH",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        AsGroupUuid: asGroupUuid,
        AsConfigId: asConfigId,
        ExpectedSize: expectedSize,
        MaxSize: maxSize,
        MinSize: minSize,
        Name: name,
        SecurityGroups: securityGroups,
        TerminationPolicy: terminationPolicy,
        Type: type_,
	}
}

/*
 * param regionId: 地域 Id (Required)
 * param asGroupUuid: 组uuid (Required)
 * param asConfigId: 启动配置 launch configuration 的 id (Required)
 * param description: 本弹性伸缩组的描述 (Optional)
 * param expectedSize: 期望实例数 (Required)
 * param maxSize: 本组最大容量 (Required)
 * param minSize: 本组最小容量 (Required)
 * param name: 本弹性伸缩组的名称 (Required)
 * param securityGroups: 安全组ID (Required)
 * param terminationPolicy: 0-default, 1-oldestInstance, 2-newestInstance, 3-oldestLaunchConfig (Required)
 * param type_: 类型。目前对用户开放的主机弹性伸缩组，取值应为“vm” (Required)
 */
func NewModifyAutoscalingGroupRequestWithAllParams(
    regionId string,
    asGroupUuid string,
    asConfigId string,
    description *string,
    expectedSize int64,
    maxSize int64,
    minSize int64,
    name string,
    securityGroups string,
    terminationPolicy int64,
    type_ string,
) *ModifyAutoscalingGroupRequest {

    return &ModifyAutoscalingGroupRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/autoscalingGroups/{asGroupUuid}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        AsGroupUuid: asGroupUuid,
        AsConfigId: asConfigId,
        Description: description,
        ExpectedSize: expectedSize,
        MaxSize: maxSize,
        MinSize: minSize,
        Name: name,
        SecurityGroups: securityGroups,
        TerminationPolicy: terminationPolicy,
        Type: type_,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewModifyAutoscalingGroupRequestWithoutParam() *ModifyAutoscalingGroupRequest {

    return &ModifyAutoscalingGroupRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/autoscalingGroups/{asGroupUuid}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域 Id(Required) */
func (r *ModifyAutoscalingGroupRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param asGroupUuid: 组uuid(Required) */
func (r *ModifyAutoscalingGroupRequest) SetAsGroupUuid(asGroupUuid string) {
    r.AsGroupUuid = asGroupUuid
}

/* param asConfigId: 启动配置 launch configuration 的 id(Required) */
func (r *ModifyAutoscalingGroupRequest) SetAsConfigId(asConfigId string) {
    r.AsConfigId = asConfigId
}

/* param description: 本弹性伸缩组的描述(Optional) */
func (r *ModifyAutoscalingGroupRequest) SetDescription(description string) {
    r.Description = &description
}

/* param expectedSize: 期望实例数(Required) */
func (r *ModifyAutoscalingGroupRequest) SetExpectedSize(expectedSize int64) {
    r.ExpectedSize = expectedSize
}

/* param maxSize: 本组最大容量(Required) */
func (r *ModifyAutoscalingGroupRequest) SetMaxSize(maxSize int64) {
    r.MaxSize = maxSize
}

/* param minSize: 本组最小容量(Required) */
func (r *ModifyAutoscalingGroupRequest) SetMinSize(minSize int64) {
    r.MinSize = minSize
}

/* param name: 本弹性伸缩组的名称(Required) */
func (r *ModifyAutoscalingGroupRequest) SetName(name string) {
    r.Name = name
}

/* param securityGroups: 安全组ID(Required) */
func (r *ModifyAutoscalingGroupRequest) SetSecurityGroups(securityGroups string) {
    r.SecurityGroups = securityGroups
}

/* param terminationPolicy: 0-default, 1-oldestInstance, 2-newestInstance, 3-oldestLaunchConfig(Required) */
func (r *ModifyAutoscalingGroupRequest) SetTerminationPolicy(terminationPolicy int64) {
    r.TerminationPolicy = terminationPolicy
}

/* param type_: 类型。目前对用户开放的主机弹性伸缩组，取值应为“vm”(Required) */
func (r *ModifyAutoscalingGroupRequest) SetType(type_ string) {
    r.Type = type_
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ModifyAutoscalingGroupRequest) GetRegionId() string {
    return r.RegionId
}

type ModifyAutoscalingGroupResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ModifyAutoscalingGroupResult `json:"result"`
}

type ModifyAutoscalingGroupResult struct {
    Uuid string `json:"uuid"`
}