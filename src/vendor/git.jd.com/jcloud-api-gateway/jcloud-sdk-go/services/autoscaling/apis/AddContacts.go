// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    autoscaling "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/autoscaling/models"
)

type AddContactsRequest struct {

    core.JDCloudRequest

    /* 地域 Id  */
    RegionId string `json:"regionId"`

    /* 组uuid  */
    AsGroupUuid string `json:"asGroupUuid"`

    /* 联系人列表  */
    Contacts []autoscaling.BaseContact `json:"contacts"`

    /* 启动通知  */
    StartNotice bool `json:"startNotice"`

    /* 终止通知  */
    StopNotice bool `json:"stopNotice"`

    /* 无法启动通知  */
    UnableStartNotice bool `json:"unableStartNotice"`

    /* 无法终止通知  */
    UnableStopNotice bool `json:"unableStopNotice"`
}

/*
 * param regionId: 地域 Id (Required)
 * param asGroupUuid: 组uuid (Required)
 * param contacts: 联系人列表 (Required)
 * param startNotice: 启动通知 (Required)
 * param stopNotice: 终止通知 (Required)
 * param unableStartNotice: 无法启动通知 (Required)
 * param unableStopNotice: 无法终止通知 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewAddContactsRequest(
    regionId string,
    asGroupUuid string,
    contacts []autoscaling.BaseContact,
    startNotice bool,
    stopNotice bool,
    unableStartNotice bool,
    unableStopNotice bool,
) *AddContactsRequest {

	return &AddContactsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/autoscalingGroups/{asGroupUuid}/contacts",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        AsGroupUuid: asGroupUuid,
        Contacts: contacts,
        StartNotice: startNotice,
        StopNotice: stopNotice,
        UnableStartNotice: unableStartNotice,
        UnableStopNotice: unableStopNotice,
	}
}

/*
 * param regionId: 地域 Id (Required)
 * param asGroupUuid: 组uuid (Required)
 * param contacts: 联系人列表 (Required)
 * param startNotice: 启动通知 (Required)
 * param stopNotice: 终止通知 (Required)
 * param unableStartNotice: 无法启动通知 (Required)
 * param unableStopNotice: 无法终止通知 (Required)
 */
func NewAddContactsRequestWithAllParams(
    regionId string,
    asGroupUuid string,
    contacts []autoscaling.BaseContact,
    startNotice bool,
    stopNotice bool,
    unableStartNotice bool,
    unableStopNotice bool,
) *AddContactsRequest {

    return &AddContactsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/autoscalingGroups/{asGroupUuid}/contacts",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        AsGroupUuid: asGroupUuid,
        Contacts: contacts,
        StartNotice: startNotice,
        StopNotice: stopNotice,
        UnableStartNotice: unableStartNotice,
        UnableStopNotice: unableStopNotice,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewAddContactsRequestWithoutParam() *AddContactsRequest {

    return &AddContactsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/autoscalingGroups/{asGroupUuid}/contacts",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域 Id(Required) */
func (r *AddContactsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param asGroupUuid: 组uuid(Required) */
func (r *AddContactsRequest) SetAsGroupUuid(asGroupUuid string) {
    r.AsGroupUuid = asGroupUuid
}

/* param contacts: 联系人列表(Required) */
func (r *AddContactsRequest) SetContacts(contacts []autoscaling.BaseContact) {
    r.Contacts = contacts
}

/* param startNotice: 启动通知(Required) */
func (r *AddContactsRequest) SetStartNotice(startNotice bool) {
    r.StartNotice = startNotice
}

/* param stopNotice: 终止通知(Required) */
func (r *AddContactsRequest) SetStopNotice(stopNotice bool) {
    r.StopNotice = stopNotice
}

/* param unableStartNotice: 无法启动通知(Required) */
func (r *AddContactsRequest) SetUnableStartNotice(unableStartNotice bool) {
    r.UnableStartNotice = unableStartNotice
}

/* param unableStopNotice: 无法终止通知(Required) */
func (r *AddContactsRequest) SetUnableStopNotice(unableStopNotice bool) {
    r.UnableStopNotice = unableStopNotice
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r AddContactsRequest) GetRegionId() string {
    return r.RegionId
}

type AddContactsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result AddContactsResult `json:"result"`
}

type AddContactsResult struct {
}