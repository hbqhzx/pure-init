// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type CreateAutoscalingRequest struct {

    core.JDCloudRequest

    /* 地域 Id  */
    RegionId string `json:"regionId"`

    /* 组uuid  */
    AgId string `json:"agId"`

    /* 最大实例数  */
    MaxSize int64 `json:"maxSize"`

    /* 最小实例数  */
    MinSize int64 `json:"minSize"`

    /* 移除策略  */
    TerminationStrategy int64 `json:"terminationStrategy"`
}

/*
 * param regionId: 地域 Id (Required)
 * param agId: 组uuid (Required)
 * param maxSize: 最大实例数 (Required)
 * param minSize: 最小实例数 (Required)
 * param terminationStrategy: 移除策略 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateAutoscalingRequest(
    regionId string,
    agId string,
    maxSize int64,
    minSize int64,
    terminationStrategy int64,
) *CreateAutoscalingRequest {

	return &CreateAutoscalingRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/availabilityGroups/{agId}/autoscaling",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        AgId: agId,
        MaxSize: maxSize,
        MinSize: minSize,
        TerminationStrategy: terminationStrategy,
	}
}

/*
 * param regionId: 地域 Id (Required)
 * param agId: 组uuid (Required)
 * param maxSize: 最大实例数 (Required)
 * param minSize: 最小实例数 (Required)
 * param terminationStrategy: 移除策略 (Required)
 */
func NewCreateAutoscalingRequestWithAllParams(
    regionId string,
    agId string,
    maxSize int64,
    minSize int64,
    terminationStrategy int64,
) *CreateAutoscalingRequest {

    return &CreateAutoscalingRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/availabilityGroups/{agId}/autoscaling",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        AgId: agId,
        MaxSize: maxSize,
        MinSize: minSize,
        TerminationStrategy: terminationStrategy,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateAutoscalingRequestWithoutParam() *CreateAutoscalingRequest {

    return &CreateAutoscalingRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/availabilityGroups/{agId}/autoscaling",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域 Id(Required) */
func (r *CreateAutoscalingRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param agId: 组uuid(Required) */
func (r *CreateAutoscalingRequest) SetAgId(agId string) {
    r.AgId = agId
}

/* param maxSize: 最大实例数(Required) */
func (r *CreateAutoscalingRequest) SetMaxSize(maxSize int64) {
    r.MaxSize = maxSize
}

/* param minSize: 最小实例数(Required) */
func (r *CreateAutoscalingRequest) SetMinSize(minSize int64) {
    r.MinSize = minSize
}

/* param terminationStrategy: 移除策略(Required) */
func (r *CreateAutoscalingRequest) SetTerminationStrategy(terminationStrategy int64) {
    r.TerminationStrategy = terminationStrategy
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateAutoscalingRequest) GetRegionId() string {
    return r.RegionId
}

type CreateAutoscalingResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateAutoscalingResult `json:"result"`
}

type CreateAutoscalingResult struct {
}