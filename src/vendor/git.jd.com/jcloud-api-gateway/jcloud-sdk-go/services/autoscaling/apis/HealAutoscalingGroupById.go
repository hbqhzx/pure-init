// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    autoscaling "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/autoscaling/models"
)

type HealAutoscalingGroupByIdRequest struct {

    core.JDCloudRequest

    /* 地域 Id  */
    RegionId string `json:"regionId"`

    /* 组uuid  */
    AsGroupUuid string `json:"asGroupUuid"`

    /*  (Optional) */
    AsConfigId *string `json:"asConfigId"`

    /*  (Optional) */
    Billing *string `json:"billing"`

    /*  (Optional) */
    Lbs []autoscaling.Lb `json:"lbs"`

    /*  (Optional) */
    SecurityGroups *string `json:"securityGroups"`

    /*  (Optional) */
    SubnetIds *string `json:"subnetIds"`

    /*  (Optional) */
    VpcId *string `json:"vpcId"`
}

/*
 * param regionId: 地域 Id (Required)
 * param asGroupUuid: 组uuid (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewHealAutoscalingGroupByIdRequest(
    regionId string,
    asGroupUuid string,
) *HealAutoscalingGroupByIdRequest {

	return &HealAutoscalingGroupByIdRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/autoscalingGroups/{asGroupUuid}:heal",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        AsGroupUuid: asGroupUuid,
	}
}

/*
 * param regionId: 地域 Id (Required)
 * param asGroupUuid: 组uuid (Required)
 * param asConfigId:  (Optional)
 * param billing:  (Optional)
 * param lbs:  (Optional)
 * param securityGroups:  (Optional)
 * param subnetIds:  (Optional)
 * param vpcId:  (Optional)
 */
func NewHealAutoscalingGroupByIdRequestWithAllParams(
    regionId string,
    asGroupUuid string,
    asConfigId *string,
    billing *string,
    lbs []autoscaling.Lb,
    securityGroups *string,
    subnetIds *string,
    vpcId *string,
) *HealAutoscalingGroupByIdRequest {

    return &HealAutoscalingGroupByIdRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/autoscalingGroups/{asGroupUuid}:heal",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        AsGroupUuid: asGroupUuid,
        AsConfigId: asConfigId,
        Billing: billing,
        Lbs: lbs,
        SecurityGroups: securityGroups,
        SubnetIds: subnetIds,
        VpcId: vpcId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewHealAutoscalingGroupByIdRequestWithoutParam() *HealAutoscalingGroupByIdRequest {

    return &HealAutoscalingGroupByIdRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/autoscalingGroups/{asGroupUuid}:heal",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域 Id(Required) */
func (r *HealAutoscalingGroupByIdRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param asGroupUuid: 组uuid(Required) */
func (r *HealAutoscalingGroupByIdRequest) SetAsGroupUuid(asGroupUuid string) {
    r.AsGroupUuid = asGroupUuid
}

/* param asConfigId: (Optional) */
func (r *HealAutoscalingGroupByIdRequest) SetAsConfigId(asConfigId string) {
    r.AsConfigId = &asConfigId
}

/* param billing: (Optional) */
func (r *HealAutoscalingGroupByIdRequest) SetBilling(billing string) {
    r.Billing = &billing
}

/* param lbs: (Optional) */
func (r *HealAutoscalingGroupByIdRequest) SetLbs(lbs []autoscaling.Lb) {
    r.Lbs = lbs
}

/* param securityGroups: (Optional) */
func (r *HealAutoscalingGroupByIdRequest) SetSecurityGroups(securityGroups string) {
    r.SecurityGroups = &securityGroups
}

/* param subnetIds: (Optional) */
func (r *HealAutoscalingGroupByIdRequest) SetSubnetIds(subnetIds string) {
    r.SubnetIds = &subnetIds
}

/* param vpcId: (Optional) */
func (r *HealAutoscalingGroupByIdRequest) SetVpcId(vpcId string) {
    r.VpcId = &vpcId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r HealAutoscalingGroupByIdRequest) GetRegionId() string {
    return r.RegionId
}

type HealAutoscalingGroupByIdResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result HealAutoscalingGroupByIdResult `json:"result"`
}

type HealAutoscalingGroupByIdResult struct {
    Failure autoscaling.HealAutoscalingGroupSpec `json:"failure"`
    Success autoscaling.HealAutoscalingGroupSpec `json:"success"`
    Uuid string `json:"uuid"`
}