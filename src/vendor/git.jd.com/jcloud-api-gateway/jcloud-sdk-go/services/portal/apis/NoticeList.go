// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    portal "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/portal/models"
)

type NoticeListRequest struct {

    core.JDCloudRequest

    /* Region ID （cn-north-1：华北-北京；cn-east-1：华东-宿迁；cn-east-2：华东-上海；cn-south-1：华南-广州）  */
    RegionId string `json:"regionId"`

    /* 页码；默认为1；取值范围 pageNum大于0 (Optional) */
    PageNum *int `json:"pageNum"`

    /* 分页大小；默认为10；取值范围 pageSize大于0 (Optional) */
    PageSize *int `json:"pageSize"`

    /* 公告分类；取值范围 type小于等于0:查询所有分类公告 type大于0:查询对应分类公告 (Optional) */
    Type *int `json:"type"`

    /* 语言类型；中文cn；英文en； (Optional) */
    Lang *string `json:"lang"`
}

/*
 * param regionId: Region ID （cn-north-1：华北-北京；cn-east-1：华东-宿迁；cn-east-2：华东-上海；cn-south-1：华南-广州） (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewNoticeListRequest(
    regionId string,
) *NoticeListRequest {

	return &NoticeListRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/noticeList",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: Region ID （cn-north-1：华北-北京；cn-east-1：华东-宿迁；cn-east-2：华东-上海；cn-south-1：华南-广州） (Required)
 * param pageNum: 页码；默认为1；取值范围 pageNum大于0 (Optional)
 * param pageSize: 分页大小；默认为10；取值范围 pageSize大于0 (Optional)
 * param type_: 公告分类；取值范围 type小于等于0:查询所有分类公告 type大于0:查询对应分类公告 (Optional)
 * param lang: 语言类型；中文cn；英文en； (Optional)
 */
func NewNoticeListRequestWithAllParams(
    regionId string,
    pageNum *int,
    pageSize *int,
    type_ *int,
    lang *string,
) *NoticeListRequest {

    return &NoticeListRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/noticeList",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        PageNum: pageNum,
        PageSize: pageSize,
        Type: type_,
        Lang: lang,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewNoticeListRequestWithoutParam() *NoticeListRequest {

    return &NoticeListRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/noticeList",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID （cn-north-1：华北-北京；cn-east-1：华东-宿迁；cn-east-2：华东-上海；cn-south-1：华南-广州）(Required) */
func (r *NoticeListRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param pageNum: 页码；默认为1；取值范围 pageNum大于0(Optional) */
func (r *NoticeListRequest) SetPageNum(pageNum int) {
    r.PageNum = &pageNum
}

/* param pageSize: 分页大小；默认为10；取值范围 pageSize大于0(Optional) */
func (r *NoticeListRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param type_: 公告分类；取值范围 type小于等于0:查询所有分类公告 type大于0:查询对应分类公告(Optional) */
func (r *NoticeListRequest) SetType(type_ int) {
    r.Type = &type_
}

/* param lang: 语言类型；中文cn；英文en；(Optional) */
func (r *NoticeListRequest) SetLang(lang string) {
    r.Lang = &lang
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r NoticeListRequest) GetRegionId() string {
    return r.RegionId
}

type NoticeListResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result NoticeListResult `json:"result"`
}

type NoticeListResult struct {
    PageNumber int `json:"pageNumber"`
    ResultList []portal.NoticeVo `json:"resultList"`
    TotalCount int `json:"totalCount"`
}