// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    iam "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/iam/models"
)

type AuthenticateRequest struct {

    core.JDCloudRequest

    /* 鉴权信息  */
    AuthenticationInfo *iam.AuthenticationInfo `json:"authenticationInfo"`
}

/*
 * param authenticationInfo: 鉴权信息 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewAuthenticateRequest(
    authenticationInfo *iam.AuthenticationInfo,
) *AuthenticateRequest {

	return &AuthenticateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/authenticate",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        AuthenticationInfo: authenticationInfo,
	}
}

/*
 * param authenticationInfo: 鉴权信息 (Required)
 */
func NewAuthenticateRequestWithAllParams(
    authenticationInfo *iam.AuthenticationInfo,
) *AuthenticateRequest {

    return &AuthenticateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/authenticate",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        AuthenticationInfo: authenticationInfo,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewAuthenticateRequestWithoutParam() *AuthenticateRequest {

    return &AuthenticateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/authenticate",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param authenticationInfo: 鉴权信息(Required) */
func (r *AuthenticateRequest) SetAuthenticationInfo(authenticationInfo *iam.AuthenticationInfo) {
    r.AuthenticationInfo = authenticationInfo
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r AuthenticateRequest) GetRegionId() string {
    return ""
}

type AuthenticateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result AuthenticateResult `json:"result"`
}

type AuthenticateResult struct {
    Effect int `json:"effect"`
}