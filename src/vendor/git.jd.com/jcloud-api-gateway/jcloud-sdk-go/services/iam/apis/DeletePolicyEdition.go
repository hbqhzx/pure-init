// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type DeletePolicyEditionRequest struct {

    core.JDCloudRequest

    /* 策略名称  */
    PolicyName string `json:"policyName"`

    /* 策略文档版本  */
    Edition int `json:"edition"`
}

/*
 * param policyName: 策略名称 (Required)
 * param edition: 策略文档版本 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDeletePolicyEditionRequest(
    policyName string,
    edition int,
) *DeletePolicyEditionRequest {

	return &DeletePolicyEditionRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/policy/{policyName}/edition/{edition}",
			Method:  "DELETE",
			Header:  nil,
			Version: "v1",
		},
        PolicyName: policyName,
        Edition: edition,
	}
}

/*
 * param policyName: 策略名称 (Required)
 * param edition: 策略文档版本 (Required)
 */
func NewDeletePolicyEditionRequestWithAllParams(
    policyName string,
    edition int,
) *DeletePolicyEditionRequest {

    return &DeletePolicyEditionRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/policy/{policyName}/edition/{edition}",
            Method:  "DELETE",
            Header:  nil,
            Version: "v1",
        },
        PolicyName: policyName,
        Edition: edition,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDeletePolicyEditionRequestWithoutParam() *DeletePolicyEditionRequest {

    return &DeletePolicyEditionRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/policy/{policyName}/edition/{edition}",
            Method:  "DELETE",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param policyName: 策略名称(Required) */
func (r *DeletePolicyEditionRequest) SetPolicyName(policyName string) {
    r.PolicyName = policyName
}

/* param edition: 策略文档版本(Required) */
func (r *DeletePolicyEditionRequest) SetEdition(edition int) {
    r.Edition = edition
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DeletePolicyEditionRequest) GetRegionId() string {
    return ""
}

type DeletePolicyEditionResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DeletePolicyEditionResult `json:"result"`
}

type DeletePolicyEditionResult struct {
}