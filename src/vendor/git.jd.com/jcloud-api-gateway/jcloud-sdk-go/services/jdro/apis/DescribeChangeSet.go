// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    jdro "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/jdro/models"
)

type DescribeChangeSetRequest struct {

    core.JDCloudRequest

    /* 地域 ID  */
    RegionId string `json:"regionId"`

    /* 资源栈 ID  */
    StackId string `json:"stackId"`

    /* 更改集 ID  */
    ChangesetId string `json:"changesetId"`
}

/*
 * param regionId: 地域 ID (Required)
 * param stackId: 资源栈 ID (Required)
 * param changesetId: 更改集 ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeChangeSetRequest(
    regionId string,
    stackId string,
    changesetId string,
) *DescribeChangeSetRequest {

	return &DescribeChangeSetRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/stacks/{stackId}/changesets/{changesetId}",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        StackId: stackId,
        ChangesetId: changesetId,
	}
}

/*
 * param regionId: 地域 ID (Required)
 * param stackId: 资源栈 ID (Required)
 * param changesetId: 更改集 ID (Required)
 */
func NewDescribeChangeSetRequestWithAllParams(
    regionId string,
    stackId string,
    changesetId string,
) *DescribeChangeSetRequest {

    return &DescribeChangeSetRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/stacks/{stackId}/changesets/{changesetId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        StackId: stackId,
        ChangesetId: changesetId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeChangeSetRequestWithoutParam() *DescribeChangeSetRequest {

    return &DescribeChangeSetRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/stacks/{stackId}/changesets/{changesetId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域 ID(Required) */
func (r *DescribeChangeSetRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param stackId: 资源栈 ID(Required) */
func (r *DescribeChangeSetRequest) SetStackId(stackId string) {
    r.StackId = stackId
}

/* param changesetId: 更改集 ID(Required) */
func (r *DescribeChangeSetRequest) SetChangesetId(changesetId string) {
    r.ChangesetId = changesetId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeChangeSetRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeChangeSetResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeChangeSetResult `json:"result"`
}

type DescribeChangeSetResult struct {
    ChangeSet jdro.ChangeSet `json:"changeSet"`
}