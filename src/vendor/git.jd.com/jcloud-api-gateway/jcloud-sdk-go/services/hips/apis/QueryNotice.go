// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    hips "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/hips/models"
)

type QueryNoticeRequest struct {

    core.JDCloudRequest

    /*   */
    NoticeId int `json:"noticeId"`

    /* 支持1(系统弱口令),5(webshell),7(远程暴力破解),8(FTP暴力破解),13(异地登录),14(数据库暴力破解)  */
    NoticeType int `json:"noticeType"`
}

/*
 * param noticeId:  (Required)
 * param noticeType: 支持1(系统弱口令),5(webshell),7(远程暴力破解),8(FTP暴力破解),13(异地登录),14(数据库暴力破解) (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryNoticeRequest(
    noticeId int,
    noticeType int,
) *QueryNoticeRequest {

	return &QueryNoticeRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/notices/{noticeId}",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        NoticeId: noticeId,
        NoticeType: noticeType,
	}
}

/*
 * param noticeId:  (Required)
 * param noticeType: 支持1(系统弱口令),5(webshell),7(远程暴力破解),8(FTP暴力破解),13(异地登录),14(数据库暴力破解) (Required)
 */
func NewQueryNoticeRequestWithAllParams(
    noticeId int,
    noticeType int,
) *QueryNoticeRequest {

    return &QueryNoticeRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/notices/{noticeId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        NoticeId: noticeId,
        NoticeType: noticeType,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryNoticeRequestWithoutParam() *QueryNoticeRequest {

    return &QueryNoticeRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/notices/{noticeId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param noticeId: (Required) */
func (r *QueryNoticeRequest) SetNoticeId(noticeId int) {
    r.NoticeId = noticeId
}

/* param noticeType: 支持1(系统弱口令),5(webshell),7(远程暴力破解),8(FTP暴力破解),13(异地登录),14(数据库暴力破解)(Required) */
func (r *QueryNoticeRequest) SetNoticeType(noticeType int) {
    r.NoticeType = noticeType
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryNoticeRequest) GetRegionId() string {
    return ""
}

type QueryNoticeResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryNoticeResult `json:"result"`
}

type QueryNoticeResult struct {
    NoticeInfo hips.NoticeInfo `json:"noticeInfo"`
}