// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    hips "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/hips/models"
)

type QueryProcessPolymerizeInfoRequest struct {

    core.JDCloudRequest

    /* 查询的进程名  */
    Name string `json:"name"`

    /* 主机实例Id (Optional) */
    Host *string `json:"host"`

    /* 进程启动用户 (Optional) */
    User *string `json:"user"`

    /* 进程启动参数 (Optional) */
    Args *string `json:"args"`
}

/*
 * param name: 查询的进程名 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryProcessPolymerizeInfoRequest(
    name string,
) *QueryProcessPolymerizeInfoRequest {

	return &QueryProcessPolymerizeInfoRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/edr:queryProcessPolymerizeInfo",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        Name: name,
	}
}

/*
 * param name: 查询的进程名 (Required)
 * param host: 主机实例Id (Optional)
 * param user: 进程启动用户 (Optional)
 * param args: 进程启动参数 (Optional)
 */
func NewQueryProcessPolymerizeInfoRequestWithAllParams(
    name string,
    host *string,
    user *string,
    args *string,
) *QueryProcessPolymerizeInfoRequest {

    return &QueryProcessPolymerizeInfoRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/edr:queryProcessPolymerizeInfo",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        Name: name,
        Host: host,
        User: user,
        Args: args,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryProcessPolymerizeInfoRequestWithoutParam() *QueryProcessPolymerizeInfoRequest {

    return &QueryProcessPolymerizeInfoRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/edr:queryProcessPolymerizeInfo",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param name: 查询的进程名(Required) */
func (r *QueryProcessPolymerizeInfoRequest) SetName(name string) {
    r.Name = name
}

/* param host: 主机实例Id(Optional) */
func (r *QueryProcessPolymerizeInfoRequest) SetHost(host string) {
    r.Host = &host
}

/* param user: 进程启动用户(Optional) */
func (r *QueryProcessPolymerizeInfoRequest) SetUser(user string) {
    r.User = &user
}

/* param args: 进程启动参数(Optional) */
func (r *QueryProcessPolymerizeInfoRequest) SetArgs(args string) {
    r.Args = &args
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryProcessPolymerizeInfoRequest) GetRegionId() string {
    return ""
}

type QueryProcessPolymerizeInfoResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryProcessPolymerizeInfoResult `json:"result"`
}

type QueryProcessPolymerizeInfoResult struct {
    Data []hips.EdrHostCurrentProcessInfo `json:"data"`
    TotalCount int `json:"totalCount"`
    Code int `json:"code"`
    Message string `json:"message"`
}