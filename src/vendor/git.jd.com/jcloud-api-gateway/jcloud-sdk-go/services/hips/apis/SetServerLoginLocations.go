// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    hips "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/hips/models"
)

type SetServerLoginLocationsRequest struct {

    core.JDCloudRequest

    /* serverId的主机ID都属于该regionId  */
    RegionId string `json:"regionId"`

    /* 主机ID，可以多个逗号分隔  */
    ServerId string `json:"serverId"`

    /* 登录地址  */
    Locations []hips.Location `json:"locations"`
}

/*
 * param regionId: serverId的主机ID都属于该regionId (Required)
 * param serverId: 主机ID，可以多个逗号分隔 (Required)
 * param locations: 登录地址 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewSetServerLoginLocationsRequest(
    regionId string,
    serverId string,
    locations []hips.Location,
) *SetServerLoginLocationsRequest {

	return &SetServerLoginLocationsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/servers:setLoginLocations",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        ServerId: serverId,
        Locations: locations,
	}
}

/*
 * param regionId: serverId的主机ID都属于该regionId (Required)
 * param serverId: 主机ID，可以多个逗号分隔 (Required)
 * param locations: 登录地址 (Required)
 */
func NewSetServerLoginLocationsRequestWithAllParams(
    regionId string,
    serverId string,
    locations []hips.Location,
) *SetServerLoginLocationsRequest {

    return &SetServerLoginLocationsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/servers:setLoginLocations",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        ServerId: serverId,
        Locations: locations,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewSetServerLoginLocationsRequestWithoutParam() *SetServerLoginLocationsRequest {

    return &SetServerLoginLocationsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/servers:setLoginLocations",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: serverId的主机ID都属于该regionId(Required) */
func (r *SetServerLoginLocationsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param serverId: 主机ID，可以多个逗号分隔(Required) */
func (r *SetServerLoginLocationsRequest) SetServerId(serverId string) {
    r.ServerId = serverId
}

/* param locations: 登录地址(Required) */
func (r *SetServerLoginLocationsRequest) SetLocations(locations []hips.Location) {
    r.Locations = locations
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r SetServerLoginLocationsRequest) GetRegionId() string {
    return ""
}

type SetServerLoginLocationsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result SetServerLoginLocationsResult `json:"result"`
}

type SetServerLoginLocationsResult struct {
    Code int `json:"code"`
}