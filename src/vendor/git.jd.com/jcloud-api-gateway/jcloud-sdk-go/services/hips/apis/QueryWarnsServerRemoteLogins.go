// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    hips "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/hips/models"
)

type QueryWarnsServerRemoteLoginsRequest struct {

    core.JDCloudRequest

    /*  (Optional) */
    ServerId *string `json:"serverId"`

    /*  (Optional) */
    Interval *int `json:"interval"`

    /*  (Optional) */
    PageNumber *int `json:"pageNumber"`

    /*  (Optional) */
    PageSize *int `json:"pageSize"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryWarnsServerRemoteLoginsRequest(
) *QueryWarnsServerRemoteLoginsRequest {

	return &QueryWarnsServerRemoteLoginsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/warns:queryServerRemoteLogins",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param serverId:  (Optional)
 * param interval:  (Optional)
 * param pageNumber:  (Optional)
 * param pageSize:  (Optional)
 */
func NewQueryWarnsServerRemoteLoginsRequestWithAllParams(
    serverId *string,
    interval *int,
    pageNumber *int,
    pageSize *int,
) *QueryWarnsServerRemoteLoginsRequest {

    return &QueryWarnsServerRemoteLoginsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/warns:queryServerRemoteLogins",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        ServerId: serverId,
        Interval: interval,
        PageNumber: pageNumber,
        PageSize: pageSize,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryWarnsServerRemoteLoginsRequestWithoutParam() *QueryWarnsServerRemoteLoginsRequest {

    return &QueryWarnsServerRemoteLoginsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/warns:queryServerRemoteLogins",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param serverId: (Optional) */
func (r *QueryWarnsServerRemoteLoginsRequest) SetServerId(serverId string) {
    r.ServerId = &serverId
}

/* param interval: (Optional) */
func (r *QueryWarnsServerRemoteLoginsRequest) SetInterval(interval int) {
    r.Interval = &interval
}

/* param pageNumber: (Optional) */
func (r *QueryWarnsServerRemoteLoginsRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

/* param pageSize: (Optional) */
func (r *QueryWarnsServerRemoteLoginsRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryWarnsServerRemoteLoginsRequest) GetRegionId() string {
    return ""
}

type QueryWarnsServerRemoteLoginsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryWarnsServerRemoteLoginsResult `json:"result"`
}

type QueryWarnsServerRemoteLoginsResult struct {
    ServerRemoteLogins []hips.WarnRemoteLogin `json:"serverRemoteLogins"`
    TotalCount int `json:"totalCount"`
}