// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type QueryLocationsRequest struct {

    core.JDCloudRequest

    /*  (Optional) */
    Country *string `json:"country"`

    /*  (Optional) */
    Province *string `json:"province"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryLocationsRequest(
) *QueryLocationsRequest {

	return &QueryLocationsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/locations",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param country:  (Optional)
 * param province:  (Optional)
 */
func NewQueryLocationsRequestWithAllParams(
    country *string,
    province *string,
) *QueryLocationsRequest {

    return &QueryLocationsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/locations",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        Country: country,
        Province: province,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryLocationsRequestWithoutParam() *QueryLocationsRequest {

    return &QueryLocationsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/locations",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param country: (Optional) */
func (r *QueryLocationsRequest) SetCountry(country string) {
    r.Country = &country
}

/* param province: (Optional) */
func (r *QueryLocationsRequest) SetProvince(province string) {
    r.Province = &province
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryLocationsRequest) GetRegionId() string {
    return ""
}

type QueryLocationsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryLocationsResult `json:"result"`
}

type QueryLocationsResult struct {
    Locations []string `json:"locations"`
}