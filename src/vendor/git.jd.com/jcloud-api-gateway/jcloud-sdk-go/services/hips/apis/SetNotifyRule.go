// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type SetNotifyRuleRequest struct {

    core.JDCloudRequest

    /* 规则Id  */
    RuleId int `json:"ruleId"`

    /* 发送方式。1为站内信，2为邮件，3为短信。 (Optional) */
    SendWay *int `json:"sendWay"`

    /* 发送时间方式。 0为8点到20点，1为24小时。 (Optional) */
    SendTime *int `json:"sendTime"`

    /* 启用/禁用 (Optional) */
    Enabled *int `json:"enabled"`

    /* 联系人id列表, 逗号分隔 (Optional) */
    ContactIds *string `json:"contactIds"`

    /* 联系人组id列表, 逗号分隔 (Optional) */
    ContactgroupIds *string `json:"contactgroupIds"`

    /* 电话号码列表, 逗号分隔 (Optional) */
    Mobiles *string `json:"mobiles"`

    /* 邮箱列表, 逗号分隔 (Optional) */
    Emails *string `json:"emails"`
}

/*
 * param ruleId: 规则Id (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewSetNotifyRuleRequest(
    ruleId int,
) *SetNotifyRuleRequest {

	return &SetNotifyRuleRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/notifyRules",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RuleId: ruleId,
	}
}

/*
 * param ruleId: 规则Id (Required)
 * param sendWay: 发送方式。1为站内信，2为邮件，3为短信。 (Optional)
 * param sendTime: 发送时间方式。 0为8点到20点，1为24小时。 (Optional)
 * param enabled: 启用/禁用 (Optional)
 * param contactIds: 联系人id列表, 逗号分隔 (Optional)
 * param contactgroupIds: 联系人组id列表, 逗号分隔 (Optional)
 * param mobiles: 电话号码列表, 逗号分隔 (Optional)
 * param emails: 邮箱列表, 逗号分隔 (Optional)
 */
func NewSetNotifyRuleRequestWithAllParams(
    ruleId int,
    sendWay *int,
    sendTime *int,
    enabled *int,
    contactIds *string,
    contactgroupIds *string,
    mobiles *string,
    emails *string,
) *SetNotifyRuleRequest {

    return &SetNotifyRuleRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/notifyRules",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RuleId: ruleId,
        SendWay: sendWay,
        SendTime: sendTime,
        Enabled: enabled,
        ContactIds: contactIds,
        ContactgroupIds: contactgroupIds,
        Mobiles: mobiles,
        Emails: emails,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewSetNotifyRuleRequestWithoutParam() *SetNotifyRuleRequest {

    return &SetNotifyRuleRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/notifyRules",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param ruleId: 规则Id(Required) */
func (r *SetNotifyRuleRequest) SetRuleId(ruleId int) {
    r.RuleId = ruleId
}

/* param sendWay: 发送方式。1为站内信，2为邮件，3为短信。(Optional) */
func (r *SetNotifyRuleRequest) SetSendWay(sendWay int) {
    r.SendWay = &sendWay
}

/* param sendTime: 发送时间方式。 0为8点到20点，1为24小时。(Optional) */
func (r *SetNotifyRuleRequest) SetSendTime(sendTime int) {
    r.SendTime = &sendTime
}

/* param enabled: 启用/禁用(Optional) */
func (r *SetNotifyRuleRequest) SetEnabled(enabled int) {
    r.Enabled = &enabled
}

/* param contactIds: 联系人id列表, 逗号分隔(Optional) */
func (r *SetNotifyRuleRequest) SetContactIds(contactIds string) {
    r.ContactIds = &contactIds
}

/* param contactgroupIds: 联系人组id列表, 逗号分隔(Optional) */
func (r *SetNotifyRuleRequest) SetContactgroupIds(contactgroupIds string) {
    r.ContactgroupIds = &contactgroupIds
}

/* param mobiles: 电话号码列表, 逗号分隔(Optional) */
func (r *SetNotifyRuleRequest) SetMobiles(mobiles string) {
    r.Mobiles = &mobiles
}

/* param emails: 邮箱列表, 逗号分隔(Optional) */
func (r *SetNotifyRuleRequest) SetEmails(emails string) {
    r.Emails = &emails
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r SetNotifyRuleRequest) GetRegionId() string {
    return ""
}

type SetNotifyRuleResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result SetNotifyRuleResult `json:"result"`
}

type SetNotifyRuleResult struct {
    Success bool `json:"success"`
    Msg string `json:"msg"`
}