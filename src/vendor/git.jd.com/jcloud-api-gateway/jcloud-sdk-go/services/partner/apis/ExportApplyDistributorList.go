// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type ExportApplyDistributorListRequest struct {

    core.JDCloudRequest

    /*   */
    RegionId string `json:"regionId"`

    /* 用户pin (Optional) */
    Pin *string `json:"pin"`

    /* 公司名称 (Optional) */
    CompanyName *string `json:"companyName"`

    /* 查询申请开始时间 (Optional) */
    StartTime *string `json:"startTime"`

    /* 查询申请结束时间 (Optional) */
    EndTime *string `json:"endTime"`

    /* 当前页序号 (Optional) */
    PageIndex *string `json:"pageIndex"`

    /* 每页结果数量 (Optional) */
    PageSize *string `json:"pageSize"`
}

/*
 * param regionId:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewExportApplyDistributorListRequest(
    regionId string,
) *ExportApplyDistributorListRequest {

	return &ExportApplyDistributorListRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/distributorManage:exportApplyDistributorList",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId:  (Required)
 * param pin: 用户pin (Optional)
 * param companyName: 公司名称 (Optional)
 * param startTime: 查询申请开始时间 (Optional)
 * param endTime: 查询申请结束时间 (Optional)
 * param pageIndex: 当前页序号 (Optional)
 * param pageSize: 每页结果数量 (Optional)
 */
func NewExportApplyDistributorListRequestWithAllParams(
    regionId string,
    pin *string,
    companyName *string,
    startTime *string,
    endTime *string,
    pageIndex *string,
    pageSize *string,
) *ExportApplyDistributorListRequest {

    return &ExportApplyDistributorListRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/distributorManage:exportApplyDistributorList",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Pin: pin,
        CompanyName: companyName,
        StartTime: startTime,
        EndTime: endTime,
        PageIndex: pageIndex,
        PageSize: pageSize,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewExportApplyDistributorListRequestWithoutParam() *ExportApplyDistributorListRequest {

    return &ExportApplyDistributorListRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/distributorManage:exportApplyDistributorList",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: (Required) */
func (r *ExportApplyDistributorListRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param pin: 用户pin(Optional) */
func (r *ExportApplyDistributorListRequest) SetPin(pin string) {
    r.Pin = &pin
}

/* param companyName: 公司名称(Optional) */
func (r *ExportApplyDistributorListRequest) SetCompanyName(companyName string) {
    r.CompanyName = &companyName
}

/* param startTime: 查询申请开始时间(Optional) */
func (r *ExportApplyDistributorListRequest) SetStartTime(startTime string) {
    r.StartTime = &startTime
}

/* param endTime: 查询申请结束时间(Optional) */
func (r *ExportApplyDistributorListRequest) SetEndTime(endTime string) {
    r.EndTime = &endTime
}

/* param pageIndex: 当前页序号(Optional) */
func (r *ExportApplyDistributorListRequest) SetPageIndex(pageIndex string) {
    r.PageIndex = &pageIndex
}

/* param pageSize: 每页结果数量(Optional) */
func (r *ExportApplyDistributorListRequest) SetPageSize(pageSize string) {
    r.PageSize = &pageSize
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ExportApplyDistributorListRequest) GetRegionId() string {
    return r.RegionId
}

type ExportApplyDistributorListResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ExportApplyDistributorListResult `json:"result"`
}

type ExportApplyDistributorListResult struct {
    Uri string `json:"uri"`
}