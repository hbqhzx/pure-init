// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type AddOperateAuthorityRequest struct {

    core.JDCloudRequest

    /*   */
    RegionId string `json:"regionId"`

    /* ID (Optional) */
    Id *int `json:"id"`

    /* 部门ID (Optional) */
    DeptId *int `json:"deptId"`

    /* 部门名称 (Optional) */
    DeptName *string `json:"deptName"`

    /* 操作人 (Optional) */
    Operator *string `json:"operator"`

    /* 修改时间 (Optional) */
    CreateTime *string `json:"createTime"`

    /* 创建人 (Optional) */
    CreateUser *string `json:"createUser"`

    /* 修改时间 (Optional) */
    UpdateTime *string `json:"updateTime"`

    /* 修改人 (Optional) */
    UpdateUser *string `json:"updateUser"`

    /* 是否删除0未删除,1已删除 (Optional) */
    Yn *int `json:"yn"`
}

/*
 * param regionId:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewAddOperateAuthorityRequest(
    regionId string,
) *AddOperateAuthorityRequest {

	return &AddOperateAuthorityRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/operateAuthority/addOperateAuthority",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId:  (Required)
 * param id: ID (Optional)
 * param deptId: 部门ID (Optional)
 * param deptName: 部门名称 (Optional)
 * param operator: 操作人 (Optional)
 * param createTime: 修改时间 (Optional)
 * param createUser: 创建人 (Optional)
 * param updateTime: 修改时间 (Optional)
 * param updateUser: 修改人 (Optional)
 * param yn: 是否删除0未删除,1已删除 (Optional)
 */
func NewAddOperateAuthorityRequestWithAllParams(
    regionId string,
    id *int,
    deptId *int,
    deptName *string,
    operator *string,
    createTime *string,
    createUser *string,
    updateTime *string,
    updateUser *string,
    yn *int,
) *AddOperateAuthorityRequest {

    return &AddOperateAuthorityRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/operateAuthority/addOperateAuthority",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Id: id,
        DeptId: deptId,
        DeptName: deptName,
        Operator: operator,
        CreateTime: createTime,
        CreateUser: createUser,
        UpdateTime: updateTime,
        UpdateUser: updateUser,
        Yn: yn,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewAddOperateAuthorityRequestWithoutParam() *AddOperateAuthorityRequest {

    return &AddOperateAuthorityRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/operateAuthority/addOperateAuthority",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: (Required) */
func (r *AddOperateAuthorityRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param id: ID(Optional) */
func (r *AddOperateAuthorityRequest) SetId(id int) {
    r.Id = &id
}

/* param deptId: 部门ID(Optional) */
func (r *AddOperateAuthorityRequest) SetDeptId(deptId int) {
    r.DeptId = &deptId
}

/* param deptName: 部门名称(Optional) */
func (r *AddOperateAuthorityRequest) SetDeptName(deptName string) {
    r.DeptName = &deptName
}

/* param operator: 操作人(Optional) */
func (r *AddOperateAuthorityRequest) SetOperator(operator string) {
    r.Operator = &operator
}

/* param createTime: 修改时间(Optional) */
func (r *AddOperateAuthorityRequest) SetCreateTime(createTime string) {
    r.CreateTime = &createTime
}

/* param createUser: 创建人(Optional) */
func (r *AddOperateAuthorityRequest) SetCreateUser(createUser string) {
    r.CreateUser = &createUser
}

/* param updateTime: 修改时间(Optional) */
func (r *AddOperateAuthorityRequest) SetUpdateTime(updateTime string) {
    r.UpdateTime = &updateTime
}

/* param updateUser: 修改人(Optional) */
func (r *AddOperateAuthorityRequest) SetUpdateUser(updateUser string) {
    r.UpdateUser = &updateUser
}

/* param yn: 是否删除0未删除,1已删除(Optional) */
func (r *AddOperateAuthorityRequest) SetYn(yn int) {
    r.Yn = &yn
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r AddOperateAuthorityRequest) GetRegionId() string {
    return r.RegionId
}

type AddOperateAuthorityResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result AddOperateAuthorityResult `json:"result"`
}

type AddOperateAuthorityResult struct {
    Result bool `json:"result"`
}