// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    partner "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/partner/models"
)

type QueryDicDetailListRequest struct {

    core.JDCloudRequest

    /*   */
    RegionId string `json:"regionId"`

    /* ID (Optional) */
    Id *int `json:"id"`

    /* 字典类型 (Optional) */
    CodeType *string `json:"codeType"`

    /* 字典编码 (Optional) */
    Code *string `json:"code"`

    /* 字典编码名称 (Optional) */
    Name *string `json:"name"`

    /* 字典编码值 (Optional) */
    Value *string `json:"value"`

    /* null (Optional) */
    UseFlag *bool `json:"useFlag"`

    /* 系统类型 (Optional) */
    SystemType *string `json:"systemType"`

    /* 引用值 (Optional) */
    RefValue *string `json:"refValue"`

    /* 顺序 (Optional) */
    Seq *int `json:"seq"`

    /* 字典说明 (Optional) */
    Remark *string `json:"remark"`

    /* 创建时间 (Optional) */
    CreateTime *string `json:"createTime"`

    /* 创建人 (Optional) */
    CreateUser *string `json:"createUser"`

    /* 修改时间 (Optional) */
    UpdateTime *string `json:"updateTime"`

    /* 修改人 (Optional) */
    UpdateUser *string `json:"updateUser"`

    /* 是否删除0未删除,1已删除 (Optional) */
    Yn *int `json:"yn"`

    /* 当前页序号 (Optional) */
    PageIndex *int `json:"pageIndex"`

    /* 每页结果数量 (Optional) */
    PageSize *int `json:"pageSize"`

    /*  (Optional) */
    Offset *int `json:"offset"`
}

/*
 * param regionId:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryDicDetailListRequest(
    regionId string,
) *QueryDicDetailListRequest {

	return &QueryDicDetailListRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/dictionary/queryDicDetailList",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId:  (Required)
 * param id: ID (Optional)
 * param codeType: 字典类型 (Optional)
 * param code: 字典编码 (Optional)
 * param name: 字典编码名称 (Optional)
 * param value: 字典编码值 (Optional)
 * param useFlag: null (Optional)
 * param systemType: 系统类型 (Optional)
 * param refValue: 引用值 (Optional)
 * param seq: 顺序 (Optional)
 * param remark: 字典说明 (Optional)
 * param createTime: 创建时间 (Optional)
 * param createUser: 创建人 (Optional)
 * param updateTime: 修改时间 (Optional)
 * param updateUser: 修改人 (Optional)
 * param yn: 是否删除0未删除,1已删除 (Optional)
 * param pageIndex: 当前页序号 (Optional)
 * param pageSize: 每页结果数量 (Optional)
 * param offset:  (Optional)
 */
func NewQueryDicDetailListRequestWithAllParams(
    regionId string,
    id *int,
    codeType *string,
    code *string,
    name *string,
    value *string,
    useFlag *bool,
    systemType *string,
    refValue *string,
    seq *int,
    remark *string,
    createTime *string,
    createUser *string,
    updateTime *string,
    updateUser *string,
    yn *int,
    pageIndex *int,
    pageSize *int,
    offset *int,
) *QueryDicDetailListRequest {

    return &QueryDicDetailListRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/dictionary/queryDicDetailList",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Id: id,
        CodeType: codeType,
        Code: code,
        Name: name,
        Value: value,
        UseFlag: useFlag,
        SystemType: systemType,
        RefValue: refValue,
        Seq: seq,
        Remark: remark,
        CreateTime: createTime,
        CreateUser: createUser,
        UpdateTime: updateTime,
        UpdateUser: updateUser,
        Yn: yn,
        PageIndex: pageIndex,
        PageSize: pageSize,
        Offset: offset,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryDicDetailListRequestWithoutParam() *QueryDicDetailListRequest {

    return &QueryDicDetailListRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/dictionary/queryDicDetailList",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: (Required) */
func (r *QueryDicDetailListRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param id: ID(Optional) */
func (r *QueryDicDetailListRequest) SetId(id int) {
    r.Id = &id
}

/* param codeType: 字典类型(Optional) */
func (r *QueryDicDetailListRequest) SetCodeType(codeType string) {
    r.CodeType = &codeType
}

/* param code: 字典编码(Optional) */
func (r *QueryDicDetailListRequest) SetCode(code string) {
    r.Code = &code
}

/* param name: 字典编码名称(Optional) */
func (r *QueryDicDetailListRequest) SetName(name string) {
    r.Name = &name
}

/* param value: 字典编码值(Optional) */
func (r *QueryDicDetailListRequest) SetValue(value string) {
    r.Value = &value
}

/* param useFlag: null(Optional) */
func (r *QueryDicDetailListRequest) SetUseFlag(useFlag bool) {
    r.UseFlag = &useFlag
}

/* param systemType: 系统类型(Optional) */
func (r *QueryDicDetailListRequest) SetSystemType(systemType string) {
    r.SystemType = &systemType
}

/* param refValue: 引用值(Optional) */
func (r *QueryDicDetailListRequest) SetRefValue(refValue string) {
    r.RefValue = &refValue
}

/* param seq: 顺序(Optional) */
func (r *QueryDicDetailListRequest) SetSeq(seq int) {
    r.Seq = &seq
}

/* param remark: 字典说明(Optional) */
func (r *QueryDicDetailListRequest) SetRemark(remark string) {
    r.Remark = &remark
}

/* param createTime: 创建时间(Optional) */
func (r *QueryDicDetailListRequest) SetCreateTime(createTime string) {
    r.CreateTime = &createTime
}

/* param createUser: 创建人(Optional) */
func (r *QueryDicDetailListRequest) SetCreateUser(createUser string) {
    r.CreateUser = &createUser
}

/* param updateTime: 修改时间(Optional) */
func (r *QueryDicDetailListRequest) SetUpdateTime(updateTime string) {
    r.UpdateTime = &updateTime
}

/* param updateUser: 修改人(Optional) */
func (r *QueryDicDetailListRequest) SetUpdateUser(updateUser string) {
    r.UpdateUser = &updateUser
}

/* param yn: 是否删除0未删除,1已删除(Optional) */
func (r *QueryDicDetailListRequest) SetYn(yn int) {
    r.Yn = &yn
}

/* param pageIndex: 当前页序号(Optional) */
func (r *QueryDicDetailListRequest) SetPageIndex(pageIndex int) {
    r.PageIndex = &pageIndex
}

/* param pageSize: 每页结果数量(Optional) */
func (r *QueryDicDetailListRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param offset: (Optional) */
func (r *QueryDicDetailListRequest) SetOffset(offset int) {
    r.Offset = &offset
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryDicDetailListRequest) GetRegionId() string {
    return r.RegionId
}

type QueryDicDetailListResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryDicDetailListResult `json:"result"`
}

type QueryDicDetailListResult struct {
    DicDetails []partner.DicDetail `json:"dicDetails"`
}