// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type ExportOneLevelDistributorAchievmentForErpRequest struct {

    core.JDCloudRequest

    /*   */
    RegionId string `json:"regionId"`

    /* 一级服务商名称 (Optional) */
    DistributorName *string `json:"distributorName"`

    /* 服务商类型 (Optional) */
    DistributorType *string `json:"distributorType"`

    /* 部门 (Optional) */
    Dept *int `json:"dept"`

    /* 按月查询开始时间  */
    BeginTime string `json:"beginTime"`

    /* 按月查询结束时间  */
    EndTime string `json:"endTime"`
}

/*
 * param regionId:  (Required)
 * param beginTime: 按月查询开始时间 (Required)
 * param endTime: 按月查询结束时间 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewExportOneLevelDistributorAchievmentForErpRequest(
    regionId string,
    beginTime string,
    endTime string,
) *ExportOneLevelDistributorAchievmentForErpRequest {

	return &ExportOneLevelDistributorAchievmentForErpRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/achievementManage/exportOneLevelDistributorAchievmentForErp",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        BeginTime: beginTime,
        EndTime: endTime,
	}
}

/*
 * param regionId:  (Required)
 * param distributorName: 一级服务商名称 (Optional)
 * param distributorType: 服务商类型 (Optional)
 * param dept: 部门 (Optional)
 * param beginTime: 按月查询开始时间 (Required)
 * param endTime: 按月查询结束时间 (Required)
 */
func NewExportOneLevelDistributorAchievmentForErpRequestWithAllParams(
    regionId string,
    distributorName *string,
    distributorType *string,
    dept *int,
    beginTime string,
    endTime string,
) *ExportOneLevelDistributorAchievmentForErpRequest {

    return &ExportOneLevelDistributorAchievmentForErpRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/achievementManage/exportOneLevelDistributorAchievmentForErp",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        DistributorName: distributorName,
        DistributorType: distributorType,
        Dept: dept,
        BeginTime: beginTime,
        EndTime: endTime,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewExportOneLevelDistributorAchievmentForErpRequestWithoutParam() *ExportOneLevelDistributorAchievmentForErpRequest {

    return &ExportOneLevelDistributorAchievmentForErpRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/achievementManage/exportOneLevelDistributorAchievmentForErp",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: (Required) */
func (r *ExportOneLevelDistributorAchievmentForErpRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param distributorName: 一级服务商名称(Optional) */
func (r *ExportOneLevelDistributorAchievmentForErpRequest) SetDistributorName(distributorName string) {
    r.DistributorName = &distributorName
}

/* param distributorType: 服务商类型(Optional) */
func (r *ExportOneLevelDistributorAchievmentForErpRequest) SetDistributorType(distributorType string) {
    r.DistributorType = &distributorType
}

/* param dept: 部门(Optional) */
func (r *ExportOneLevelDistributorAchievmentForErpRequest) SetDept(dept int) {
    r.Dept = &dept
}

/* param beginTime: 按月查询开始时间(Required) */
func (r *ExportOneLevelDistributorAchievmentForErpRequest) SetBeginTime(beginTime string) {
    r.BeginTime = beginTime
}

/* param endTime: 按月查询结束时间(Required) */
func (r *ExportOneLevelDistributorAchievmentForErpRequest) SetEndTime(endTime string) {
    r.EndTime = endTime
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ExportOneLevelDistributorAchievmentForErpRequest) GetRegionId() string {
    return r.RegionId
}

type ExportOneLevelDistributorAchievmentForErpResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ExportOneLevelDistributorAchievmentForErpResult `json:"result"`
}

type ExportOneLevelDistributorAchievmentForErpResult struct {
    Uri string `json:"uri"`
}