// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    partner "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/partner/models"
)

type QueryReturnRuleListRequest struct {

    core.JDCloudRequest

    /*   */
    RegionId string `json:"regionId"`

    /* ID (Optional) */
    Id *int `json:"id"`

    /* 部门ID (Optional) */
    DeptId *int `json:"deptId"`

    /* 部门名称 (Optional) */
    DeptName *string `json:"deptName"`

    /* 渠道商类型 (Optional) */
    DistributorType *int `json:"distributorType"`

    /* 是否返还标志 (Optional) */
    IsReturn *int `json:"isReturn"`

    /* 周期类型 (Optional) */
    CircleType *int `json:"circleType"`

    /* 周期名称 (Optional) */
    CircleName *string `json:"circleName"`

    /* 创建时间 (Optional) */
    CreateTime *string `json:"createTime"`

    /* 创建人 (Optional) */
    CreateUser *string `json:"createUser"`

    /* 修改时间 (Optional) */
    UpdateTime *string `json:"updateTime"`

    /* 修改人 (Optional) */
    UpdateUser *string `json:"updateUser"`

    /* 是否删除0未删除,1已删除 (Optional) */
    Yn *int `json:"yn"`

    /* 当前页序号 (Optional) */
    PageIndex *int `json:"pageIndex"`

    /* 每页结果数量 (Optional) */
    PageSize *int `json:"pageSize"`

    /*  (Optional) */
    Offset *int `json:"offset"`
}

/*
 * param regionId:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryReturnRuleListRequest(
    regionId string,
) *QueryReturnRuleListRequest {

	return &QueryReturnRuleListRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/returnRule/queryReturnRuleList",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId:  (Required)
 * param id: ID (Optional)
 * param deptId: 部门ID (Optional)
 * param deptName: 部门名称 (Optional)
 * param distributorType: 渠道商类型 (Optional)
 * param isReturn: 是否返还标志 (Optional)
 * param circleType: 周期类型 (Optional)
 * param circleName: 周期名称 (Optional)
 * param createTime: 创建时间 (Optional)
 * param createUser: 创建人 (Optional)
 * param updateTime: 修改时间 (Optional)
 * param updateUser: 修改人 (Optional)
 * param yn: 是否删除0未删除,1已删除 (Optional)
 * param pageIndex: 当前页序号 (Optional)
 * param pageSize: 每页结果数量 (Optional)
 * param offset:  (Optional)
 */
func NewQueryReturnRuleListRequestWithAllParams(
    regionId string,
    id *int,
    deptId *int,
    deptName *string,
    distributorType *int,
    isReturn *int,
    circleType *int,
    circleName *string,
    createTime *string,
    createUser *string,
    updateTime *string,
    updateUser *string,
    yn *int,
    pageIndex *int,
    pageSize *int,
    offset *int,
) *QueryReturnRuleListRequest {

    return &QueryReturnRuleListRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/returnRule/queryReturnRuleList",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Id: id,
        DeptId: deptId,
        DeptName: deptName,
        DistributorType: distributorType,
        IsReturn: isReturn,
        CircleType: circleType,
        CircleName: circleName,
        CreateTime: createTime,
        CreateUser: createUser,
        UpdateTime: updateTime,
        UpdateUser: updateUser,
        Yn: yn,
        PageIndex: pageIndex,
        PageSize: pageSize,
        Offset: offset,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryReturnRuleListRequestWithoutParam() *QueryReturnRuleListRequest {

    return &QueryReturnRuleListRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/returnRule/queryReturnRuleList",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: (Required) */
func (r *QueryReturnRuleListRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param id: ID(Optional) */
func (r *QueryReturnRuleListRequest) SetId(id int) {
    r.Id = &id
}

/* param deptId: 部门ID(Optional) */
func (r *QueryReturnRuleListRequest) SetDeptId(deptId int) {
    r.DeptId = &deptId
}

/* param deptName: 部门名称(Optional) */
func (r *QueryReturnRuleListRequest) SetDeptName(deptName string) {
    r.DeptName = &deptName
}

/* param distributorType: 渠道商类型(Optional) */
func (r *QueryReturnRuleListRequest) SetDistributorType(distributorType int) {
    r.DistributorType = &distributorType
}

/* param isReturn: 是否返还标志(Optional) */
func (r *QueryReturnRuleListRequest) SetIsReturn(isReturn int) {
    r.IsReturn = &isReturn
}

/* param circleType: 周期类型(Optional) */
func (r *QueryReturnRuleListRequest) SetCircleType(circleType int) {
    r.CircleType = &circleType
}

/* param circleName: 周期名称(Optional) */
func (r *QueryReturnRuleListRequest) SetCircleName(circleName string) {
    r.CircleName = &circleName
}

/* param createTime: 创建时间(Optional) */
func (r *QueryReturnRuleListRequest) SetCreateTime(createTime string) {
    r.CreateTime = &createTime
}

/* param createUser: 创建人(Optional) */
func (r *QueryReturnRuleListRequest) SetCreateUser(createUser string) {
    r.CreateUser = &createUser
}

/* param updateTime: 修改时间(Optional) */
func (r *QueryReturnRuleListRequest) SetUpdateTime(updateTime string) {
    r.UpdateTime = &updateTime
}

/* param updateUser: 修改人(Optional) */
func (r *QueryReturnRuleListRequest) SetUpdateUser(updateUser string) {
    r.UpdateUser = &updateUser
}

/* param yn: 是否删除0未删除,1已删除(Optional) */
func (r *QueryReturnRuleListRequest) SetYn(yn int) {
    r.Yn = &yn
}

/* param pageIndex: 当前页序号(Optional) */
func (r *QueryReturnRuleListRequest) SetPageIndex(pageIndex int) {
    r.PageIndex = &pageIndex
}

/* param pageSize: 每页结果数量(Optional) */
func (r *QueryReturnRuleListRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param offset: (Optional) */
func (r *QueryReturnRuleListRequest) SetOffset(offset int) {
    r.Offset = &offset
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryReturnRuleListRequest) GetRegionId() string {
    return r.RegionId
}

type QueryReturnRuleListResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryReturnRuleListResult `json:"result"`
}

type QueryReturnRuleListResult struct {
    Pagination partner.Pagination `json:"pagination"`
    Result []partner.ReturnRuleResult `json:"result"`
}