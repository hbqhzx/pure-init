// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type ApplyDistributorRequest struct {

    core.JDCloudRequest

    /*   */
    RegionId string `json:"regionId"`

    /* null  */
    CompanyName string `json:"companyName"`

    /* 业务区域（北north,南south, 东east 西west）  */
    Region string `json:"region"`

    /* 公司规模  */
    CompanyScale int `json:"companyScale"`

    /* 公司网址  */
    Website string `json:"website"`

    /* 联系人姓名  */
    Contactor string `json:"contactor"`

    /* 联系人电话  */
    Tel string `json:"tel"`

    /* 邮箱  */
    Email string `json:"email"`

    /* 合作类型  */
    CooperateType string `json:"cooperateType"`
}

/*
 * param regionId:  (Required)
 * param companyName: null (Required)
 * param region: 业务区域（北north,南south, 东east 西west） (Required)
 * param companyScale: 公司规模 (Required)
 * param website: 公司网址 (Required)
 * param contactor: 联系人姓名 (Required)
 * param tel: 联系人电话 (Required)
 * param email: 邮箱 (Required)
 * param cooperateType: 合作类型 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewApplyDistributorRequest(
    regionId string,
    companyName string,
    region string,
    companyScale int,
    website string,
    contactor string,
    tel string,
    email string,
    cooperateType string,
) *ApplyDistributorRequest {

	return &ApplyDistributorRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/distributorManage:applyDistributor",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        CompanyName: companyName,
        Region: region,
        CompanyScale: companyScale,
        Website: website,
        Contactor: contactor,
        Tel: tel,
        Email: email,
        CooperateType: cooperateType,
	}
}

/*
 * param regionId:  (Required)
 * param companyName: null (Required)
 * param region: 业务区域（北north,南south, 东east 西west） (Required)
 * param companyScale: 公司规模 (Required)
 * param website: 公司网址 (Required)
 * param contactor: 联系人姓名 (Required)
 * param tel: 联系人电话 (Required)
 * param email: 邮箱 (Required)
 * param cooperateType: 合作类型 (Required)
 */
func NewApplyDistributorRequestWithAllParams(
    regionId string,
    companyName string,
    region string,
    companyScale int,
    website string,
    contactor string,
    tel string,
    email string,
    cooperateType string,
) *ApplyDistributorRequest {

    return &ApplyDistributorRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/distributorManage:applyDistributor",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        CompanyName: companyName,
        Region: region,
        CompanyScale: companyScale,
        Website: website,
        Contactor: contactor,
        Tel: tel,
        Email: email,
        CooperateType: cooperateType,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewApplyDistributorRequestWithoutParam() *ApplyDistributorRequest {

    return &ApplyDistributorRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/distributorManage:applyDistributor",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: (Required) */
func (r *ApplyDistributorRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param companyName: null(Required) */
func (r *ApplyDistributorRequest) SetCompanyName(companyName string) {
    r.CompanyName = companyName
}

/* param region: 业务区域（北north,南south, 东east 西west）(Required) */
func (r *ApplyDistributorRequest) SetRegion(region string) {
    r.Region = region
}

/* param companyScale: 公司规模(Required) */
func (r *ApplyDistributorRequest) SetCompanyScale(companyScale int) {
    r.CompanyScale = companyScale
}

/* param website: 公司网址(Required) */
func (r *ApplyDistributorRequest) SetWebsite(website string) {
    r.Website = website
}

/* param contactor: 联系人姓名(Required) */
func (r *ApplyDistributorRequest) SetContactor(contactor string) {
    r.Contactor = contactor
}

/* param tel: 联系人电话(Required) */
func (r *ApplyDistributorRequest) SetTel(tel string) {
    r.Tel = tel
}

/* param email: 邮箱(Required) */
func (r *ApplyDistributorRequest) SetEmail(email string) {
    r.Email = email
}

/* param cooperateType: 合作类型(Required) */
func (r *ApplyDistributorRequest) SetCooperateType(cooperateType string) {
    r.CooperateType = cooperateType
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ApplyDistributorRequest) GetRegionId() string {
    return r.RegionId
}

type ApplyDistributorResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ApplyDistributorResult `json:"result"`
}

type ApplyDistributorResult struct {
    Result bool `json:"result"`
}