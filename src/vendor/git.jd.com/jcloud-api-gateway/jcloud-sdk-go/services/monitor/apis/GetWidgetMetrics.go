// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    monitor "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/monitor/models"
)

type GetWidgetMetricsRequest struct {

    core.JDCloudRequest

    /*  (Optional) */
    ServiceCode []string `json:"serviceCode"`

    /* name为serviceCode - 多个产品线serviceCode (Optional) */
    Filters []monitor.Filter `json:"filters"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetWidgetMetricsRequest(
) *GetWidgetMetricsRequest {

	return &GetWidgetMetricsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/widgetMetrics",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param serviceCode:  (Optional)
 * param filters: name为serviceCode - 多个产品线serviceCode (Optional)
 */
func NewGetWidgetMetricsRequestWithAllParams(
    serviceCode []string,
    filters []monitor.Filter,
) *GetWidgetMetricsRequest {

    return &GetWidgetMetricsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/widgetMetrics",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        ServiceCode: serviceCode,
        Filters: filters,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetWidgetMetricsRequestWithoutParam() *GetWidgetMetricsRequest {

    return &GetWidgetMetricsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/widgetMetrics",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param serviceCode: (Optional) */
func (r *GetWidgetMetricsRequest) SetServiceCode(serviceCode []string) {
    r.ServiceCode = serviceCode
}

/* param filters: name为serviceCode - 多个产品线serviceCode(Optional) */
func (r *GetWidgetMetricsRequest) SetFilters(filters []monitor.Filter) {
    r.Filters = filters
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetWidgetMetricsRequest) GetRegionId() string {
    return ""
}

type GetWidgetMetricsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetWidgetMetricsResult `json:"result"`
}

type GetWidgetMetricsResult struct {
    List []monitor.WidgetSupportedProduct `json:"list"`
}