// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    monitor "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/monitor/models"
)

type DeleteAuxiliaryTagsRequest struct {

    core.JDCloudRequest

    /*   */
    RegionId string `json:"regionId"`

    /* 应用码。调用此API前需找云监控提供  */
    AppCode string `json:"appCode"`

    /* 组id。须确保在一个APP范围内全局唯一  */
    GroupCode string `json:"groupCode"`

    /* name 为"resourceIds" 表示资源列表，总资源不能超过100个  */
    Filters []monitor.Filter `json:"filters"`
}

/*
 * param regionId:  (Required)
 * param appCode: 应用码。调用此API前需找云监控提供 (Required)
 * param groupCode: 组id。须确保在一个APP范围内全局唯一 (Required)
 * param filters: name 为"resourceIds" 表示资源列表，总资源不能超过100个 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDeleteAuxiliaryTagsRequest(
    regionId string,
    appCode string,
    groupCode string,
    filters []monitor.Filter,
) *DeleteAuxiliaryTagsRequest {

	return &DeleteAuxiliaryTagsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/auxiliaryTags",
			Method:  "DELETE",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        AppCode: appCode,
        GroupCode: groupCode,
        Filters: filters,
	}
}

/*
 * param regionId:  (Required)
 * param appCode: 应用码。调用此API前需找云监控提供 (Required)
 * param groupCode: 组id。须确保在一个APP范围内全局唯一 (Required)
 * param filters: name 为"resourceIds" 表示资源列表，总资源不能超过100个 (Required)
 */
func NewDeleteAuxiliaryTagsRequestWithAllParams(
    regionId string,
    appCode string,
    groupCode string,
    filters []monitor.Filter,
) *DeleteAuxiliaryTagsRequest {

    return &DeleteAuxiliaryTagsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/auxiliaryTags",
            Method:  "DELETE",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        AppCode: appCode,
        GroupCode: groupCode,
        Filters: filters,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDeleteAuxiliaryTagsRequestWithoutParam() *DeleteAuxiliaryTagsRequest {

    return &DeleteAuxiliaryTagsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/auxiliaryTags",
            Method:  "DELETE",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: (Required) */
func (r *DeleteAuxiliaryTagsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param appCode: 应用码。调用此API前需找云监控提供(Required) */
func (r *DeleteAuxiliaryTagsRequest) SetAppCode(appCode string) {
    r.AppCode = appCode
}

/* param groupCode: 组id。须确保在一个APP范围内全局唯一(Required) */
func (r *DeleteAuxiliaryTagsRequest) SetGroupCode(groupCode string) {
    r.GroupCode = groupCode
}

/* param filters: name 为"resourceIds" 表示资源列表，总资源不能超过100个(Required) */
func (r *DeleteAuxiliaryTagsRequest) SetFilters(filters []monitor.Filter) {
    r.Filters = filters
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DeleteAuxiliaryTagsRequest) GetRegionId() string {
    return r.RegionId
}

type DeleteAuxiliaryTagsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DeleteAuxiliaryTagsResult `json:"result"`
}

type DeleteAuxiliaryTagsResult struct {
    Suc bool `json:"suc"`
}