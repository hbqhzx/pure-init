// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type DescribeNameValidateRequest struct {

    core.JDCloudRequest

    /* 要校验的服务范围、如template、siteMonitor、availableMonitor  */
    ServiceName string `json:"serviceName"`

    /* 产品线名称、模板名称重复性校验需要在servcieCode维度下校验 (Optional) */
    ServiceCode *string `json:"serviceCode"`

    /* 要校验的名称  */
    Name string `json:"name"`

    /* 有效性校验的类型，默认为1（重复性校验）、0-校验所有（包括1、2）、1-重复性校验、2-参数合法性校验 (Optional) */
    CheckType *int `json:"checkType"`
}

/*
 * param serviceName: 要校验的服务范围、如template、siteMonitor、availableMonitor (Required)
 * param name: 要校验的名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeNameValidateRequest(
    serviceName string,
    name string,
) *DescribeNameValidateRequest {

	return &DescribeNameValidateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/name:validate",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        ServiceName: serviceName,
        Name: name,
	}
}

/*
 * param serviceName: 要校验的服务范围、如template、siteMonitor、availableMonitor (Required)
 * param serviceCode: 产品线名称、模板名称重复性校验需要在servcieCode维度下校验 (Optional)
 * param name: 要校验的名称 (Required)
 * param checkType: 有效性校验的类型，默认为1（重复性校验）、0-校验所有（包括1、2）、1-重复性校验、2-参数合法性校验 (Optional)
 */
func NewDescribeNameValidateRequestWithAllParams(
    serviceName string,
    serviceCode *string,
    name string,
    checkType *int,
) *DescribeNameValidateRequest {

    return &DescribeNameValidateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/name:validate",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        ServiceName: serviceName,
        ServiceCode: serviceCode,
        Name: name,
        CheckType: checkType,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeNameValidateRequestWithoutParam() *DescribeNameValidateRequest {

    return &DescribeNameValidateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/name:validate",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param serviceName: 要校验的服务范围、如template、siteMonitor、availableMonitor(Required) */
func (r *DescribeNameValidateRequest) SetServiceName(serviceName string) {
    r.ServiceName = serviceName
}

/* param serviceCode: 产品线名称、模板名称重复性校验需要在servcieCode维度下校验(Optional) */
func (r *DescribeNameValidateRequest) SetServiceCode(serviceCode string) {
    r.ServiceCode = &serviceCode
}

/* param name: 要校验的名称(Required) */
func (r *DescribeNameValidateRequest) SetName(name string) {
    r.Name = name
}

/* param checkType: 有效性校验的类型，默认为1（重复性校验）、0-校验所有（包括1、2）、1-重复性校验、2-参数合法性校验(Optional) */
func (r *DescribeNameValidateRequest) SetCheckType(checkType int) {
    r.CheckType = &checkType
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeNameValidateRequest) GetRegionId() string {
    return ""
}

type DescribeNameValidateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeNameValidateResult `json:"result"`
}

type DescribeNameValidateResult struct {
    Code string `json:"code"`
}