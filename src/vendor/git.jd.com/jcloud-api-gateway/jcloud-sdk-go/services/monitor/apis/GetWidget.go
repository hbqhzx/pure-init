// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    monitor "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/monitor/models"
)

type GetWidgetRequest struct {

    core.JDCloudRequest

    /* DashboardUUID  */
    DashboardId string `json:"dashboardId"`

    /* name为'widgetId' - dashboard图表的id (Optional) */
    Filters []monitor.Filter `json:"filters"`
}

/*
 * param dashboardId: DashboardUUID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetWidgetRequest(
    dashboardId string,
) *GetWidgetRequest {

	return &GetWidgetRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/widget",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        DashboardId: dashboardId,
	}
}

/*
 * param dashboardId: DashboardUUID (Required)
 * param filters: name为'widgetId' - dashboard图表的id (Optional)
 */
func NewGetWidgetRequestWithAllParams(
    dashboardId string,
    filters []monitor.Filter,
) *GetWidgetRequest {

    return &GetWidgetRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/widget",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        DashboardId: dashboardId,
        Filters: filters,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetWidgetRequestWithoutParam() *GetWidgetRequest {

    return &GetWidgetRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/widget",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param dashboardId: DashboardUUID(Required) */
func (r *GetWidgetRequest) SetDashboardId(dashboardId string) {
    r.DashboardId = dashboardId
}

/* param filters: name为'widgetId' - dashboard图表的id(Optional) */
func (r *GetWidgetRequest) SetFilters(filters []monitor.Filter) {
    r.Filters = filters
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetWidgetRequest) GetRegionId() string {
    return ""
}

type GetWidgetResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetWidgetResult `json:"result"`
}

type GetWidgetResult struct {
    List []monitor.Widget `json:"list"`
}