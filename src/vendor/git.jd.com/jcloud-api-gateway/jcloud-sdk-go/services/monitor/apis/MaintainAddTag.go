// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    monitor "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/monitor/models"
)

type MaintainAddTagRequest struct {

    core.JDCloudRequest

    /*   */
    RegionId string `json:"regionId"`

    /* 应用码。调用此API前需找云监控提供  */
    AppCode string `json:"appCode"`

    /* 详细的过滤条件。 (Optional) */
    Filter []monitor.DataTag `json:"filter"`

    /* 组id。须确保在一个APP范围内全局唯一  */
    GroupCode string `json:"groupCode"`

    /* 资源列表。  */
    ResourceIds []string `json:"resourceIds"`

    /* 资源的产品线  */
    ServiceCode string `json:"serviceCode"`

    /*   */
    Tags *monitor.HandleTags `json:"tags"`
}

/*
 * param regionId:  (Required)
 * param appCode: 应用码。调用此API前需找云监控提供 (Required)
 * param groupCode: 组id。须确保在一个APP范围内全局唯一 (Required)
 * param resourceIds: 资源列表。 (Required)
 * param serviceCode: 资源的产品线 (Required)
 * param tags:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewMaintainAddTagRequest(
    regionId string,
    appCode string,
    groupCode string,
    resourceIds []string,
    serviceCode string,
    tags *monitor.HandleTags,
) *MaintainAddTagRequest {

	return &MaintainAddTagRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/maintainAuxiliaryTags",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        AppCode: appCode,
        GroupCode: groupCode,
        ResourceIds: resourceIds,
        ServiceCode: serviceCode,
        Tags: tags,
	}
}

/*
 * param regionId:  (Required)
 * param appCode: 应用码。调用此API前需找云监控提供 (Required)
 * param filter: 详细的过滤条件。 (Optional)
 * param groupCode: 组id。须确保在一个APP范围内全局唯一 (Required)
 * param resourceIds: 资源列表。 (Required)
 * param serviceCode: 资源的产品线 (Required)
 * param tags:  (Required)
 */
func NewMaintainAddTagRequestWithAllParams(
    regionId string,
    appCode string,
    filter []monitor.DataTag,
    groupCode string,
    resourceIds []string,
    serviceCode string,
    tags *monitor.HandleTags,
) *MaintainAddTagRequest {

    return &MaintainAddTagRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/maintainAuxiliaryTags",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        AppCode: appCode,
        Filter: filter,
        GroupCode: groupCode,
        ResourceIds: resourceIds,
        ServiceCode: serviceCode,
        Tags: tags,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewMaintainAddTagRequestWithoutParam() *MaintainAddTagRequest {

    return &MaintainAddTagRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/maintainAuxiliaryTags",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: (Required) */
func (r *MaintainAddTagRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param appCode: 应用码。调用此API前需找云监控提供(Required) */
func (r *MaintainAddTagRequest) SetAppCode(appCode string) {
    r.AppCode = appCode
}

/* param filter: 详细的过滤条件。(Optional) */
func (r *MaintainAddTagRequest) SetFilter(filter []monitor.DataTag) {
    r.Filter = filter
}

/* param groupCode: 组id。须确保在一个APP范围内全局唯一(Required) */
func (r *MaintainAddTagRequest) SetGroupCode(groupCode string) {
    r.GroupCode = groupCode
}

/* param resourceIds: 资源列表。(Required) */
func (r *MaintainAddTagRequest) SetResourceIds(resourceIds []string) {
    r.ResourceIds = resourceIds
}

/* param serviceCode: 资源的产品线(Required) */
func (r *MaintainAddTagRequest) SetServiceCode(serviceCode string) {
    r.ServiceCode = serviceCode
}

/* param tags: (Required) */
func (r *MaintainAddTagRequest) SetTags(tags *monitor.HandleTags) {
    r.Tags = tags
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r MaintainAddTagRequest) GetRegionId() string {
    return r.RegionId
}

type MaintainAddTagResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result MaintainAddTagResult `json:"result"`
}

type MaintainAddTagResult struct {
    Suc bool `json:"suc"`
}