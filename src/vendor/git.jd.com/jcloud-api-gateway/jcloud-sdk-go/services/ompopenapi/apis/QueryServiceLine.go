// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type QueryServiceLineRequest struct {

    core.JDCloudRequest

    /* 业务线ID  */
    ServiceId string `json:"serviceId"`
}

/*
 * param serviceId: 业务线ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryServiceLineRequest(
    serviceId string,
) *QueryServiceLineRequest {

	return &QueryServiceLineRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/serviceLine/{serviceId}",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        ServiceId: serviceId,
	}
}

/*
 * param serviceId: 业务线ID (Required)
 */
func NewQueryServiceLineRequestWithAllParams(
    serviceId string,
) *QueryServiceLineRequest {

    return &QueryServiceLineRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/serviceLine/{serviceId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        ServiceId: serviceId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryServiceLineRequestWithoutParam() *QueryServiceLineRequest {

    return &QueryServiceLineRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/serviceLine/{serviceId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param serviceId: 业务线ID(Required) */
func (r *QueryServiceLineRequest) SetServiceId(serviceId string) {
    r.ServiceId = serviceId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryServiceLineRequest) GetRegionId() string {
    return ""
}

type QueryServiceLineResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryServiceLineResult `json:"result"`
}

type QueryServiceLineResult struct {
    ServiceId int `json:"serviceId"`
    Name string `json:"name"`
    Erps string `json:"erps"`
    PmErp string `json:"pmErp"`
    NameEn string `json:"nameEn"`
    NameCh string `json:"nameCh"`
    Status int `json:"status"`
    CreateTime string `json:"createTime"`
    LastModifyTime string `json:"lastModifyTime"`
    LastModifier string `json:"lastModifier"`
}