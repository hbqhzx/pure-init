// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    ompopenapi "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/ompopenapi/models"
    common "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/common/models"
)

type GenerateApiRequest struct {

    core.JDCloudRequest

    /* 业务线名称  */
    Name string `json:"name"`

    /* name - 业务线名称
interfaceName - 接口名称
status - 对内上线状态，对外发布状态（0未上线未发布，1已上线未发布，2已上线已发布）
 (Optional) */
    Filters []common.Filter `json:"filters"`
}

/*
 * param name: 业务线名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGenerateApiRequest(
    name string,
) *GenerateApiRequest {

	return &GenerateApiRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/api/{name}:genLists",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        Name: name,
	}
}

/*
 * param name: 业务线名称 (Required)
 * param filters: name - 业务线名称
interfaceName - 接口名称
status - 对内上线状态，对外发布状态（0未上线未发布，1已上线未发布，2已上线已发布）
 (Optional)
 */
func NewGenerateApiRequestWithAllParams(
    name string,
    filters []common.Filter,
) *GenerateApiRequest {

    return &GenerateApiRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/api/{name}:genLists",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        Name: name,
        Filters: filters,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGenerateApiRequestWithoutParam() *GenerateApiRequest {

    return &GenerateApiRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/api/{name}:genLists",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param name: 业务线名称(Required) */
func (r *GenerateApiRequest) SetName(name string) {
    r.Name = name
}

/* param filters: name - 业务线名称
interfaceName - 接口名称
status - 对内上线状态，对外发布状态（0未上线未发布，1已上线未发布，2已上线已发布）
(Optional) */
func (r *GenerateApiRequest) SetFilters(filters []common.Filter) {
    r.Filters = filters
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GenerateApiRequest) GetRegionId() string {
    return ""
}

type GenerateApiResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GenerateApiResult `json:"result"`
}

type GenerateApiResult struct {
    Apis []ompopenapi.Api `json:"apis"`
    OperatedNames []string `json:"operatedNames"`
    EnableNames []string `json:"enableNames"`
}