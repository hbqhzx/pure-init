// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    ompopenapi "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/ompopenapi/models"
    common "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/common/models"
)

type DescribeRoutesRequest struct {

    core.JDCloudRequest

    /* 页码, 默认为1, 取值范围：[1,∞) (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 分页大小，默认为20，取值范围：[10,100] (Optional) */
    PageSize *int `json:"pageSize"`

    /* name - Route名称，模糊匹配，支持单个
 (Optional) */
    Filters []common.Filter `json:"filters"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeRoutesRequest(
) *DescribeRoutesRequest {

	return &DescribeRoutesRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/routes",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param pageNumber: 页码, 默认为1, 取值范围：[1,∞) (Optional)
 * param pageSize: 分页大小，默认为20，取值范围：[10,100] (Optional)
 * param filters: name - Route名称，模糊匹配，支持单个
 (Optional)
 */
func NewDescribeRoutesRequestWithAllParams(
    pageNumber *int,
    pageSize *int,
    filters []common.Filter,
) *DescribeRoutesRequest {

    return &DescribeRoutesRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/routes",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        PageNumber: pageNumber,
        PageSize: pageSize,
        Filters: filters,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeRoutesRequestWithoutParam() *DescribeRoutesRequest {

    return &DescribeRoutesRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/routes",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param pageNumber: 页码, 默认为1, 取值范围：[1,∞)(Optional) */
func (r *DescribeRoutesRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

/* param pageSize: 分页大小，默认为20，取值范围：[10,100](Optional) */
func (r *DescribeRoutesRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param filters: name - Route名称，模糊匹配，支持单个
(Optional) */
func (r *DescribeRoutesRequest) SetFilters(filters []common.Filter) {
    r.Filters = filters
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeRoutesRequest) GetRegionId() string {
    return ""
}

type DescribeRoutesResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeRoutesResult `json:"result"`
}

type DescribeRoutesResult struct {
    Routes []ompopenapi.Route `json:"routes"`
    PageInfo ompopenapi.PageInfo `json:"pageInfo"`
}