// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type UpdateServiceLineRequest struct {

    core.JDCloudRequest

    /* 业务线Id (Optional) */
    ServiceId *int `json:"serviceId"`

    /* service_code,业务线 (Optional) */
    Name *string `json:"name"`

    /* 开发人员erp，多个erp时用英文逗号分隔 (Optional) */
    Erps *string `json:"erps"`

    /* 产品经理erp，多个erp时用英文逗号分隔 (Optional) */
    PmErp *string `json:"pmErp"`

    /* 英文名 (Optional) */
    NameEn *string `json:"nameEn"`

    /* 中文名 (Optional) */
    NameCh *string `json:"nameCh"`

    /* 状态,-1已删除，0审批中，1通过，2拒绝 (Optional) */
    Status *int `json:"status"`

    /* 创建时间 (Optional) */
    CreateTime *string `json:"createTime"`

    /* 更新时间 (Optional) */
    LastModifyTime *string `json:"lastModifyTime"`

    /* 更新人员 (Optional) */
    LastModifier *string `json:"lastModifier"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateServiceLineRequest(
) *UpdateServiceLineRequest {

	return &UpdateServiceLineRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/serviceLine",
			Method:  "PATCH",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param serviceId: 业务线Id (Optional)
 * param name: service_code,业务线 (Optional)
 * param erps: 开发人员erp，多个erp时用英文逗号分隔 (Optional)
 * param pmErp: 产品经理erp，多个erp时用英文逗号分隔 (Optional)
 * param nameEn: 英文名 (Optional)
 * param nameCh: 中文名 (Optional)
 * param status: 状态,-1已删除，0审批中，1通过，2拒绝 (Optional)
 * param createTime: 创建时间 (Optional)
 * param lastModifyTime: 更新时间 (Optional)
 * param lastModifier: 更新人员 (Optional)
 */
func NewUpdateServiceLineRequestWithAllParams(
    serviceId *int,
    name *string,
    erps *string,
    pmErp *string,
    nameEn *string,
    nameCh *string,
    status *int,
    createTime *string,
    lastModifyTime *string,
    lastModifier *string,
) *UpdateServiceLineRequest {

    return &UpdateServiceLineRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/serviceLine",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
        ServiceId: serviceId,
        Name: name,
        Erps: erps,
        PmErp: pmErp,
        NameEn: nameEn,
        NameCh: nameCh,
        Status: status,
        CreateTime: createTime,
        LastModifyTime: lastModifyTime,
        LastModifier: lastModifier,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateServiceLineRequestWithoutParam() *UpdateServiceLineRequest {

    return &UpdateServiceLineRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/serviceLine",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param serviceId: 业务线Id(Optional) */
func (r *UpdateServiceLineRequest) SetServiceId(serviceId int) {
    r.ServiceId = &serviceId
}

/* param name: service_code,业务线(Optional) */
func (r *UpdateServiceLineRequest) SetName(name string) {
    r.Name = &name
}

/* param erps: 开发人员erp，多个erp时用英文逗号分隔(Optional) */
func (r *UpdateServiceLineRequest) SetErps(erps string) {
    r.Erps = &erps
}

/* param pmErp: 产品经理erp，多个erp时用英文逗号分隔(Optional) */
func (r *UpdateServiceLineRequest) SetPmErp(pmErp string) {
    r.PmErp = &pmErp
}

/* param nameEn: 英文名(Optional) */
func (r *UpdateServiceLineRequest) SetNameEn(nameEn string) {
    r.NameEn = &nameEn
}

/* param nameCh: 中文名(Optional) */
func (r *UpdateServiceLineRequest) SetNameCh(nameCh string) {
    r.NameCh = &nameCh
}

/* param status: 状态,-1已删除，0审批中，1通过，2拒绝(Optional) */
func (r *UpdateServiceLineRequest) SetStatus(status int) {
    r.Status = &status
}

/* param createTime: 创建时间(Optional) */
func (r *UpdateServiceLineRequest) SetCreateTime(createTime string) {
    r.CreateTime = &createTime
}

/* param lastModifyTime: 更新时间(Optional) */
func (r *UpdateServiceLineRequest) SetLastModifyTime(lastModifyTime string) {
    r.LastModifyTime = &lastModifyTime
}

/* param lastModifier: 更新人员(Optional) */
func (r *UpdateServiceLineRequest) SetLastModifier(lastModifier string) {
    r.LastModifier = &lastModifier
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateServiceLineRequest) GetRegionId() string {
    return ""
}

type UpdateServiceLineResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateServiceLineResult `json:"result"`
}

type UpdateServiceLineResult struct {
    ServiceId int `json:"serviceId"`
}