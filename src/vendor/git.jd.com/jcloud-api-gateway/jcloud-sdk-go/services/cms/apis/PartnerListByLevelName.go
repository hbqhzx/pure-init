// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    cms "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/cms/models"
)

type PartnerListByLevelNameRequest struct {

    core.JDCloudRequest

    /* levelName  */
    LevelName string `json:"levelName"`
}

/*
 * param levelName: levelName (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewPartnerListByLevelNameRequest(
    levelName string,
) *PartnerListByLevelNameRequest {

	return &PartnerListByLevelNameRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/portal/api/partner/listByLevelName",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        LevelName: levelName,
	}
}

/*
 * param levelName: levelName (Required)
 */
func NewPartnerListByLevelNameRequestWithAllParams(
    levelName string,
) *PartnerListByLevelNameRequest {

    return &PartnerListByLevelNameRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/portal/api/partner/listByLevelName",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        LevelName: levelName,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewPartnerListByLevelNameRequestWithoutParam() *PartnerListByLevelNameRequest {

    return &PartnerListByLevelNameRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/portal/api/partner/listByLevelName",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param levelName: levelName(Required) */
func (r *PartnerListByLevelNameRequest) SetLevelName(levelName string) {
    r.LevelName = levelName
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r PartnerListByLevelNameRequest) GetRegionId() string {
    return ""
}

type PartnerListByLevelNameResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result PartnerListByLevelNameResult `json:"result"`
}

type PartnerListByLevelNameResult struct {
    PartnerList []cms.Partner `json:"partnerList"`
}