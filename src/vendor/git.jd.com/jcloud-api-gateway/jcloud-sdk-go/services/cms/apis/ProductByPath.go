// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    cms "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/cms/models"
)

type ProductByPathRequest struct {

    core.JDCloudRequest

    /* path  */
    Path string `json:"path"`
}

/*
 * param path: path (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewProductByPathRequest(
    path string,
) *ProductByPathRequest {

	return &ProductByPathRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/portal/api/product/byPath",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        Path: path,
	}
}

/*
 * param path: path (Required)
 */
func NewProductByPathRequestWithAllParams(
    path string,
) *ProductByPathRequest {

    return &ProductByPathRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/portal/api/product/byPath",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        Path: path,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewProductByPathRequestWithoutParam() *ProductByPathRequest {

    return &ProductByPathRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/portal/api/product/byPath",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param path: path(Required) */
func (r *ProductByPathRequest) SetPath(path string) {
    r.Path = path
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ProductByPathRequest) GetRegionId() string {
    return ""
}

type ProductByPathResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ProductByPathResult `json:"result"`
}

type ProductByPathResult struct {
    Product cms.Product `json:"product"`
    HelpDocList []cms.Content `json:"helpDocList"`
}