// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    redis "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/redis/models"
)

type DescribeInstanceNamesRequest struct {

    core.JDCloudRequest

    /* 缓存Redis实例所在区域的Region ID。目前有华北-北京、华南-广州、华东-上海三个区域，Region ID分别为cn-north-1、cn-south-1、cn-east-2  */
    RegionId string `json:"regionId"`

    /* 资源id列表（多个以逗号分隔）  */
    ResourceList string `json:"resourceList"`
}

/*
 * param regionId: 缓存Redis实例所在区域的Region ID。目前有华北-北京、华南-广州、华东-上海三个区域，Region ID分别为cn-north-1、cn-south-1、cn-east-2 (Required)
 * param resourceList: 资源id列表（多个以逗号分隔） (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeInstanceNamesRequest(
    regionId string,
    resourceList string,
) *DescribeInstanceNamesRequest {

	return &DescribeInstanceNamesRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/cacheInstance:describeInstanceNames",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        ResourceList: resourceList,
	}
}

/*
 * param regionId: 缓存Redis实例所在区域的Region ID。目前有华北-北京、华南-广州、华东-上海三个区域，Region ID分别为cn-north-1、cn-south-1、cn-east-2 (Required)
 * param resourceList: 资源id列表（多个以逗号分隔） (Required)
 */
func NewDescribeInstanceNamesRequestWithAllParams(
    regionId string,
    resourceList string,
) *DescribeInstanceNamesRequest {

    return &DescribeInstanceNamesRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/cacheInstance:describeInstanceNames",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        ResourceList: resourceList,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeInstanceNamesRequestWithoutParam() *DescribeInstanceNamesRequest {

    return &DescribeInstanceNamesRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/cacheInstance:describeInstanceNames",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 缓存Redis实例所在区域的Region ID。目前有华北-北京、华南-广州、华东-上海三个区域，Region ID分别为cn-north-1、cn-south-1、cn-east-2(Required) */
func (r *DescribeInstanceNamesRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param resourceList: 资源id列表（多个以逗号分隔）(Required) */
func (r *DescribeInstanceNamesRequest) SetResourceList(resourceList string) {
    r.ResourceList = resourceList
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeInstanceNamesRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeInstanceNamesResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeInstanceNamesResult `json:"result"`
}

type DescribeInstanceNamesResult struct {
    Data []redis.InstanceName `json:"data"`
}