// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    jdsfadmin "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/jdsfadmin/models"
)

type GetTaskLogListRequest struct {

    core.JDCloudRequest

    /* 可用区id  */
    RegionId string `json:"regionId"`

    /* 分页容量,默认100 (Optional) */
    PageSize *int `json:"pageSize"`

    /* 当前要请求的页数 default 1 (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 用户Pin (Optional) */
    UserPin *string `json:"userPin"`

    /* 触发器名称 (Optional) */
    TriggerName *string `json:"triggerName"`

    /* 触发器组名 (Optional) */
    TriggerGroup *string `json:"triggerGroup"`
}

/*
 * param regionId: 可用区id (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetTaskLogListRequest(
    regionId string,
) *GetTaskLogListRequest {

	return &GetTaskLogListRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/scheduled_tasks_logs",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 可用区id (Required)
 * param pageSize: 分页容量,默认100 (Optional)
 * param pageNumber: 当前要请求的页数 default 1 (Optional)
 * param userPin: 用户Pin (Optional)
 * param triggerName: 触发器名称 (Optional)
 * param triggerGroup: 触发器组名 (Optional)
 */
func NewGetTaskLogListRequestWithAllParams(
    regionId string,
    pageSize *int,
    pageNumber *int,
    userPin *string,
    triggerName *string,
    triggerGroup *string,
) *GetTaskLogListRequest {

    return &GetTaskLogListRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/scheduled_tasks_logs",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        PageSize: pageSize,
        PageNumber: pageNumber,
        UserPin: userPin,
        TriggerName: triggerName,
        TriggerGroup: triggerGroup,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetTaskLogListRequestWithoutParam() *GetTaskLogListRequest {

    return &GetTaskLogListRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/scheduled_tasks_logs",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 可用区id(Required) */
func (r *GetTaskLogListRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param pageSize: 分页容量,默认100(Optional) */
func (r *GetTaskLogListRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param pageNumber: 当前要请求的页数 default 1(Optional) */
func (r *GetTaskLogListRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

/* param userPin: 用户Pin(Optional) */
func (r *GetTaskLogListRequest) SetUserPin(userPin string) {
    r.UserPin = &userPin
}

/* param triggerName: 触发器名称(Optional) */
func (r *GetTaskLogListRequest) SetTriggerName(triggerName string) {
    r.TriggerName = &triggerName
}

/* param triggerGroup: 触发器组名(Optional) */
func (r *GetTaskLogListRequest) SetTriggerGroup(triggerGroup string) {
    r.TriggerGroup = &triggerGroup
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetTaskLogListRequest) GetRegionId() string {
    return r.RegionId
}

type GetTaskLogListResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetTaskLogListResult `json:"result"`
}

type GetTaskLogListResult struct {
    LogList []jdsfadmin.ScheduledTaskLog `json:"logList"`
    TotalCount int `json:"totalCount"`
}