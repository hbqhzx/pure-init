// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type UpdateSettingsRequest struct {

    core.JDCloudRequest

    /* 可用区id  */
    RegionId string `json:"regionId"`

    /* 设置的key  */
    SettingKey string `json:"settingKey"`

    /* 设置的值  */
    SettingValue string `json:"settingValue"`

    /* 设置的描述信息 (Optional) */
    SettingDesc *string `json:"settingDesc"`
}

/*
 * param regionId: 可用区id (Required)
 * param settingKey: 设置的key (Required)
 * param settingValue: 设置的值 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateSettingsRequest(
    regionId string,
    settingKey string,
    settingValue string,
) *UpdateSettingsRequest {

	return &UpdateSettingsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/settings/{settingKey}",
			Method:  "PUT",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        SettingKey: settingKey,
        SettingValue: settingValue,
	}
}

/*
 * param regionId: 可用区id (Required)
 * param settingKey: 设置的key (Required)
 * param settingValue: 设置的值 (Required)
 * param settingDesc: 设置的描述信息 (Optional)
 */
func NewUpdateSettingsRequestWithAllParams(
    regionId string,
    settingKey string,
    settingValue string,
    settingDesc *string,
) *UpdateSettingsRequest {

    return &UpdateSettingsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/settings/{settingKey}",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        SettingKey: settingKey,
        SettingValue: settingValue,
        SettingDesc: settingDesc,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateSettingsRequestWithoutParam() *UpdateSettingsRequest {

    return &UpdateSettingsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/settings/{settingKey}",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 可用区id(Required) */
func (r *UpdateSettingsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param settingKey: 设置的key(Required) */
func (r *UpdateSettingsRequest) SetSettingKey(settingKey string) {
    r.SettingKey = settingKey
}

/* param settingValue: 设置的值(Required) */
func (r *UpdateSettingsRequest) SetSettingValue(settingValue string) {
    r.SettingValue = settingValue
}

/* param settingDesc: 设置的描述信息(Optional) */
func (r *UpdateSettingsRequest) SetSettingDesc(settingDesc string) {
    r.SettingDesc = &settingDesc
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateSettingsRequest) GetRegionId() string {
    return r.RegionId
}

type UpdateSettingsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateSettingsResult `json:"result"`
}

type UpdateSettingsResult struct {
    UpdateSettingResult string `json:"updateSettingResult"`
}