// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type UpdateProductLimitRequest struct {

    core.JDCloudRequest

    /* 区域id  */
    RegionId string `json:"regionId"`

    /* 主键Id  */
    Id int `json:"id"`

    /* 限额  */
    LimitCount int `json:"limitCount"`

    /* 限制规则描述  */
    Description string `json:"description"`
}

/*
 * param regionId: 区域id (Required)
 * param id: 主键Id (Required)
 * param limitCount: 限额 (Required)
 * param description: 限制规则描述 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateProductLimitRequest(
    regionId string,
    id int,
    limitCount int,
    description string,
) *UpdateProductLimitRequest {

	return &UpdateProductLimitRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/product_resource_limits/{id}",
			Method:  "PUT",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        Id: id,
        LimitCount: limitCount,
        Description: description,
	}
}

/*
 * param regionId: 区域id (Required)
 * param id: 主键Id (Required)
 * param limitCount: 限额 (Required)
 * param description: 限制规则描述 (Required)
 */
func NewUpdateProductLimitRequestWithAllParams(
    regionId string,
    id int,
    limitCount int,
    description string,
) *UpdateProductLimitRequest {

    return &UpdateProductLimitRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/product_resource_limits/{id}",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Id: id,
        LimitCount: limitCount,
        Description: description,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateProductLimitRequestWithoutParam() *UpdateProductLimitRequest {

    return &UpdateProductLimitRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/product_resource_limits/{id}",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 区域id(Required) */
func (r *UpdateProductLimitRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param id: 主键Id(Required) */
func (r *UpdateProductLimitRequest) SetId(id int) {
    r.Id = id
}

/* param limitCount: 限额(Required) */
func (r *UpdateProductLimitRequest) SetLimitCount(limitCount int) {
    r.LimitCount = limitCount
}

/* param description: 限制规则描述(Required) */
func (r *UpdateProductLimitRequest) SetDescription(description string) {
    r.Description = description
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateProductLimitRequest) GetRegionId() string {
    return r.RegionId
}

type UpdateProductLimitResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateProductLimitResult `json:"result"`
}

type UpdateProductLimitResult struct {
    UpdateResult string `json:"updateResult"`
}