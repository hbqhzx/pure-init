// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type PublishAppConfigVersionRequest struct {

    core.JDCloudRequest

    /* 可用区id  */
    RegionId string `json:"regionId"`

    /* 应用配置 Id  */
    AppConfigId string `json:"appConfigId"`

    /* 版本 Id  */
    VersionId string `json:"versionId"`

    /* 应用环境 profile  */
    AppProfile string `json:"appProfile"`

    /* 存储类型  */
    PublishStorageType string `json:"publishStorageType"`

    /* 发布备注信息 (Optional) */
    PublishRemark *string `json:"publishRemark"`

    /* 发布资源信息 (Optional) */
    PublishSourceInfo *string `json:"publishSourceInfo"`
}

/*
 * param regionId: 可用区id (Required)
 * param appConfigId: 应用配置 Id (Required)
 * param versionId: 版本 Id (Required)
 * param appProfile: 应用环境 profile (Required)
 * param publishStorageType: 存储类型 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewPublishAppConfigVersionRequest(
    regionId string,
    appConfigId string,
    versionId string,
    appProfile string,
    publishStorageType string,
) *PublishAppConfigVersionRequest {

	return &PublishAppConfigVersionRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/appconfig/{appConfigId}/versions/{versionId}:publish",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        AppConfigId: appConfigId,
        VersionId: versionId,
        AppProfile: appProfile,
        PublishStorageType: publishStorageType,
	}
}

/*
 * param regionId: 可用区id (Required)
 * param appConfigId: 应用配置 Id (Required)
 * param versionId: 版本 Id (Required)
 * param appProfile: 应用环境 profile (Required)
 * param publishStorageType: 存储类型 (Required)
 * param publishRemark: 发布备注信息 (Optional)
 * param publishSourceInfo: 发布资源信息 (Optional)
 */
func NewPublishAppConfigVersionRequestWithAllParams(
    regionId string,
    appConfigId string,
    versionId string,
    appProfile string,
    publishStorageType string,
    publishRemark *string,
    publishSourceInfo *string,
) *PublishAppConfigVersionRequest {

    return &PublishAppConfigVersionRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/appconfig/{appConfigId}/versions/{versionId}:publish",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        AppConfigId: appConfigId,
        VersionId: versionId,
        AppProfile: appProfile,
        PublishStorageType: publishStorageType,
        PublishRemark: publishRemark,
        PublishSourceInfo: publishSourceInfo,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewPublishAppConfigVersionRequestWithoutParam() *PublishAppConfigVersionRequest {

    return &PublishAppConfigVersionRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/appconfig/{appConfigId}/versions/{versionId}:publish",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 可用区id(Required) */
func (r *PublishAppConfigVersionRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param appConfigId: 应用配置 Id(Required) */
func (r *PublishAppConfigVersionRequest) SetAppConfigId(appConfigId string) {
    r.AppConfigId = appConfigId
}

/* param versionId: 版本 Id(Required) */
func (r *PublishAppConfigVersionRequest) SetVersionId(versionId string) {
    r.VersionId = versionId
}

/* param appProfile: 应用环境 profile(Required) */
func (r *PublishAppConfigVersionRequest) SetAppProfile(appProfile string) {
    r.AppProfile = appProfile
}

/* param publishStorageType: 存储类型(Required) */
func (r *PublishAppConfigVersionRequest) SetPublishStorageType(publishStorageType string) {
    r.PublishStorageType = publishStorageType
}

/* param publishRemark: 发布备注信息(Optional) */
func (r *PublishAppConfigVersionRequest) SetPublishRemark(publishRemark string) {
    r.PublishRemark = &publishRemark
}

/* param publishSourceInfo: 发布资源信息(Optional) */
func (r *PublishAppConfigVersionRequest) SetPublishSourceInfo(publishSourceInfo string) {
    r.PublishSourceInfo = &publishSourceInfo
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r PublishAppConfigVersionRequest) GetRegionId() string {
    return r.RegionId
}

type PublishAppConfigVersionResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result PublishAppConfigVersionResult `json:"result"`
}

type PublishAppConfigVersionResult struct {
    PublishResult string `json:"publishResult"`
}