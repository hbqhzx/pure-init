// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    csa "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/csa/models"
)

type QueryWebsiteVulsRequest struct {

    core.JDCloudRequest

    /* 页码；默认为1 (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 分页大小；默认为10；取值范围[10, 100] (Optional) */
    PageSize *int `json:"pageSize"`

    /* 漏洞名称 (Optional) */
    Name *string `json:"name"`

    /* 漏洞类型 (Optional) */
    Category *int `json:"category"`

    /* 起始时间, 毫秒时间戳。如果不传，则需要传timeSpan (Optional) */
    TimeBegin *string `json:"timeBegin"`

    /* 结束时间, 毫秒时间戳, 不传为当前时间 (Optional) */
    TimeEnd *string `json:"timeEnd"`

    /* 天数，如果timeBegin，则该参数无效 (Optional) */
    TimeSpan *int `json:"timeSpan"`

    /* 事件等级,支持多个，逗号分隔 (Optional) */
    Severities *string `json:"severities"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryWebsiteVulsRequest(
) *QueryWebsiteVulsRequest {

	return &QueryWebsiteVulsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/websiteVuls",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param pageNumber: 页码；默认为1 (Optional)
 * param pageSize: 分页大小；默认为10；取值范围[10, 100] (Optional)
 * param name: 漏洞名称 (Optional)
 * param category: 漏洞类型 (Optional)
 * param timeBegin: 起始时间, 毫秒时间戳。如果不传，则需要传timeSpan (Optional)
 * param timeEnd: 结束时间, 毫秒时间戳, 不传为当前时间 (Optional)
 * param timeSpan: 天数，如果timeBegin，则该参数无效 (Optional)
 * param severities: 事件等级,支持多个，逗号分隔 (Optional)
 */
func NewQueryWebsiteVulsRequestWithAllParams(
    pageNumber *int,
    pageSize *int,
    name *string,
    category *int,
    timeBegin *string,
    timeEnd *string,
    timeSpan *int,
    severities *string,
) *QueryWebsiteVulsRequest {

    return &QueryWebsiteVulsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/websiteVuls",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        PageNumber: pageNumber,
        PageSize: pageSize,
        Name: name,
        Category: category,
        TimeBegin: timeBegin,
        TimeEnd: timeEnd,
        TimeSpan: timeSpan,
        Severities: severities,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryWebsiteVulsRequestWithoutParam() *QueryWebsiteVulsRequest {

    return &QueryWebsiteVulsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/websiteVuls",
            Method:  "GET",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param pageNumber: 页码；默认为1(Optional) */
func (r *QueryWebsiteVulsRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

/* param pageSize: 分页大小；默认为10；取值范围[10, 100](Optional) */
func (r *QueryWebsiteVulsRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param name: 漏洞名称(Optional) */
func (r *QueryWebsiteVulsRequest) SetName(name string) {
    r.Name = &name
}

/* param category: 漏洞类型(Optional) */
func (r *QueryWebsiteVulsRequest) SetCategory(category int) {
    r.Category = &category
}

/* param timeBegin: 起始时间, 毫秒时间戳。如果不传，则需要传timeSpan(Optional) */
func (r *QueryWebsiteVulsRequest) SetTimeBegin(timeBegin string) {
    r.TimeBegin = &timeBegin
}

/* param timeEnd: 结束时间, 毫秒时间戳, 不传为当前时间(Optional) */
func (r *QueryWebsiteVulsRequest) SetTimeEnd(timeEnd string) {
    r.TimeEnd = &timeEnd
}

/* param timeSpan: 天数，如果timeBegin，则该参数无效(Optional) */
func (r *QueryWebsiteVulsRequest) SetTimeSpan(timeSpan int) {
    r.TimeSpan = &timeSpan
}

/* param severities: 事件等级,支持多个，逗号分隔(Optional) */
func (r *QueryWebsiteVulsRequest) SetSeverities(severities string) {
    r.Severities = &severities
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryWebsiteVulsRequest) GetRegionId() string {
    return ""
}

type QueryWebsiteVulsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryWebsiteVulsResult `json:"result"`
}

type QueryWebsiteVulsResult struct {
    Data []csa.WebsiteVul `json:"data"`
    Total int `json:"total"`
}