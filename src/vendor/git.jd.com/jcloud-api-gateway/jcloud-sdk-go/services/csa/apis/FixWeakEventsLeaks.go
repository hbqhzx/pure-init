// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type FixWeakEventsLeaksRequest struct {

    core.JDCloudRequest

    /* 资产，多个用,分隔  */
    ServerIds string `json:"serverIds"`

    /* 资产，多个用,分隔  */
    RegionIds string `json:"regionIds"`

    /*   */
    WeakEventId string `json:"weakEventId"`
}

/*
 * param serverIds: 资产，多个用,分隔 (Required)
 * param regionIds: 资产，多个用,分隔 (Required)
 * param weakEventId:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewFixWeakEventsLeaksRequest(
    serverIds string,
    regionIds string,
    weakEventId string,
) *FixWeakEventsLeaksRequest {

	return &FixWeakEventsLeaksRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/weakEvents:fixLeaks",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        ServerIds: serverIds,
        RegionIds: regionIds,
        WeakEventId: weakEventId,
	}
}

/*
 * param serverIds: 资产，多个用,分隔 (Required)
 * param regionIds: 资产，多个用,分隔 (Required)
 * param weakEventId:  (Required)
 */
func NewFixWeakEventsLeaksRequestWithAllParams(
    serverIds string,
    regionIds string,
    weakEventId string,
) *FixWeakEventsLeaksRequest {

    return &FixWeakEventsLeaksRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/weakEvents:fixLeaks",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        ServerIds: serverIds,
        RegionIds: regionIds,
        WeakEventId: weakEventId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewFixWeakEventsLeaksRequestWithoutParam() *FixWeakEventsLeaksRequest {

    return &FixWeakEventsLeaksRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/weakEvents:fixLeaks",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param serverIds: 资产，多个用,分隔(Required) */
func (r *FixWeakEventsLeaksRequest) SetServerIds(serverIds string) {
    r.ServerIds = serverIds
}

/* param regionIds: 资产，多个用,分隔(Required) */
func (r *FixWeakEventsLeaksRequest) SetRegionIds(regionIds string) {
    r.RegionIds = regionIds
}

/* param weakEventId: (Required) */
func (r *FixWeakEventsLeaksRequest) SetWeakEventId(weakEventId string) {
    r.WeakEventId = weakEventId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r FixWeakEventsLeaksRequest) GetRegionId() string {
    return ""
}

type FixWeakEventsLeaksResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result FixWeakEventsLeaksResult `json:"result"`
}

type FixWeakEventsLeaksResult struct {
    Success bool `json:"success"`
    Message string `json:"message"`
}