// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    csa "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/csa/models"
)

type UpdateScanAssetConfigRequest struct {

    core.JDCloudRequest

    /* 扫描资产配置ID  */
    ScanAssetConfigId string `json:"scanAssetConfigId"`

    /* Cookie值  */
    Cookie string `json:"cookie"`
}

/*
 * param scanAssetConfigId: 扫描资产配置ID (Required)
 * param cookie: Cookie值 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateScanAssetConfigRequest(
    scanAssetConfigId string,
    cookie string,
) *UpdateScanAssetConfigRequest {

	return &UpdateScanAssetConfigRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/scanAssetConfigs/{scanAssetConfigId}",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        ScanAssetConfigId: scanAssetConfigId,
        Cookie: cookie,
	}
}

/*
 * param scanAssetConfigId: 扫描资产配置ID (Required)
 * param cookie: Cookie值 (Required)
 */
func NewUpdateScanAssetConfigRequestWithAllParams(
    scanAssetConfigId string,
    cookie string,
) *UpdateScanAssetConfigRequest {

    return &UpdateScanAssetConfigRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/scanAssetConfigs/{scanAssetConfigId}",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        ScanAssetConfigId: scanAssetConfigId,
        Cookie: cookie,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateScanAssetConfigRequestWithoutParam() *UpdateScanAssetConfigRequest {

    return &UpdateScanAssetConfigRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/scanAssetConfigs/{scanAssetConfigId}",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param scanAssetConfigId: 扫描资产配置ID(Required) */
func (r *UpdateScanAssetConfigRequest) SetScanAssetConfigId(scanAssetConfigId string) {
    r.ScanAssetConfigId = scanAssetConfigId
}

/* param cookie: Cookie值(Required) */
func (r *UpdateScanAssetConfigRequest) SetCookie(cookie string) {
    r.Cookie = cookie
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateScanAssetConfigRequest) GetRegionId() string {
    return ""
}

type UpdateScanAssetConfigResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateScanAssetConfigResult `json:"result"`
}

type UpdateScanAssetConfigResult struct {
    ScanAssetConfig csa.ScanAssetConfig `json:"scanAssetConfig"`
    Message string `json:"message"`
}