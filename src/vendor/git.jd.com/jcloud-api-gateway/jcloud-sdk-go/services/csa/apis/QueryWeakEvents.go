// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    csa "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/csa/models"
)

type QueryWeakEventsRequest struct {

    core.JDCloudRequest

    /*  (Optional) */
    RiskName *string `json:"riskName"`

    /*  (Optional) */
    PageNumber *int `json:"pageNumber"`

    /*  (Optional) */
    PageSize *int `json:"pageSize"`

    /* 事件等级,支持多个，逗号分隔 (Optional) */
    Severities *string `json:"severities"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryWeakEventsRequest(
) *QueryWeakEventsRequest {

	return &QueryWeakEventsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/weakEvents",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param riskName:  (Optional)
 * param pageNumber:  (Optional)
 * param pageSize:  (Optional)
 * param severities: 事件等级,支持多个，逗号分隔 (Optional)
 */
func NewQueryWeakEventsRequestWithAllParams(
    riskName *string,
    pageNumber *int,
    pageSize *int,
    severities *string,
) *QueryWeakEventsRequest {

    return &QueryWeakEventsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/weakEvents",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RiskName: riskName,
        PageNumber: pageNumber,
        PageSize: pageSize,
        Severities: severities,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryWeakEventsRequestWithoutParam() *QueryWeakEventsRequest {

    return &QueryWeakEventsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/weakEvents",
            Method:  "GET",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param riskName: (Optional) */
func (r *QueryWeakEventsRequest) SetRiskName(riskName string) {
    r.RiskName = &riskName
}

/* param pageNumber: (Optional) */
func (r *QueryWeakEventsRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

/* param pageSize: (Optional) */
func (r *QueryWeakEventsRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param severities: 事件等级,支持多个，逗号分隔(Optional) */
func (r *QueryWeakEventsRequest) SetSeverities(severities string) {
    r.Severities = &severities
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryWeakEventsRequest) GetRegionId() string {
    return ""
}

type QueryWeakEventsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryWeakEventsResult `json:"result"`
}

type QueryWeakEventsResult struct {
    LeakInfos []csa.LeakInfo `json:"leakInfos"`
    TotalCount int `json:"totalCount"`
}