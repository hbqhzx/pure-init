// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type QueryScanVulCountsRequest struct {

    core.JDCloudRequest

    /* 事件等级,支持多个，逗号分隔 (Optional) */
    Severities *string `json:"severities"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryScanVulCountsRequest(
) *QueryScanVulCountsRequest {

	return &QueryScanVulCountsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/scanVuls:queryCounts",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param severities: 事件等级,支持多个，逗号分隔 (Optional)
 */
func NewQueryScanVulCountsRequestWithAllParams(
    severities *string,
) *QueryScanVulCountsRequest {

    return &QueryScanVulCountsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/scanVuls:queryCounts",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        Severities: severities,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryScanVulCountsRequestWithoutParam() *QueryScanVulCountsRequest {

    return &QueryScanVulCountsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/scanVuls:queryCounts",
            Method:  "GET",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param severities: 事件等级,支持多个，逗号分隔(Optional) */
func (r *QueryScanVulCountsRequest) SetSeverities(severities string) {
    r.Severities = &severities
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryScanVulCountsRequest) GetRegionId() string {
    return ""
}

type QueryScanVulCountsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryScanVulCountsResult `json:"result"`
}

type QueryScanVulCountsResult struct {
    EmergencyCount int `json:"emergencyCount"`
    WebCount int `json:"webCount"`
}