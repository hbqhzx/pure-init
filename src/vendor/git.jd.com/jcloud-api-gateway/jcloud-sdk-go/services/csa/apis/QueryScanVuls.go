// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    csa "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/csa/models"
)

type QueryScanVulsRequest struct {

    core.JDCloudRequest

    /* 页码；默认为1 (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 分页大小；默认为10；取值范围[10, 100] (Optional) */
    PageSize *int `json:"pageSize"`

    /* 漏洞类型:1应急漏洞，2网站漏洞  */
    Category int `json:"category"`

    /* 漏洞名称查询关键字 (Optional) */
    Name *string `json:"name"`

    /* 事件等级,支持多个，逗号分隔 (Optional) */
    Severities *string `json:"severities"`
}

/*
 * param category: 漏洞类型:1应急漏洞，2网站漏洞 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryScanVulsRequest(
    category int,
) *QueryScanVulsRequest {

	return &QueryScanVulsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/scanVuls",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        Category: category,
	}
}

/*
 * param pageNumber: 页码；默认为1 (Optional)
 * param pageSize: 分页大小；默认为10；取值范围[10, 100] (Optional)
 * param category: 漏洞类型:1应急漏洞，2网站漏洞 (Required)
 * param name: 漏洞名称查询关键字 (Optional)
 * param severities: 事件等级,支持多个，逗号分隔 (Optional)
 */
func NewQueryScanVulsRequestWithAllParams(
    pageNumber *int,
    pageSize *int,
    category int,
    name *string,
    severities *string,
) *QueryScanVulsRequest {

    return &QueryScanVulsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/scanVuls",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        PageNumber: pageNumber,
        PageSize: pageSize,
        Category: category,
        Name: name,
        Severities: severities,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryScanVulsRequestWithoutParam() *QueryScanVulsRequest {

    return &QueryScanVulsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/scanVuls",
            Method:  "GET",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param pageNumber: 页码；默认为1(Optional) */
func (r *QueryScanVulsRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

/* param pageSize: 分页大小；默认为10；取值范围[10, 100](Optional) */
func (r *QueryScanVulsRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param category: 漏洞类型:1应急漏洞，2网站漏洞(Required) */
func (r *QueryScanVulsRequest) SetCategory(category int) {
    r.Category = category
}

/* param name: 漏洞名称查询关键字(Optional) */
func (r *QueryScanVulsRequest) SetName(name string) {
    r.Name = &name
}

/* param severities: 事件等级,支持多个，逗号分隔(Optional) */
func (r *QueryScanVulsRequest) SetSeverities(severities string) {
    r.Severities = &severities
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryScanVulsRequest) GetRegionId() string {
    return ""
}

type QueryScanVulsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryScanVulsResult `json:"result"`
}

type QueryScanVulsResult struct {
    ScanVuls csa.ScanVul `json:"scanVuls"`
    Message string `json:"message"`
}