// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type UpdateAssetNidsStatusRequest struct {

    core.JDCloudRequest

    /* 公网Ip  */
    FloatingIp string `json:"floatingIp"`

    /* 资产监控状态， 1:开，0:关  */
    NidsStatus int `json:"nidsStatus"`
}

/*
 * param floatingIp: 公网Ip (Required)
 * param nidsStatus: 资产监控状态， 1:开，0:关 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateAssetNidsStatusRequest(
    floatingIp string,
    nidsStatus int,
) *UpdateAssetNidsStatusRequest {

	return &UpdateAssetNidsStatusRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/asset:updateNidsStatus",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        FloatingIp: floatingIp,
        NidsStatus: nidsStatus,
	}
}

/*
 * param floatingIp: 公网Ip (Required)
 * param nidsStatus: 资产监控状态， 1:开，0:关 (Required)
 */
func NewUpdateAssetNidsStatusRequestWithAllParams(
    floatingIp string,
    nidsStatus int,
) *UpdateAssetNidsStatusRequest {

    return &UpdateAssetNidsStatusRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/asset:updateNidsStatus",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        FloatingIp: floatingIp,
        NidsStatus: nidsStatus,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateAssetNidsStatusRequestWithoutParam() *UpdateAssetNidsStatusRequest {

    return &UpdateAssetNidsStatusRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/asset:updateNidsStatus",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param floatingIp: 公网Ip(Required) */
func (r *UpdateAssetNidsStatusRequest) SetFloatingIp(floatingIp string) {
    r.FloatingIp = floatingIp
}

/* param nidsStatus: 资产监控状态， 1:开，0:关(Required) */
func (r *UpdateAssetNidsStatusRequest) SetNidsStatus(nidsStatus int) {
    r.NidsStatus = nidsStatus
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateAssetNidsStatusRequest) GetRegionId() string {
    return ""
}

type UpdateAssetNidsStatusResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateAssetNidsStatusResult `json:"result"`
}

type UpdateAssetNidsStatusResult struct {
    Code int `json:"code"`
    Message string `json:"message"`
}