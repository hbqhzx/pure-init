// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
    jdmesh "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/services/jdmesh/models"
)

type DescribeBasicConfigRequest struct {

    core.JDCloudRequest

    /* 环境名，pre/product  */
    Env string `json:"env"`

    /* 应用ID  */
    AppId string `json:"appId"`
}

/*
 * param env: 环境名，pre/product (Required)
 * param appId: 应用ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeBasicConfigRequest(
    env string,
    appId string,
) *DescribeBasicConfigRequest {

	return &DescribeBasicConfigRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/envs/{env}/apps/{appId}/basicconfig",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        Env: env,
        AppId: appId,
	}
}

/*
 * param env: 环境名，pre/product (Required)
 * param appId: 应用ID (Required)
 */
func NewDescribeBasicConfigRequestWithAllParams(
    env string,
    appId string,
) *DescribeBasicConfigRequest {

    return &DescribeBasicConfigRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/envs/{env}/apps/{appId}/basicconfig",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        Env: env,
        AppId: appId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeBasicConfigRequestWithoutParam() *DescribeBasicConfigRequest {

    return &DescribeBasicConfigRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/envs/{env}/apps/{appId}/basicconfig",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param env: 环境名，pre/product(Required) */
func (r *DescribeBasicConfigRequest) SetEnv(env string) {
    r.Env = env
}

/* param appId: 应用ID(Required) */
func (r *DescribeBasicConfigRequest) SetAppId(appId string) {
    r.AppId = appId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeBasicConfigRequest) GetRegionId() string {
    return ""
}

type DescribeBasicConfigResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeBasicConfigResult `json:"result"`
}

type DescribeBasicConfigResult struct {
    BasicConfig jdmesh.BasicConfig `json:"basicConfig"`
}