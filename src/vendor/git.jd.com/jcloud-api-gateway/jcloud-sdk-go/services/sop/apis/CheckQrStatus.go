// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type CheckQrStatusRequest struct {

    core.JDCloudRequest

    /* 轮训扫码结果的ticket  */
    Uuid string `json:"uuid"`
}

/*
 * param uuid: 轮训扫码结果的ticket (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCheckQrStatusRequest(
    uuid string,
) *CheckQrStatusRequest {

	return &CheckQrStatusRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/securityToken/virtualMFA/qrCode/status",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        Uuid: uuid,
	}
}

/*
 * param uuid: 轮训扫码结果的ticket (Required)
 */
func NewCheckQrStatusRequestWithAllParams(
    uuid string,
) *CheckQrStatusRequest {

    return &CheckQrStatusRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/securityToken/virtualMFA/qrCode/status",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        Uuid: uuid,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCheckQrStatusRequestWithoutParam() *CheckQrStatusRequest {

    return &CheckQrStatusRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/securityToken/virtualMFA/qrCode/status",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param uuid: 轮训扫码结果的ticket(Required) */
func (r *CheckQrStatusRequest) SetUuid(uuid string) {
    r.Uuid = uuid
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CheckQrStatusRequest) GetRegionId() string {
    return ""
}

type CheckQrStatusResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CheckQrStatusResult `json:"result"`
}

type CheckQrStatusResult struct {
    Status int `json:"status"`
    SecurityToken string `json:"securityToken"`
}