// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "git.jd.com/jcloud-api-gateway/jcloud-sdk-go/core"
)

type PayOrderRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* resourceId ID  */
    OrderNumber string `json:"orderNumber"`

    /* 用户pin (Optional) */
    Pin *string `json:"pin"`

    /*  (Optional) */
    BankCode *string `json:"bankCode"`

    /*  (Optional) */
    Ip *string `json:"ip"`

    /*  (Optional) */
    DeviceInfo *string `json:"deviceInfo"`

    /*  (Optional) */
    VoucherNumber *string `json:"voucherNumber"`

    /*  (Optional) */
    BalancePrice *int `json:"balancePrice"`

    /*  (Optional) */
    MoneyPrice *int `json:"moneyPrice"`

    /*  (Optional) */
    VoucherPrice *int `json:"voucherPrice"`

    /*  (Optional) */
    DiscountFee *int `json:"discountFee"`

    /*  (Optional) */
    PaymentChannel *int `json:"paymentChannel"`

    /*  (Optional) */
    Code *string `json:"code"`

    /*  (Optional) */
    Value *string `json:"value"`

    /*  (Optional) */
    Type *int `json:"type"`

    /*  (Optional) */
    Discount *int `json:"discount"`
}

/*
 * param regionId: Region ID (Required)
 * param orderNumber: resourceId ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewPayOrderRequest(
    regionId string,
    orderNumber string,
) *PayOrderRequest {

	return &PayOrderRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/order/{orderNumber}:pay",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        OrderNumber: orderNumber,
	}
}

/*
 * param regionId: Region ID (Required)
 * param orderNumber: resourceId ID (Required)
 * param pin: 用户pin (Optional)
 * param bankCode:  (Optional)
 * param ip:  (Optional)
 * param deviceInfo:  (Optional)
 * param voucherNumber:  (Optional)
 * param balancePrice:  (Optional)
 * param moneyPrice:  (Optional)
 * param voucherPrice:  (Optional)
 * param discountFee:  (Optional)
 * param paymentChannel:  (Optional)
 * param code:  (Optional)
 * param value:  (Optional)
 * param type_:  (Optional)
 * param discount:  (Optional)
 */
func NewPayOrderRequestWithAllParams(
    regionId string,
    orderNumber string,
    pin *string,
    bankCode *string,
    ip *string,
    deviceInfo *string,
    voucherNumber *string,
    balancePrice *int,
    moneyPrice *int,
    voucherPrice *int,
    discountFee *int,
    paymentChannel *int,
    code *string,
    value *string,
    type_ *int,
    discount *int,
) *PayOrderRequest {

    return &PayOrderRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/order/{orderNumber}:pay",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        OrderNumber: orderNumber,
        Pin: pin,
        BankCode: bankCode,
        Ip: ip,
        DeviceInfo: deviceInfo,
        VoucherNumber: voucherNumber,
        BalancePrice: balancePrice,
        MoneyPrice: moneyPrice,
        VoucherPrice: voucherPrice,
        DiscountFee: discountFee,
        PaymentChannel: paymentChannel,
        Code: code,
        Value: value,
        Type: type_,
        Discount: discount,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewPayOrderRequestWithoutParam() *PayOrderRequest {

    return &PayOrderRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/order/{orderNumber}:pay",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *PayOrderRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param orderNumber: resourceId ID(Required) */
func (r *PayOrderRequest) SetOrderNumber(orderNumber string) {
    r.OrderNumber = orderNumber
}

/* param pin: 用户pin(Optional) */
func (r *PayOrderRequest) SetPin(pin string) {
    r.Pin = &pin
}

/* param bankCode: (Optional) */
func (r *PayOrderRequest) SetBankCode(bankCode string) {
    r.BankCode = &bankCode
}

/* param ip: (Optional) */
func (r *PayOrderRequest) SetIp(ip string) {
    r.Ip = &ip
}

/* param deviceInfo: (Optional) */
func (r *PayOrderRequest) SetDeviceInfo(deviceInfo string) {
    r.DeviceInfo = &deviceInfo
}

/* param voucherNumber: (Optional) */
func (r *PayOrderRequest) SetVoucherNumber(voucherNumber string) {
    r.VoucherNumber = &voucherNumber
}

/* param balancePrice: (Optional) */
func (r *PayOrderRequest) SetBalancePrice(balancePrice int) {
    r.BalancePrice = &balancePrice
}

/* param moneyPrice: (Optional) */
func (r *PayOrderRequest) SetMoneyPrice(moneyPrice int) {
    r.MoneyPrice = &moneyPrice
}

/* param voucherPrice: (Optional) */
func (r *PayOrderRequest) SetVoucherPrice(voucherPrice int) {
    r.VoucherPrice = &voucherPrice
}

/* param discountFee: (Optional) */
func (r *PayOrderRequest) SetDiscountFee(discountFee int) {
    r.DiscountFee = &discountFee
}

/* param paymentChannel: (Optional) */
func (r *PayOrderRequest) SetPaymentChannel(paymentChannel int) {
    r.PaymentChannel = &paymentChannel
}

/* param code: (Optional) */
func (r *PayOrderRequest) SetCode(code string) {
    r.Code = &code
}

/* param value: (Optional) */
func (r *PayOrderRequest) SetValue(value string) {
    r.Value = &value
}

/* param type_: (Optional) */
func (r *PayOrderRequest) SetType(type_ int) {
    r.Type = &type_
}

/* param discount: (Optional) */
func (r *PayOrderRequest) SetDiscount(discount int) {
    r.Discount = &discount
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r PayOrderRequest) GetRegionId() string {
    return r.RegionId
}

type PayOrderResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result PayOrderResult `json:"result"`
}

type PayOrderResult struct {
    Url string `json:"url"`
    OrderNumber string `json:"orderNumber"`
}